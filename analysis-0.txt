Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 16.79      2.00     2.00 17981946     0.00     0.00  update_xrays_by_pawn(Board*, Coordinate, Piece, bool)
 15.37      3.83     1.83 20713292     0.00     0.00  update_xrays_by_piece(Board*, Coordinate, Piece, bool)
 14.44      5.55     1.72 48874160     0.00     0.00  update_weak_squares(Board*, Color, int)
  6.72      6.35     0.80 22061924     0.00     0.00  update_king_attacks(Board*, Coordinate, Color, bool)
  5.96      7.06     0.71 40043870     0.00     0.00  change_piece(Board*, Coordinate, Piece, bool)
  4.62      7.61     0.55 186455824     0.00     0.00  max_ray_len(int, int, int, int)
  4.11      8.10     0.49 20021936     0.00     0.00  add_eval_diff(Board*, Coordinate, Piece, bool)
  1.81      8.32     0.22 211482307     0.00     0.00  is_valid(Coordinate)
  1.81      8.53     0.22 80451581     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::back()
  1.39      8.70     0.17 145328224     0.00     0.00  flip_color(Color)
  1.34      8.86     0.16 80451581     0.00     0.00  __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator-(long) const
  1.34      9.02     0.16   383362     0.00     0.03  get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000])
  1.26      9.17     0.15 16690725     0.00     0.00  kronecker_piece(Board const*, Coordinate, Piece)
  1.01      9.29     0.12 80451591     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::end()
  1.01      9.41     0.12 17981946     0.00     0.00  update_least_advanced(Board*, Color, int)
  1.01      9.53     0.12  9671735     0.00     0.00  apply_move(Board*, Move)
  0.88      9.63     0.11 20736619     0.00     0.00  piece_equals(Piece, Piece)
  0.76      9.72     0.09 39288272     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const
  0.76      9.81     0.09  9594601     0.00     0.00  evaluate(Board*)
  0.67      9.89     0.08 160903182     0.00     0.00  __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&)
  0.67      9.97     0.08 39496651     0.00     0.00  add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color)
  0.67     10.05     0.08 39288272     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back()
  0.67     10.13     0.08  9671734     0.00     0.00  undo_move(Board*, Move)
  0.63     10.21     0.08  9671735     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&)
  0.63     10.28     0.08        1    75.01    75.01  _GLOBAL__sub_I__Z10print_movePK5Board4Move
  0.59     10.35     0.07 80451581     0.00     0.00  __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator*() const
  0.59     10.42     0.07 29015213     0.00     0.00  int&& std::forward<int>(std::remove_reference<int>::type&)
  0.59     10.49     0.07        2    35.00    35.00  void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&)
  0.55     10.56     0.07 19343470     0.00     0.00  void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&)
  0.50     10.62     0.06  9671735     0.00     0.00  is_irreversible(Move, Piece)
  0.50     10.68     0.06  8851752     0.00     0.00  add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color)
  0.50     10.74     0.06   243106     0.00     0.03  shallow_greedy_move(Board*)
  0.46     10.79     0.06 78576554     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&)
  0.42     10.84     0.05 19343470     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&)
  0.42     10.89     0.05 19266336     0.00     0.00  std::vector<int, std::allocator<int> >::back()
  0.34     10.93     0.04 115283766     0.00     0.00  get_piece(Board const*, Coordinate)
  0.34     10.97     0.04 63488510     0.00     0.00  quintant_from(Coordinate)
  0.34     11.01     0.04 39288277     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end()
  0.34     11.05     0.04 37874451     0.00     0.00  parity(Coordinate)
  0.34     11.09     0.04 19343468     0.00     0.00  void std::allocator_traits<std::allocator<Coordinate> >::destroy<Coordinate>(std::allocator<Coordinate>&, Coordinate*)
  0.34     11.13     0.04 19266336     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const
  0.34     11.17     0.04   673459     0.00     0.00  generate_knight_moves(Board const*, MoveList*, Coordinate)
  0.34     11.21     0.04   375354     0.00     0.00  generate_king_moves(Board const*, MoveList*, Coordinate)
  0.34     11.25     0.04   366146     0.00     0.00  generate_queen_moves(Board const*, MoveList*, Coordinate)
  0.34     11.29     0.04        5     8.00     8.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long)
  0.25     11.32     0.03 38532682     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
  0.25     11.35     0.03 19343468     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::pop_back()
  0.25     11.38     0.03  4045896     0.00     0.00  add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const
  0.25     11.41     0.03   378171     0.00     0.00  generate_moves(Board const*, MoveList*, Color)
  0.25     11.44     0.03        4     7.50    15.50  void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&)
  0.25     11.47     0.03                             Coordinate* std::__uninitialized_move_if_noexcept_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  0.21     11.50     0.03  9671736     0.00     0.00  void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&)
  0.17     11.52     0.02 38686948     0.00     0.00  Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&)
  0.17     11.54     0.02 38686944     0.00     0.00  operator new(unsigned long, void*)
  0.17     11.56     0.02 19266341     0.00     0.00  std::vector<int, std::allocator<int> >::end()
  0.17     11.58     0.02  9671735     0.00     0.00  void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&)
  0.17     11.60     0.02  9671735     0.00     0.00  void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&)
  0.17     11.62     0.02  9671734     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::pop_back()
  0.17     11.64     0.02   378171     0.00     0.00  generate_moves(Board const*, MoveList*)
  0.17     11.66     0.02    13602     0.00     0.04  order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])
  0.17     11.68     0.02     6526     0.00     0.00  void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.17     11.70     0.02        8     2.50     2.50  void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&)
  0.13     11.71     0.02                             __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > std::__miter_base<__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > >(__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >)
  0.08     11.72     0.01 39288272     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const
  0.08     11.73     0.01 29258348     0.00     0.00  is_capture(Move)
  0.08     11.74     0.01 19343470     0.00     0.00  void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&)
  0.08     11.75     0.01 19343468     0.00     0.00  void __gnu_cxx::new_allocator<Coordinate>::destroy<Coordinate>(Coordinate*)
  0.08     11.76     0.01  9671734     0.00     0.00  void std::allocator_traits<std::allocator<int> >::destroy<int>(std::allocator<int>&, int*)
  0.08     11.77     0.01  9671734     0.00     0.00  std::vector<int, std::allocator<int> >::pop_back()
  0.08     11.78     0.01  5846578     0.00     0.00  generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate)
  0.08     11.79     0.01   755626     0.00     0.00  generate_rook_moves(Board const*, MoveList*, Coordinate)
  0.08     11.80     0.01   543434     0.00     0.02  stable_eval(Board*, int, int, int)
  0.08     11.81     0.01   166335     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#1}>&&)
  0.08     11.82     0.01    27860     0.00     0.00  int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*)
  0.08     11.83     0.01    13540     0.00     0.00  int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.08     11.84     0.01        5     2.00     2.00  std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
  0.08     11.85     0.01        2     5.00    40.01  void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&)
  0.08     11.86     0.01                             __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
  0.08     11.87     0.01                             DisaggregatedScore* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore*, DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.08     11.88     0.01                             DisaggregatedScore* std::__uninitialized_copy_a<std::move_iterator<DisaggregatedScore*>, DisaggregatedScore*, DisaggregatedScore>(std::move_iterator<DisaggregatedScore*>, std::move_iterator<DisaggregatedScore*>, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.08     11.89     0.01                             DisaggregatedScore* std::__uninitialized_move_if_noexcept_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.08     11.90     0.01                             __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > std::copy<__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > >(__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >)
  0.04     11.91     0.01  9594601     0.00     0.00  score_total(DisaggregatedScore)
  0.04     11.91     0.01                             __gnu_cxx::new_allocator<Coordinate>::new_allocator(__gnu_cxx::new_allocator<Coordinate> const&)
  0.00     11.91     0.00 19343474     0.00     0.00  DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&)
  0.00     11.91     0.00 19266336     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const
  0.00     11.91     0.00 11577774     0.00     0.00  std::remove_reference<int&>::type&& std::move<int&>(int&)
  0.00     11.91     0.00  9671736     0.00     0.00  void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&)
  0.00     11.91     0.00  9671736     0.00     0.00  void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
  0.00     11.91     0.00  9671736     0.00     0.00  std::vector<int, std::allocator<int> >::push_back(int&&)
  0.00     11.91     0.00  9671734     0.00     0.00  void __gnu_cxx::new_allocator<DisaggregatedScore>::destroy<DisaggregatedScore>(DisaggregatedScore*)
  0.00     11.91     0.00  9671734     0.00     0.00  void __gnu_cxx::new_allocator<int>::destroy<int>(int*)
  0.00     11.91     0.00  9671734     0.00     0.00  void std::allocator_traits<std::allocator<DisaggregatedScore> >::destroy<DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*)
  0.00     11.91     0.00  2950584     0.00     0.00  generate_pawn_moves(Board const*, MoveList*, Coordinate)
  0.00     11.91     0.00  1030033     0.00     0.00  order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}::operator()(int, int) const
  0.00     11.91     0.00   949157     0.00     0.00  order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}::operator()(int, int) const
  0.00     11.91     0.00   725409     0.00     0.00  generate_bishop_moves(Board const*, MoveList*, Coordinate)
  0.00     11.91     0.00   674356     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::size() const
  0.00     11.91     0.00   674316     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::operator[](unsigned long)
  0.00     11.91     0.00   548700     0.00     0.00  bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int, int*>(int&, int*)
  0.00     11.91     0.00   519497     0.00     0.00  bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int, int*>(int&, int*)
  0.00     11.91     0.00   481333     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator())
  0.00     11.91     0.00   429660     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator())
  0.00     11.91     0.00   189715     0.00     0.00  std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&)
  0.00     11.91     0.00   179387     0.00     0.00  std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&)
  0.00     11.91     0.00   175563     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#2}>&&)
  0.00     11.91     0.00   175563     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>)
  0.00     11.91     0.00   175563     0.00     0.00  void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.91     0.00   175563     0.00     0.00  std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>(std::remove_reference&&)
  0.00     11.91     0.00   166335     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>)
  0.00     11.91     0.00   166335     0.00     0.00  void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.91     0.00   166335     0.00     0.00  std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>(std::remove_reference&&)
  0.00     11.91     0.00   146741     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&)
  0.00     11.91     0.00   146741     0.00     0.00  void std::iter_swap<int*, int*>(int*, int*)
  0.00     11.91     0.00    83610     0.00     0.00  int* std::__niter_base<int*>(int*)
  0.00     11.91     0.00    55720     0.00     0.00  int* std::__miter_base<int*>(int*)
  0.00     11.91     0.00    27860     0.00     0.00  int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*)
  0.00     11.91     0.00    27860     0.00     0.00  int* std::__niter_wrap<int*>(int* const&, int*)
  0.00     11.91     0.00    27860     0.00     0.00  int* std::move_backward<int*, int*>(int*, int*, int*)
  0.00     11.91     0.00    27860     0.00     0.00  int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
  0.00     11.91     0.00    13602     0.00     0.00  std::__lg(long)
  0.00     11.91     0.00    13540     0.00     0.00  void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.91     0.00    13540     0.00     0.00  int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.91     0.00    11717     0.00     0.00  int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.91     0.00    11717     0.00     0.00  void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.91     0.00    11717     0.00     0.00  int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.91     0.00     7076     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Iter_comp_iter({lambda(int, int)#2})
  0.00     11.91     0.00     7076     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter)
  0.00     11.91     0.00     7076     0.00     0.00  void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.91     0.00     7076     0.00     0.00  void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.91     0.00     7076     0.00     0.00  void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.91     0.00     7076     0.00     0.00  void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2})
  0.00     11.91     0.00     7076     0.00     0.00  void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.91     0.00     7071     0.00     0.00  void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.91     0.00     6526     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Iter_comp_iter({lambda(int, int)#1})
  0.00     11.91     0.00     6526     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter)
  0.00     11.91     0.00     6526     0.00     0.00  void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.91     0.00     6526     0.00     0.01  void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.91     0.00     6526     0.00     0.00  void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.91     0.00     6526     0.00     0.01  void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1})
  0.00     11.91     0.00     6526     0.00     0.01  void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.91     0.00     3435     0.00     0.00  std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  0.00     11.91     0.00     1734     0.00     0.00  std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
  0.00     11.91     0.00     1734     0.00     0.00  std::operator~(std::_Ios_Fmtflags)
  0.00     11.91     0.00     1707     0.00     0.00  std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
  0.00     11.91     0.00     1707     0.00     0.00  std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  0.00     11.91     0.00     1701     0.00     0.00  std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  0.00     11.91     0.00     1701     0.00     0.00  std::setw(int)
  0.00     11.91     0.00      866     0.00     0.00  print_move(Board const*, Move)
  0.00     11.91     0.00      256     0.00     0.00  print_board_fancy(Board const*)::{lambda(char const*, int)#1}::operator()(char const*, int) const
  0.00     11.91     0.00       60     0.00     0.00  Coordinate* std::__niter_base<Coordinate*>(Coordinate*)
  0.00     11.91     0.00       40     0.00     0.00  __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const
  0.00     11.91     0.00       40     0.00     0.00  unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
  0.00     11.91     0.00       33     0.00     0.00  std::ios_base::unsetf(std::_Ios_Fmtflags)
  0.00     11.91     0.00       30     0.00     0.00  __gnu_cxx::new_allocator<Coordinate>::max_size() const
  0.00     11.91     0.00       30     0.00     0.00  DisaggregatedScore* std::__niter_base<DisaggregatedScore*>(DisaggregatedScore*)
  0.00     11.91     0.00       22     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator()
  0.00     11.91     0.00       20     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const
  0.00     11.91     0.00       20     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
  0.00     11.91     0.00       20     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() const
  0.00     11.91     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const
  0.00     11.91     0.00       20     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::size() const
  0.00     11.91     0.00       20     0.00     0.00  std::vector<int, std::allocator<int> >::size() const
  0.00     11.91     0.00       20     0.00     0.00  std::allocator_traits<std::allocator<Coordinate> >::max_size(std::allocator<Coordinate> const&)
  0.00     11.91     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&)
  0.00     11.91     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  0.00     11.91     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_S_do_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&, std::integral_constant<bool, true>)
  0.00     11.91     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate()
  0.00     11.91     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_S_nothrow_relocate(std::integral_constant<bool, true>)
  0.00     11.91     0.00       20     0.00     0.00  Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  0.00     11.91     0.00       20     0.00     0.00  std::enable_if<std::__is_bitwise_relocatable<Coordinate, void>::value, Coordinate*>::type std::__relocate_a_1<Coordinate, Coordinate>(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  0.00     11.91     0.00       20     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00     11.91     0.00       16     0.00     0.00  print_board_fancy(Board const*)::{lambda(int const (*) [8][8], int)#3}::operator()(int const (*) [8][8], int) const
  0.00     11.91     0.00       15     0.00     0.00  __gnu_cxx::new_allocator<DisaggregatedScore>::max_size() const
  0.00     11.91     0.00       15     0.00     0.00  __gnu_cxx::new_allocator<int>::max_size() const
  0.00     11.91     0.00       14     0.00     0.00  print_board(Board const*)::{lambda()#1}::operator()() const
  0.00     11.91     0.00       12     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long)
  0.00     11.91     0.00       11     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator()
  0.00     11.91     0.00       11     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00     11.91     0.00       10     0.00     0.00  __gnu_cxx::new_allocator<Coordinate>::deallocate(Coordinate*, unsigned long)
  0.00     11.91     0.00       10     0.00     0.00  __gnu_cxx::new_allocator<Coordinate>::allocate(unsigned long, void const*)
  0.00     11.91     0.00       10     0.00     0.00  __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&)
  0.00     11.91     0.00       10     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() const
  0.00     11.91     0.00       10     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.00     11.91     0.00       10     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const
  0.00     11.91     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const
  0.00     11.91     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::max_size() const
  0.00     11.91     0.00       10     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long)
  0.00     11.91     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<Coordinate> >::deallocate(std::allocator<Coordinate>&, Coordinate*, unsigned long)
  0.00     11.91     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<Coordinate> >::allocate(std::allocator<Coordinate>&, unsigned long)
  0.00     11.91     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<DisaggregatedScore> >::max_size(std::allocator<DisaggregatedScore> const&)
  0.00     11.91     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
  0.00     11.91     0.00       10     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::begin()
  0.00     11.91     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&)
  0.00     11.91     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.00     11.91     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_do_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&, std::integral_constant<bool, true>)
  0.00     11.91     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate()
  0.00     11.91     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_nothrow_relocate(std::integral_constant<bool, true>)
  0.00     11.91     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)
  0.00     11.91     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&)
  0.00     11.91     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>)
  0.00     11.91     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::_S_use_relocate()
  0.00     11.91     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::_S_nothrow_relocate(std::integral_constant<bool, true>)
  0.00     11.91     0.00       10     0.00     0.00  DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.00     11.91     0.00       10     0.00     0.00  int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
  0.00     11.91     0.00       10     0.00     0.00  std::enable_if<std::__is_bitwise_relocatable<DisaggregatedScore, void>::value, DisaggregatedScore*>::type std::__relocate_a_1<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.00     11.91     0.00       10     0.00     0.00  std::enable_if<std::__is_bitwise_relocatable<int, void>::value, int*>::type std::__relocate_a_1<int, int>(int*, int*, int*, std::allocator<int>&)
  0.00     11.91     0.00        8     0.00     0.00  Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&)
  0.00     11.91     0.00        6     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long)
  0.00     11.91     0.00        6     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00     11.91     0.00        6     0.00     0.00  std::ios_base::setf(std::_Ios_Fmtflags)
  0.00     11.91     0.00        5     0.00     0.00  apply_null(Board*)
  0.00     11.91     0.00        5     0.00     0.00  undo_null(Board*)
  0.00     11.91     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<DisaggregatedScore>::deallocate(DisaggregatedScore*, unsigned long)
  0.00     11.91     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<DisaggregatedScore>::allocate(unsigned long, void const*)
  0.00     11.91     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
  0.00     11.91     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
  0.00     11.91     0.00        5     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&)
  0.00     11.91     0.00        5     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00     11.91     0.00        5     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const
  0.00     11.91     0.00        5     0.00     0.00  std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
  0.00     11.91     0.00        5     0.00     0.00  std::allocator_traits<std::allocator<DisaggregatedScore> >::deallocate(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, unsigned long)
  0.00     11.91     0.00        5     0.00     0.00  std::allocator_traits<std::allocator<DisaggregatedScore> >::allocate(std::allocator<DisaggregatedScore>&, unsigned long)
  0.00     11.91     0.00        5     0.00     0.00  std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)
  0.00     11.91     0.00        5     0.00     0.00  std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)
  0.00     11.91     0.00        5     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin()
  0.00     11.91     0.00        5     0.00     2.00  void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)
  0.00     11.91     0.00        5     0.00     0.00  std::vector<int, std::allocator<int> >::begin()
  0.00     11.91     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore const* const&)
  0.00     11.91     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
  0.00     11.91     0.00        4     0.00     0.00  DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&)
  0.00     11.91     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Coordinate>::new_allocator()
  0.00     11.91     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Coordinate>::~new_allocator()
  0.00     11.91     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const
  0.00     11.91     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const
  0.00     11.91     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator*() const
  0.00     11.91     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator-(long) const
  0.00     11.91     0.00        2     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() const
  0.00     11.91     0.00        2     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const
  0.00     11.91     0.00        2     0.00     0.00  std::vector<int, std::allocator<int> >::end() const
  0.00     11.91     0.00        2     0.00     0.00  std::vector<int, std::allocator<int> >::back() const
  0.00     11.91     0.00        2     0.00     0.00  std::allocator<Coordinate>::allocator()
  0.00     11.91     0.00        2     0.00     0.00  std::allocator<Coordinate>::~allocator()
  0.00     11.91     0.00        2     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Coordinate*>(Coordinate*, Coordinate*)
  0.00     11.91     0.00        2     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl()
  0.00     11.91     0.00        2     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::~_Vector_impl()
  0.00     11.91     0.00        2     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl_data::_Vector_impl_data()
  0.00     11.91     0.00        2     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_base()
  0.00     11.91     0.00        2     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base()
  0.00     11.91     0.00        2     0.00    40.01  void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&)
  0.00     11.91     0.00        2     0.00    40.01  void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&)
  0.00     11.91     0.00        2     0.00    40.01  std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&)
  0.00     11.91     0.00        2     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::vector()
  0.00     11.91     0.00        2     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::~vector()
  0.00     11.91     0.00        2     0.00     0.00  std::remove_reference<Coordinate&>::type&& std::move<Coordinate&>(Coordinate&)
  0.00     11.91     0.00        2     0.00     0.00  void std::_Destroy<Coordinate*>(Coordinate*, Coordinate*)
  0.00     11.91     0.00        2     0.00     0.00  void std::_Destroy<Coordinate*, Coordinate>(Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  0.00     11.91     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z10copy_board5Board
  0.00     11.91     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z11score_total18DisaggregatedScore
  0.00     11.91     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z13get_best_moveP5BoardiiibbiPA10000_8PVRecord
  0.00     11.91     0.00        1     0.00     0.00  _GLOBAL__sub_I_pv_table
  0.00     11.91     0.00        1     0.00    88.01  init_board(Board*)
  0.00     11.91     0.00        1     0.00     0.00  zero_table(PVRecord (*) [10000])
  0.00     11.91     0.00        1     0.00     0.00  print_board(Board const*)
  0.00     11.91     0.00        1     0.00     0.00  print_board_fancy(Board const*)
  0.00     11.91     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     11.91     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     11.91     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     11.91     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     11.91     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     11.91     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     11.91     0.00        1     0.00     0.00  print_pv(Board*, int, int, PVRecord (*) [10000])
  0.00     11.91     0.00        1     0.00     0.00  Board::Board()
  0.00     11.91     0.00        1     0.00     0.00  Board::~Board()
  0.00     11.91     0.00        1     0.00     0.00  void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&)
  0.00     11.91     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<DisaggregatedScore>::new_allocator()
  0.00     11.91     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<DisaggregatedScore>::~new_allocator()
  0.00     11.91     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00     11.91     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00     11.91     0.00        1     0.00     0.00  std::allocator<DisaggregatedScore>::allocator()
  0.00     11.91     0.00        1     0.00     0.00  std::allocator<DisaggregatedScore>::~allocator()
  0.00     11.91     0.00        1     0.00     0.00  std::allocator<int>::allocator()
  0.00     11.91     0.00        1     0.00     0.00  std::allocator<int>::~allocator()
  0.00     11.91     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*)
  0.00     11.91     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00     11.91     0.00        1     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl()
  0.00     11.91     0.00        1     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::~_Vector_impl()
  0.00     11.91     0.00        1     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl_data::_Vector_impl_data()
  0.00     11.91     0.00        1     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_base()
  0.00     11.91     0.00        1     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base()
  0.00     11.91     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00     11.91     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00     11.91     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data()
  0.00     11.91     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00     11.91     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00     11.91     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&)
  0.00     11.91     0.00        1     0.00     8.00  void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&)
  0.00     11.91     0.00        1     0.00     8.00  void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&)
  0.00     11.91     0.00        1     0.00     8.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&)
  0.00     11.91     0.00        1     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::vector()
  0.00     11.91     0.00        1     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector()
  0.00     11.91     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00     11.91     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00     11.91     0.00        1     0.00     0.00  std::remove_reference<DisaggregatedScore&>::type&& std::move<DisaggregatedScore&>(DisaggregatedScore&)
  0.00     11.91     0.00        1     0.00     0.00  void std::_Destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*)
  0.00     11.91     0.00        1     0.00     0.00  void std::_Destroy<DisaggregatedScore*, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.00     11.91     0.00        1     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00     11.91     0.00        1     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.08% of 11.91 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     98.5    0.00   11.74                 main [1]
                0.18   11.47       2/2           get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.00    0.09       1/1           init_board(Board*) [37]
                0.00    0.00       1/1           print_pv(Board*, int, int, PVRecord (*) [10000]) [113]
                0.00    0.00       1/9671735     apply_move(Board*, Move) [7]
                0.00    0.00       2/1701        std::setw(int) [174]
                0.00    0.00       1/1           Board::Board() [287]
                0.00    0.00       1/1           zero_table(PVRecord (*) [10000]) [278]
                0.00    0.00       1/1           print_board_fancy(Board const*) [280]
                0.00    0.00       1/1           print_board(Board const*) [279]
                0.00    0.00       1/1           Board::~Board() [288]
-----------------------------------------------
[2]     97.8    0.18   11.47       2+396962  <cycle 1 as a whole> [2]
                0.16   11.00  383362+2322602     get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.02    0.47   13602             order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
-----------------------------------------------
                             2322602             get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                              383360             order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
                0.18   11.47       2/2           main [1]
[3]     93.6    0.16   11.00  383362+2322602 get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.01    8.22  543434/543434      stable_eval(Board*, int, int, int) [5]
                0.03    1.45 2322597/9671735     apply_move(Board*, Move) [7]
                0.02    1.07 2322597/9671734     undo_move(Board*, Move) [8]
                0.01    0.15  135065/378171      generate_moves(Board const*, MoveList*) [17]
                0.02    0.03 2006001/9594601     evaluate(Board*) [23]
                0.00    0.00     862/866         print_move(Board const*, Move) [114]
                0.00    0.00      38/29258348     is_capture(Move) [89]
                0.00    0.00       5/5           apply_null(Board*) [115]
                0.00    0.00       5/5           undo_null(Board*) [116]
                0.00    0.00    1694/1701        std::setw(int) [174]
                               13602             order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
                             2322602             get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
-----------------------------------------------
                0.36    3.95 20021934/40043870     undo_move(Board*, Move) [8]
                0.36    3.95 20021936/40043870     apply_move(Board*, Move) [7]
[4]     72.3    0.71    7.90 40043870         change_piece(Board*, Coordinate, Piece, bool) [4]
                2.00    0.37 17981946/17981946     update_xrays_by_pawn(Board*, Coordinate, Piece, bool) [9]
                1.83    0.28 20713292/20713292     update_xrays_by_piece(Board*, Coordinate, Piece, bool) [10]
                1.72    0.00 48874160/48874160     update_weak_squares(Board*, Color, int) [11]
                0.80    0.11 22061924/22061924     update_king_attacks(Board*, Coordinate, Color, bool) [12]
                0.12    0.24 17981946/17981946     update_least_advanced(Board*, Color, int) [20]
                0.11    0.22 41426584/80451581     std::vector<Coordinate, std::allocator<Coordinate> >::back() [14]
                0.05    0.00 40043870/145328224     flip_color(Color) [28]
                0.03    0.00 41426584/63488510     quintant_from(Coordinate) [64]
                0.02    0.00 23432712/37874451     parity(Coordinate) [65]
-----------------------------------------------
                              163713             stable_eval(Board*, int, int, int) [5]
                0.01    8.22  543434/543434      get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[5]     69.1    0.01    8.22  543434+163713  stable_eval(Board*, int, int, int) [5]
                0.06    7.96  243106/243106      shallow_greedy_move(Board*) [6]
                0.00    0.10  163713/9671735     apply_move(Board*, Move) [7]
                0.00    0.08  163713/9671734     undo_move(Board*, Move) [8]
                0.01    0.01  786540/9594601     evaluate(Board*) [23]
                0.00    0.00  243106/29258348     is_capture(Move) [89]
                              163713             stable_eval(Board*, int, int, int) [5]
-----------------------------------------------
                0.06    7.96  243106/243106      stable_eval(Board*, int, int, int) [5]
[6]     67.3    0.06    7.96  243106         shallow_greedy_move(Board*) [6]
                0.08    4.25 6802060/9671735     apply_move(Board*, Move) [7]
                0.06    3.13 6802060/9671734     undo_move(Board*, Move) [8]
                0.01    0.26  243106/378171      generate_moves(Board const*, MoveList*) [17]
                0.06    0.10 6802060/9594601     evaluate(Board*) [23]
-----------------------------------------------
                0.00    0.00       1/9671735     main [1]
                0.00    0.00       4/9671735     print_pv(Board*, int, int, PVRecord (*) [10000]) [113]
                0.00    0.10  163713/9671735     stable_eval(Board*, int, int, int) [5]
                0.00    0.24  383360/9671735     order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
                0.03    1.45 2322597/9671735     get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.08    4.25 6802060/9671735     shallow_greedy_move(Board*) [6]
[7]     51.7    0.12    6.04 9671735         apply_move(Board*, Move) [7]
                0.36    3.95 20021936/40043870     change_piece(Board*, Coordinate, Piece, bool) [4]
                0.49    0.40 20021936/20021936     add_eval_diff(Board*, Coordinate, Piece, bool) [13]
                0.08    0.11 9671735/9671735     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&) [26]
                0.05    0.13 19343470/19343470     std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [27]
                0.05    0.11 19677377/80451581     std::vector<Coordinate, std::allocator<Coordinate> >::back() [14]
                0.00    0.11 9671735/9671736     std::vector<int, std::allocator<int> >::push_back(int&&) [34]
                0.03    0.05 9671735/19266336     std::vector<int, std::allocator<int> >::back() [30]
                0.02    0.05 9671735/39288272     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [21]
                0.06    0.00 9671735/9671735     is_irreversible(Move, Piece) [57]
                0.01    0.00 9671735/145328224     flip_color(Color) [28]
                0.00    0.00 9671735/115283766     get_piece(Board const*, Coordinate) [67]
                0.00    0.00 9671735/29258348     is_capture(Move) [89]
-----------------------------------------------
                0.00    0.00       4/9671734     print_pv(Board*, int, int, PVRecord (*) [10000]) [113]
                0.00    0.08  163713/9671734     stable_eval(Board*, int, int, int) [5]
                0.00    0.18  383360/9671734     order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
                0.02    1.07 2322597/9671734     get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.06    3.13 6802060/9671734     shallow_greedy_move(Board*) [6]
[8]     38.0    0.08    4.44 9671734         undo_move(Board*, Move) [8]
                0.36    3.95 20021934/40043870     change_piece(Board*, Coordinate, Piece, bool) [4]
                0.03    0.05 19343468/19343468     std::vector<Coordinate, std::allocator<Coordinate> >::pop_back() [46]
                0.01    0.01 9671734/9671734     std::vector<int, std::allocator<int> >::pop_back() [83]
                0.02    0.00 9671734/9671734     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::pop_back() [82]
                0.01    0.00 9671734/145328224     flip_color(Color) [28]
                0.00    0.00 9671734/115283766     get_piece(Board const*, Coordinate) [67]
                0.00    0.00 9671734/29258348     is_capture(Move) [89]
-----------------------------------------------
                2.00    0.37 17981946/17981946     change_piece(Board*, Coordinate, Piece, bool) [4]
[9]     19.9    2.00    0.37 17981946         update_xrays_by_pawn(Board*, Coordinate, Piece, bool) [9]
                0.37    0.00 126084520/186455824     max_ray_len(int, int, int, int) [15]
-----------------------------------------------
                1.83    0.28 20713292/20713292     change_piece(Board*, Coordinate, Piece, bool) [4]
[10]    17.7    1.83    0.28 20713292         update_xrays_by_piece(Board*, Coordinate, Piece, bool) [10]
                0.18    0.00 60371304/186455824     max_ray_len(int, int, int, int) [15]
                0.08    0.00 74886208/211482307     is_valid(Coordinate) [24]
                0.02    0.00 20713292/145328224     flip_color(Color) [28]
-----------------------------------------------
                1.72    0.00 48874160/48874160     change_piece(Board*, Coordinate, Piece, bool) [4]
[11]    14.4    1.72    0.00 48874160         update_weak_squares(Board*, Color, int) [11]
-----------------------------------------------
                0.80    0.11 22061924/22061924     change_piece(Board*, Coordinate, Piece, bool) [4]
[12]     7.7    0.80    0.11 22061924         update_king_attacks(Board*, Coordinate, Color, bool) [12]
                0.09    0.00 88247696/211482307     is_valid(Coordinate) [24]
                0.03    0.00 22061924/145328224     flip_color(Color) [28]
-----------------------------------------------
                0.49    0.40 20021936/20021936     apply_move(Board*, Move) [7]
[13]     7.5    0.49    0.40 20021936         add_eval_diff(Board*, Coordinate, Piece, bool) [13]
                0.05    0.10 19347620/80451581     std::vector<Coordinate, std::allocator<Coordinate> >::back() [14]
                0.04    0.10 20021936/39288272     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [21]
                0.03    0.02 4045896/4045896     add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const [61]
                0.02    0.00 20021936/145328224     flip_color(Color) [28]
                0.02    0.00 14441739/37874451     parity(Coordinate) [65]
                0.01    0.00 22061926/63488510     quintant_from(Coordinate) [64]
                0.00    0.00  674316/674356      std::vector<Coordinate, std::allocator<Coordinate> >::size() const [136]
                0.00    0.00  674316/674316      std::vector<Coordinate, std::allocator<Coordinate> >::operator[](unsigned long) [137]
-----------------------------------------------
                0.05    0.10 19347620/80451581     add_eval_diff(Board*, Coordinate, Piece, bool) [13]
                0.05    0.11 19677377/80451581     apply_move(Board*, Move) [7]
                0.11    0.22 41426584/80451581     change_piece(Board*, Coordinate, Piece, bool) [4]
[14]     5.4    0.22    0.43 80451581         std::vector<Coordinate, std::allocator<Coordinate> >::back() [14]
                0.16    0.04 80451581/80451581     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator-(long) const [25]
                0.12    0.04 80451581/80451591     std::vector<Coordinate, std::allocator<Coordinate> >::end() [29]
                0.07    0.00 80451581/80451581     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator*() const [52]
-----------------------------------------------
                0.18    0.00 60371304/186455824     update_xrays_by_piece(Board*, Coordinate, Piece, bool) [10]
                0.37    0.00 126084520/186455824     update_xrays_by_pawn(Board*, Coordinate, Piece, bool) [9]
[15]     4.6    0.55    0.00 186455824         max_ray_len(int, int, int, int) [15]
-----------------------------------------------
                               13602             get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[16]     4.1    0.02    0.47   13602         order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
                0.00    0.24  383360/9671735     apply_move(Board*, Move) [7]
                0.00    0.18  383360/9671734     undo_move(Board*, Move) [8]
                0.00    0.03    6526/6526        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}) [71]
                0.00    0.02    7076/7076        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}) [84]
                              383360             get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
-----------------------------------------------
                0.01    0.15  135065/378171      get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.01    0.26  243106/378171      shallow_greedy_move(Board*) [6]
[17]     3.6    0.02    0.41  378171         generate_moves(Board const*, MoveList*) [17]
                0.03    0.38  378171/378171      generate_moves(Board const*, MoveList*, Color) [18]
-----------------------------------------------
                0.03    0.38  378171/378171      generate_moves(Board const*, MoveList*) [17]
[18]     3.5    0.03    0.38  378171         generate_moves(Board const*, MoveList*, Color) [18]
                0.01    0.36 5846578/5846578     generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [19]
                0.01    0.00 24202944/115283766     get_piece(Board const*, Coordinate) [67]
-----------------------------------------------
                0.01    0.36 5846578/5846578     generate_moves(Board const*, MoveList*, Color) [18]
[19]     3.1    0.01    0.36 5846578         generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [19]
                0.00    0.09 2950584/2950584     generate_pawn_moves(Board const*, MoveList*, Coordinate) [38]
                0.04    0.04  673459/673459      generate_knight_moves(Board const*, MoveList*, Coordinate) [40]
                0.04    0.03  366146/366146      generate_queen_moves(Board const*, MoveList*, Coordinate) [55]
                0.04    0.02  375354/375354      generate_king_moves(Board const*, MoveList*, Coordinate) [56]
                0.01    0.03  755626/755626      generate_rook_moves(Board const*, MoveList*, Coordinate) [68]
                0.00    0.03  725409/725409      generate_bishop_moves(Board const*, MoveList*, Coordinate) [77]
-----------------------------------------------
                0.12    0.24 17981946/17981946     change_piece(Board*, Coordinate, Piece, bool) [4]
[20]     3.0    0.12    0.24 17981946         update_least_advanced(Board*, Color, int) [20]
                0.15    0.09 16690725/16690725     kronecker_piece(Board const*, Coordinate, Piece) [22]
-----------------------------------------------
                0.02    0.05 9594601/39288272     evaluate(Board*) [23]
                0.02    0.05 9671735/39288272     apply_move(Board*, Move) [7]
                0.04    0.10 20021936/39288272     add_eval_diff(Board*, Coordinate, Piece, bool) [13]
[21]     2.3    0.08    0.20 39288272         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [21]
                0.09    0.03 39288272/39288272     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [32]
                0.04    0.03 39288272/39288277     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() [54]
                0.01    0.00 39288272/39288272     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [88]
-----------------------------------------------
                0.15    0.09 16690725/16690725     update_least_advanced(Board*, Color, int) [20]
[22]     2.0    0.15    0.09 16690725         kronecker_piece(Board const*, Coordinate, Piece) [22]
                0.08    0.00 16690725/20736619     piece_equals(Piece, Piece) [35]
                0.01    0.00 16690725/115283766     get_piece(Board const*, Coordinate) [67]
-----------------------------------------------
                0.01    0.01  786540/9594601     stable_eval(Board*, int, int, int) [5]
                0.02    0.03 2006001/9594601     get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.06    0.10 6802060/9594601     shallow_greedy_move(Board*) [6]
[23]     1.9    0.09    0.14 9594601         evaluate(Board*) [23]
                0.02    0.04 9594601/19266336     std::vector<int, std::allocator<int> >::back() [30]
                0.02    0.05 9594601/39288272     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [21]
                0.01    0.00 9594601/9594601     score_total(DisaggregatedScore) [110]
-----------------------------------------------
                0.01    0.00 8851752/211482307     add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [50]
                0.04    0.00 39496651/211482307     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [31]
                0.08    0.00 74886208/211482307     update_xrays_by_piece(Board*, Coordinate, Piece, bool) [10]
                0.09    0.00 88247696/211482307     update_king_attacks(Board*, Coordinate, Color, bool) [12]
[24]     1.8    0.22    0.00 211482307         is_valid(Coordinate) [24]
-----------------------------------------------
                0.16    0.04 80451581/80451581     std::vector<Coordinate, std::allocator<Coordinate> >::back() [14]
[25]     1.7    0.16    0.04 80451581         __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator-(long) const [25]
                0.04    0.00 80451581/160903182     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&) [45]
-----------------------------------------------
                0.08    0.11 9671735/9671735     apply_move(Board*, Move) [7]
[26]     1.5    0.08    0.11 9671735         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&) [26]
                0.03    0.03       4/4           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [58]
                0.02    0.03 9671731/9671735     void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [63]
                0.00    0.00       4/39288277     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() [54]
-----------------------------------------------
                0.05    0.13 19343470/19343470     apply_move(Board*, Move) [7]
[27]     1.5    0.05    0.13 19343470         std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [27]
                0.01    0.10 19343462/19343470     void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [36]
                0.02    0.00       8/8           void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [79]
                0.00    0.00       8/80451591     std::vector<Coordinate, std::allocator<Coordinate> >::end() [29]
-----------------------------------------------
                0.00    0.00       5/145328224     apply_null(Board*) [115]
                0.00    0.00       5/145328224     undo_null(Board*) [116]
                0.00    0.00 2901636/145328224     generate_bishop_moves(Board const*, MoveList*, Coordinate) [77]
                0.00    0.00 2927955/145328224     generate_queen_moves(Board const*, MoveList*, Coordinate) [55]
                0.00    0.00 3002832/145328224     generate_king_moves(Board const*, MoveList*, Coordinate) [56]
                0.00    0.00 3022460/145328224     generate_rook_moves(Board const*, MoveList*, Coordinate) [68]
                0.01    0.00 5387672/145328224     generate_knight_moves(Board const*, MoveList*, Coordinate) [40]
                0.01    0.00 5901168/145328224     generate_pawn_moves(Board const*, MoveList*, Coordinate) [38]
                0.01    0.00 9671734/145328224     undo_move(Board*, Move) [8]
                0.01    0.00 9671735/145328224     apply_move(Board*, Move) [7]
                0.02    0.00 20021936/145328224     add_eval_diff(Board*, Coordinate, Piece, bool) [13]
                0.02    0.00 20713292/145328224     update_xrays_by_piece(Board*, Coordinate, Piece, bool) [10]
                0.03    0.00 22061924/145328224     update_king_attacks(Board*, Coordinate, Color, bool) [12]
                0.05    0.00 40043870/145328224     change_piece(Board*, Coordinate, Piece, bool) [4]
[28]     1.4    0.17    0.00 145328224         flip_color(Color) [28]
-----------------------------------------------
                0.00    0.00       2/80451591     void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [41]
                0.00    0.00       8/80451591     std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [27]
                0.12    0.04 80451581/80451591     std::vector<Coordinate, std::allocator<Coordinate> >::back() [14]
[29]     1.3    0.12    0.04 80451591         std::vector<Coordinate, std::allocator<Coordinate> >::end() [29]
                0.04    0.00 80451591/160903182     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&) [45]
-----------------------------------------------
                0.02    0.04 9594601/19266336     evaluate(Board*) [23]
                0.03    0.05 9671735/19266336     apply_move(Board*, Move) [7]
[30]     1.2    0.05    0.09 19266336         std::vector<int, std::allocator<int> >::back() [30]
                0.04    0.02 19266336/19266336     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const [60]
                0.02    0.02 19266336/19266341     std::vector<int, std::allocator<int> >::end() [69]
                0.00    0.00 19266336/19266336     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [129]
-----------------------------------------------
                0.00    0.00 2234911/39496651     generate_pawn_moves(Board const*, MoveList*, Coordinate) [38]
                0.01    0.01 6005664/39496651     generate_king_moves(Board const*, MoveList*, Coordinate) [56]
                0.01    0.01 6614823/39496651     generate_rook_moves(Board const*, MoveList*, Coordinate) [68]
                0.01    0.01 6769440/39496651     generate_queen_moves(Board const*, MoveList*, Coordinate) [55]
                0.01    0.01 7096469/39496651     generate_bishop_moves(Board const*, MoveList*, Coordinate) [77]
                0.02    0.01 10775344/39496651     generate_knight_moves(Board const*, MoveList*, Coordinate) [40]
[31]     1.1    0.08    0.05 39496651         add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [31]
                0.04    0.00 39496651/211482307     is_valid(Coordinate) [24]
                0.01    0.00 39496651/115283766     get_piece(Board const*, Coordinate) [67]
-----------------------------------------------
                0.09    0.03 39288272/39288272     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [21]
[32]     1.0    0.09    0.03 39288272         __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [32]
                0.03    0.00 39288272/78576554     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&) [59]
-----------------------------------------------
                0.00    0.11 9671736/9671736     std::vector<int, std::allocator<int> >::push_back(int&&) [34]
[33]     0.9    0.00    0.11 9671736         void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [33]
                0.03    0.05 9671731/9671736     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [47]
                0.02    0.00 9671736/29015213     int&& std::forward<int>(std::remove_reference<int>::type&) [53]
                0.00    0.01       5/5           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [87]
                0.00    0.00       5/19266341     std::vector<int, std::allocator<int> >::end() [69]
-----------------------------------------------
                0.00    0.00       1/9671736     init_board(Board*) [37]
                0.00    0.11 9671735/9671736     apply_move(Board*, Move) [7]
[34]     0.9    0.00    0.11 9671736         std::vector<int, std::allocator<int> >::push_back(int&&) [34]
                0.00    0.11 9671736/9671736     void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [33]
                0.00    0.00 9671736/11577774     std::remove_reference<int&>::type&& std::move<int&>(int&) [130]
-----------------------------------------------
                0.02    0.00 4045894/20736619     add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const [61]
                0.08    0.00 16690725/20736619     kronecker_piece(Board const*, Coordinate, Piece) [22]
[35]     0.9    0.11    0.00 20736619         piece_equals(Piece, Piece) [35]
-----------------------------------------------
                0.00    0.00       8/19343470     void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [79]
                0.01    0.10 19343462/19343470     std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [27]
[36]     0.9    0.01    0.10 19343470         void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [36]
                0.07    0.02 19343470/19343470     void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&) [39]
                0.01    0.00 19343470/38686948     Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&) [80]
-----------------------------------------------
                0.00    0.09       1/1           main [1]
[37]     0.7    0.00    0.09       1         init_board(Board*) [37]
                0.00    0.08       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&) [42]
                0.00    0.01       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&) [106]
                0.00    0.00       1/9671736     std::vector<int, std::allocator<int> >::push_back(int&&) [34]
-----------------------------------------------
                0.00    0.09 2950584/2950584     generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [19]
[38]     0.7    0.00    0.09 2950584         generate_pawn_moves(Board const*, MoveList*, Coordinate) [38]
                0.06    0.01 8851752/8851752     add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [50]
                0.00    0.00 2234911/39496651     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [31]
                0.01    0.00 5901168/145328224     flip_color(Color) [28]
-----------------------------------------------
                0.07    0.02 19343470/19343470     void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [36]
[39]     0.7    0.07    0.02 19343470         void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&) [39]
                0.01    0.00 19343470/38686944     operator new(unsigned long, void*) [81]
                0.01    0.00 19343470/38686948     Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&) [80]
-----------------------------------------------
                0.04    0.04  673459/673459      generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [19]
[40]     0.7    0.04    0.04  673459         generate_knight_moves(Board const*, MoveList*, Coordinate) [40]
                0.02    0.01 10775344/39496651     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [31]
                0.01    0.00 5387672/145328224     flip_color(Color) [28]
-----------------------------------------------
                0.00    0.08       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&) [42]
[41]     0.7    0.00    0.08       2         void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [41]
                0.00    0.08       2/2           void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00       2/80451591     std::vector<Coordinate, std::allocator<Coordinate> >::end() [29]
                0.00    0.00       2/8           Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&) [232]
-----------------------------------------------
                0.00    0.08       2/2           init_board(Board*) [37]
[42]     0.7    0.00    0.08       2         std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&) [42]
                0.00    0.08       2/2           void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [41]
                0.00    0.00       2/2           std::remove_reference<Coordinate&>::type&& std::move<Coordinate&>(Coordinate&) [271]
-----------------------------------------------
                0.00    0.08       2/2           void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [41]
[43]     0.7    0.00    0.08       2         void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.01    0.07       2/2           void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&) [44]
                0.00    0.00       2/10          std::vector<Coordinate, std::allocator<Coordinate> >::begin() [117]
                0.00    0.00       4/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate() [193]
                0.00    0.00       4/22          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() [182]
                0.00    0.00       4/40          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const [177]
                0.00    0.00       4/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [191]
                0.00    0.00       2/10          std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [210]
                0.00    0.00       2/10          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&) [207]
                0.00    0.00       2/10          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long) [213]
                0.00    0.00       2/8           Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&) [232]
                0.00    0.00       2/12          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [202]
-----------------------------------------------
                0.01    0.07       2/2           void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
[44]     0.7    0.01    0.07       2         void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&) [44]
                0.07    0.00       2/2           void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&) [51]
                0.00    0.00       2/8           Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&) [232]
-----------------------------------------------
                0.00    0.00      10/160903182     std::vector<Coordinate, std::allocator<Coordinate> >::begin() [117]
                0.04    0.00 80451581/160903182     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator-(long) const [25]
                0.04    0.00 80451591/160903182     std::vector<Coordinate, std::allocator<Coordinate> >::end() [29]
[45]     0.7    0.08    0.00 160903182         __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&) [45]
-----------------------------------------------
                0.03    0.05 19343468/19343468     undo_move(Board*, Move) [8]
[46]     0.7    0.03    0.05 19343468         std::vector<Coordinate, std::allocator<Coordinate> >::pop_back() [46]
                0.04    0.01 19343468/19343468     void std::allocator_traits<std::allocator<Coordinate> >::destroy<Coordinate>(std::allocator<Coordinate>&, Coordinate*) [62]
-----------------------------------------------
                0.00    0.00       5/9671736     void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [87]
                0.03    0.05 9671731/9671736     void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [33]
[47]     0.6    0.03    0.05 9671736         void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [47]
                0.00    0.03 9671736/9671736     void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [76]
                0.02    0.00 9671736/29015213     int&& std::forward<int>(std::remove_reference<int>::type&) [53]
-----------------------------------------------
                0.08    0.00       1/1           __libc_csu_init [49]
[48]     0.6    0.08    0.00       1         _GLOBAL__sub_I__Z10print_movePK5Board4Move [48]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [284]
-----------------------------------------------
                                                 <spontaneous>
[49]     0.6    0.00    0.08                 __libc_csu_init [49]
                0.08    0.00       1/1           _GLOBAL__sub_I__Z10print_movePK5Board4Move [48]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z13get_best_moveP5BoardiiibbiPA10000_8PVRecord [276]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z11score_total18DisaggregatedScore [275]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10copy_board5Board [274]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [282]
                0.00    0.00       1/1           _GLOBAL__sub_I_pv_table [277]
-----------------------------------------------
                0.06    0.01 8851752/8851752     generate_pawn_moves(Board const*, MoveList*, Coordinate) [38]
[50]     0.6    0.06    0.01 8851752         add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [50]
                0.01    0.00 8851752/211482307     is_valid(Coordinate) [24]
                0.00    0.00 11503217/115283766     get_piece(Board const*, Coordinate) [67]
-----------------------------------------------
                0.07    0.00       2/2           void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&) [44]
[51]     0.6    0.07    0.00       2         void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&) [51]
                0.00    0.00       2/38686944     operator new(unsigned long, void*) [81]
                0.00    0.00       2/8           Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&) [232]
-----------------------------------------------
                0.07    0.00 80451581/80451581     std::vector<Coordinate, std::allocator<Coordinate> >::back() [14]
[52]     0.6    0.07    0.00 80451581         __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator*() const [52]
-----------------------------------------------
                0.00    0.00       5/29015213     void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [87]
                0.02    0.00 9671736/29015213     void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [33]
                0.02    0.00 9671736/29015213     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [47]
                0.02    0.00 9671736/29015213     void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [76]
[53]     0.6    0.07    0.00 29015213         int&& std::forward<int>(std::remove_reference<int>::type&) [53]
-----------------------------------------------
                0.00    0.00       1/39288277     void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [105]
                0.00    0.00       4/39288277     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&) [26]
                0.04    0.03 39288272/39288277     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [21]
[54]     0.6    0.04    0.03 39288277         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() [54]
                0.03    0.00 39288277/78576554     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&) [59]
-----------------------------------------------
                0.04    0.03  366146/366146      generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [19]
[55]     0.6    0.04    0.03  366146         generate_queen_moves(Board const*, MoveList*, Coordinate) [55]
                0.01    0.01 6769440/39496651     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [31]
                0.00    0.00 2927955/145328224     flip_color(Color) [28]
-----------------------------------------------
                0.04    0.02  375354/375354      generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [19]
[56]     0.5    0.04    0.02  375354         generate_king_moves(Board const*, MoveList*, Coordinate) [56]
                0.01    0.01 6005664/39496651     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [31]
                0.00    0.00 3002832/145328224     flip_color(Color) [28]
-----------------------------------------------
                0.06    0.00 9671735/9671735     apply_move(Board*, Move) [7]
[57]     0.5    0.06    0.00 9671735         is_irreversible(Move, Piece) [57]
                0.00    0.00 9671735/29258348     is_capture(Move) [89]
-----------------------------------------------
                0.03    0.03       4/4           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&) [26]
[58]     0.5    0.03    0.03       4         void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [58]
                0.03    0.00       4/5           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long) [66]
                0.00    0.00       4/9671735     void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [63]
                0.00    0.00       4/5           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin() [119]
                0.00    0.00       8/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate() [221]
                0.00    0.00       8/11          std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() [203]
                0.00    0.00       8/20          __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const [183]
                0.00    0.00       8/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [219]
                0.00    0.00       4/5           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [242]
                0.00    0.00       4/5           __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&) [240]
                0.00    0.00       4/19343474     DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&) [128]
                0.00    0.00       4/6           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [233]
-----------------------------------------------
                0.00    0.00       5/78576554     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin() [119]
                0.03    0.00 39288272/78576554     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [32]
                0.03    0.00 39288277/78576554     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() [54]
[59]     0.5    0.06    0.00 78576554         __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&) [59]
-----------------------------------------------
                0.04    0.02 19266336/19266336     std::vector<int, std::allocator<int> >::back() [30]
[60]     0.5    0.04    0.02 19266336         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const [60]
                0.02    0.00 19266336/38532682     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [73]
-----------------------------------------------
                0.03    0.02 4045896/4045896     add_eval_diff(Board*, Coordinate, Piece, bool) [13]
[61]     0.4    0.03    0.02 4045896         add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const [61]
                0.02    0.00 4045894/20736619     piece_equals(Piece, Piece) [35]
                0.00    0.00 4045894/115283766     get_piece(Board const*, Coordinate) [67]
-----------------------------------------------
                0.04    0.01 19343468/19343468     std::vector<Coordinate, std::allocator<Coordinate> >::pop_back() [46]
[62]     0.4    0.04    0.01 19343468         void std::allocator_traits<std::allocator<Coordinate> >::destroy<Coordinate>(std::allocator<Coordinate>&, Coordinate*) [62]
                0.01    0.00 19343468/19343468     void __gnu_cxx::new_allocator<Coordinate>::destroy<Coordinate>(Coordinate*) [103]
-----------------------------------------------
                0.00    0.00       4/9671735     void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [58]
                0.02    0.03 9671731/9671735     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&) [26]
[63]     0.4    0.02    0.03 9671735         void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [63]
                0.02    0.01 9671735/9671735     void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&) [78]
                0.00    0.00 9671735/19343474     DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&) [128]
-----------------------------------------------
                0.01    0.00 22061926/63488510     add_eval_diff(Board*, Coordinate, Piece, bool) [13]
                0.03    0.00 41426584/63488510     change_piece(Board*, Coordinate, Piece, bool) [4]
[64]     0.3    0.04    0.00 63488510         quintant_from(Coordinate) [64]
-----------------------------------------------
                0.02    0.00 14441739/37874451     add_eval_diff(Board*, Coordinate, Piece, bool) [13]
                0.02    0.00 23432712/37874451     change_piece(Board*, Coordinate, Piece, bool) [4]
[65]     0.3    0.04    0.00 37874451         parity(Coordinate) [65]
-----------------------------------------------
                0.01    0.00       1/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [107]
                0.03    0.00       4/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [58]
[66]     0.3    0.04    0.00       5         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long) [66]
                0.00    0.00       5/5           std::allocator_traits<std::allocator<DisaggregatedScore> >::allocate(std::allocator<DisaggregatedScore>&, unsigned long) [245]
-----------------------------------------------
                0.00    0.00     866/115283766     print_move(Board const*, Move) [114]
                0.00    0.00 4045894/115283766     add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const [61]
                0.00    0.00 9671734/115283766     undo_move(Board*, Move) [8]
                0.00    0.00 9671735/115283766     apply_move(Board*, Move) [7]
                0.00    0.00 11503217/115283766     add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [50]
                0.01    0.00 16690725/115283766     kronecker_piece(Board const*, Coordinate, Piece) [22]
                0.01    0.00 24202944/115283766     generate_moves(Board const*, MoveList*, Color) [18]
                0.01    0.00 39496651/115283766     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [31]
[67]     0.3    0.04    0.00 115283766         get_piece(Board const*, Coordinate) [67]
-----------------------------------------------
                0.01    0.03  755626/755626      generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [19]
[68]     0.3    0.01    0.03  755626         generate_rook_moves(Board const*, MoveList*, Coordinate) [68]
                0.01    0.01 6614823/39496651     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [31]
                0.00    0.00 3022460/145328224     flip_color(Color) [28]
-----------------------------------------------
                0.00    0.00       5/19266341     void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [33]
                0.02    0.02 19266336/19266341     std::vector<int, std::allocator<int> >::back() [30]
[69]     0.3    0.02    0.02 19266341         std::vector<int, std::allocator<int> >::end() [69]
                0.02    0.00 19266341/38532682     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [73]
-----------------------------------------------
                0.00    0.03    6526/6526        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [72]
[70]     0.3    0.00    0.03    6526         void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [70]
                0.02    0.01    6526/6526        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [75]
                0.00    0.00    6526/6526        void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [112]
-----------------------------------------------
                0.00    0.03    6526/6526        order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
[71]     0.3    0.00    0.03    6526         void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}) [71]
                0.00    0.03    6526/6526        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [72]
                0.00    0.00    6526/6526        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter) [166]
-----------------------------------------------
                0.00    0.03    6526/6526        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}) [71]
[72]     0.3    0.00    0.03    6526         void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [72]
                0.00    0.03    6526/6526        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [70]
                0.00    0.00    6526/13602       std::__lg(long) [157]
                0.00    0.00    6526/6526        void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [167]
-----------------------------------------------
                0.00    0.00       5/38532682     std::vector<int, std::allocator<int> >::begin() [118]
                0.02    0.00 19266336/38532682     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const [60]
                0.02    0.00 19266341/38532682     std::vector<int, std::allocator<int> >::end() [69]
[73]     0.3    0.03    0.00 38532682         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [73]
-----------------------------------------------
                                                 <spontaneous>
[74]     0.3    0.03    0.00                 Coordinate* std::__uninitialized_move_if_noexcept_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [74]
-----------------------------------------------
                0.02    0.01    6526/6526        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [70]
[75]     0.2    0.02    0.01    6526         void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [75]
                0.00    0.01   84991/166335      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [91]
                0.00    0.00   12899/27860       int* std::move_backward<int*, int*>(int*, int*, int*) [92]
                0.00    0.00   97890/429660      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [141]
                0.00    0.00   84991/166335      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [148]
                0.00    0.00   25798/11577774     std::remove_reference<int&>::type&& std::move<int&>(int&) [130]
-----------------------------------------------
                0.00    0.03 9671736/9671736     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [47]
[76]     0.2    0.00    0.03 9671736         void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [76]
                0.02    0.00 9671736/29015213     int&& std::forward<int>(std::remove_reference<int>::type&) [53]
                0.01    0.00 9671736/38686944     operator new(unsigned long, void*) [81]
-----------------------------------------------
                0.00    0.03  725409/725409      generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [19]
[77]     0.2    0.00    0.03  725409         generate_bishop_moves(Board const*, MoveList*, Coordinate) [77]
                0.01    0.01 7096469/39496651     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [31]
                0.00    0.00 2901636/145328224     flip_color(Color) [28]
-----------------------------------------------
                0.02    0.01 9671735/9671735     void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [63]
[78]     0.2    0.02    0.01 9671735         void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&) [78]
                0.01    0.00 9671735/38686944     operator new(unsigned long, void*) [81]
                0.00    0.00 9671735/19343474     DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&) [128]
-----------------------------------------------
                0.02    0.00       8/8           std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [27]
[79]     0.2    0.02    0.00       8         void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [79]
                0.00    0.00       8/19343470     void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [36]
                0.00    0.00       8/38686948     Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&) [80]
                0.00    0.00       8/10          std::vector<Coordinate, std::allocator<Coordinate> >::begin() [117]
                0.00    0.00      16/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate() [193]
                0.00    0.00      16/22          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() [182]
                0.00    0.00      16/40          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const [177]
                0.00    0.00      16/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [191]
                0.00    0.00       8/10          std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [210]
                0.00    0.00       8/10          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&) [207]
                0.00    0.00       8/10          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long) [213]
                0.00    0.00       8/12          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [202]
-----------------------------------------------
                0.00    0.00       8/38686948     void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [79]
                0.01    0.00 19343470/38686948     void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [36]
                0.01    0.00 19343470/38686948     void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&) [39]
[80]     0.2    0.02    0.00 38686948         Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&) [80]
-----------------------------------------------
                0.00    0.00       1/38686944     void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&) [120]
                0.00    0.00       2/38686944     void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&) [51]
                0.01    0.00 9671735/38686944     void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&) [78]
                0.01    0.00 9671736/38686944     void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [76]
                0.01    0.00 19343470/38686944     void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&) [39]
[81]     0.2    0.02    0.00 38686944         operator new(unsigned long, void*) [81]
-----------------------------------------------
                0.02    0.00 9671734/9671734     undo_move(Board*, Move) [8]
[82]     0.2    0.02    0.00 9671734         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::pop_back() [82]
                0.00    0.00 9671734/9671734     void std::allocator_traits<std::allocator<DisaggregatedScore> >::destroy<DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*) [133]
-----------------------------------------------
                0.01    0.01 9671734/9671734     undo_move(Board*, Move) [8]
[83]     0.2    0.01    0.01 9671734         std::vector<int, std::allocator<int> >::pop_back() [83]
                0.01    0.00 9671734/9671734     void std::allocator_traits<std::allocator<int> >::destroy<int>(std::allocator<int>&, int*) [104]
-----------------------------------------------
                0.00    0.02    7076/7076        order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
[84]     0.1    0.00    0.02    7076         void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}) [84]
                0.00    0.02    7076/7076        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [85]
                0.00    0.00    7076/7076        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter) [163]
-----------------------------------------------
                0.00    0.02    7076/7076        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}) [84]
[85]     0.1    0.00    0.02    7076         void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [85]
                0.00    0.01    7076/7076        void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [96]
                0.00    0.01    7076/7076        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [109]
                0.00    0.00    7076/13602       std::__lg(long) [157]
-----------------------------------------------
                                                 <spontaneous>
[86]     0.1    0.02    0.00                 __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > std::__miter_base<__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > >(__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >) [86]
-----------------------------------------------
                0.00    0.01       5/5           void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [33]
[87]     0.1    0.00    0.01       5         void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [87]
                0.01    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [97]
                0.00    0.00       5/9671736     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [47]
                0.00    0.00       5/29015213     int&& std::forward<int>(std::remove_reference<int>::type&) [53]
                0.00    0.00       5/5           std::vector<int, std::allocator<int> >::begin() [118]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_use_relocate() [226]
                0.00    0.00      10/11          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [204]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [184]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&) [224]
                0.00    0.00       5/5           std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [243]
                0.00    0.00       5/5           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [241]
                0.00    0.00       5/6           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [234]
-----------------------------------------------
                0.01    0.00 39288272/39288272     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [21]
[88]     0.1    0.01    0.00 39288272         __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [88]
-----------------------------------------------
                0.00    0.00      38/29258348     get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.00    0.00  243106/29258348     stable_eval(Board*, int, int, int) [5]
                0.00    0.00 9671734/29258348     undo_move(Board*, Move) [8]
                0.00    0.00 9671735/29258348     apply_move(Board*, Move) [7]
                0.00    0.00 9671735/29258348     is_irreversible(Move, Piece) [57]
[89]     0.1    0.01    0.00 29258348         is_capture(Move) [89]
-----------------------------------------------
                0.01    0.00  166335/166335      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [91]
[90]     0.1    0.01    0.00  166335         __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#1}>&&) [90]
                0.00    0.00  166335/179387      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&) [143]
-----------------------------------------------
                0.00    0.00   81344/166335      void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [112]
                0.00    0.01   84991/166335      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [75]
[91]     0.1    0.00    0.01  166335         __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [91]
                0.01    0.00  166335/166335      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#1}>&&) [90]
                0.00    0.00  166335/166335      std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>(std::remove_reference&&) [149]
-----------------------------------------------
                0.00    0.00   12899/27860       void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [75]
                0.00    0.01   14961/27860       void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [108]
[92]     0.1    0.00    0.01   27860         int* std::move_backward<int*, int*>(int*, int*, int*) [92]
                0.01    0.00   27860/27860       int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [93]
                0.00    0.00   55720/55720       int* std::__miter_base<int*>(int*) [153]
-----------------------------------------------
                0.01    0.00   27860/27860       int* std::move_backward<int*, int*>(int*, int*, int*) [92]
[93]     0.1    0.01    0.00   27860         int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [93]
                0.00    0.00   83580/83610       int* std::__niter_base<int*>(int*) [152]
                0.00    0.00   27860/27860       int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [156]
                0.00    0.00   27860/27860       int* std::__niter_wrap<int*>(int* const&, int*) [155]
-----------------------------------------------
                0.01    0.00   13540/13540       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [95]
[94]     0.1    0.01    0.00   13540         int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [94]
                0.00    0.00  339988/481333      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [140]
                0.00    0.00   54234/146741      void std::iter_swap<int*, int*>(int*, int*) [151]
-----------------------------------------------
                0.00    0.01   13540/13540       void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [96]
[95]     0.1    0.00    0.01   13540         int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [95]
                0.01    0.00   13540/13540       int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [94]
                0.00    0.00   13540/13540       void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [158]
-----------------------------------------------
                               13540             void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [96]
                0.00    0.01    7076/7076        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [85]
[96]     0.1    0.00    0.01    7076+13540   void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [96]
                0.00    0.01   13540/13540       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [95]
                               13540             void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [96]
-----------------------------------------------
                0.01    0.00       5/5           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [87]
[97]     0.1    0.01    0.00       5         std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [97]
                0.00    0.00       5/5           std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [247]
-----------------------------------------------
                                                 <spontaneous>
[98]     0.1    0.01    0.00                 __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [98]
-----------------------------------------------
                                                 <spontaneous>
[99]     0.1    0.01    0.00                 DisaggregatedScore* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore*, DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [99]
-----------------------------------------------
                                                 <spontaneous>
[100]    0.1    0.01    0.00                 DisaggregatedScore* std::__uninitialized_copy_a<std::move_iterator<DisaggregatedScore*>, DisaggregatedScore*, DisaggregatedScore>(std::move_iterator<DisaggregatedScore*>, std::move_iterator<DisaggregatedScore*>, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [100]
-----------------------------------------------
                                                 <spontaneous>
[101]    0.1    0.01    0.00                 DisaggregatedScore* std::__uninitialized_move_if_noexcept_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [101]
-----------------------------------------------
                                                 <spontaneous>
[102]    0.1    0.01    0.00                 __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > std::copy<__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > >(__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >) [102]
-----------------------------------------------
                0.01    0.00 19343468/19343468     void std::allocator_traits<std::allocator<Coordinate> >::destroy<Coordinate>(std::allocator<Coordinate>&, Coordinate*) [62]
[103]    0.1    0.01    0.00 19343468         void __gnu_cxx::new_allocator<Coordinate>::destroy<Coordinate>(Coordinate*) [103]
-----------------------------------------------
                0.01    0.00 9671734/9671734     std::vector<int, std::allocator<int> >::pop_back() [83]
[104]    0.1    0.01    0.00 9671734         void std::allocator_traits<std::allocator<int> >::destroy<int>(std::allocator<int>&, int*) [104]
                0.00    0.00 9671734/9671734     void __gnu_cxx::new_allocator<int>::destroy<int>(int*) [132]
-----------------------------------------------
                0.00    0.01       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&) [106]
[105]    0.1    0.00    0.01       1         void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [105]
                0.00    0.01       1/1           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [107]
                0.00    0.00       1/39288277     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() [54]
                0.00    0.00       1/4           DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&) [250]
-----------------------------------------------
                0.00    0.01       1/1           init_board(Board*) [37]
[106]    0.1    0.00    0.01       1         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&) [106]
                0.00    0.01       1/1           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [105]
                0.00    0.00       1/1           std::remove_reference<DisaggregatedScore&>::type&& std::move<DisaggregatedScore&>(DisaggregatedScore&) [313]
-----------------------------------------------
                0.00    0.01       1/1           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [105]
[107]    0.1    0.00    0.01       1         void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [107]
                0.01    0.00       1/5           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long) [66]
                0.00    0.00       1/5           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin() [119]
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&) [121]
                0.00    0.00       2/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate() [221]
                0.00    0.00       2/11          std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() [203]
                0.00    0.00       2/20          __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const [183]
                0.00    0.00       2/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [219]
                0.00    0.00       1/5           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [242]
                0.00    0.00       1/5           __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&) [240]
                0.00    0.00       1/4           DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&) [250]
                0.00    0.00       1/6           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [233]
-----------------------------------------------
                0.00    0.01    7076/7076        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [109]
[108]    0.0    0.00    0.01    7076         void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [108]
                0.00    0.01   14961/27860       int* std::move_backward<int*, int*>(int*, int*, int*) [92]
                0.00    0.00  106140/481333      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [140]
                0.00    0.00   91179/175563      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [145]
                0.00    0.00   91179/175563      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [146]
                0.00    0.00   29922/11577774     std::remove_reference<int&>::type&& std::move<int&>(int&) [130]
-----------------------------------------------
                0.00    0.01    7076/7076        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [85]
[109]    0.0    0.00    0.01    7076         void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [109]
                0.00    0.01    7076/7076        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [108]
                0.00    0.00    7071/7071        void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [164]
-----------------------------------------------
                0.01    0.00 9594601/9594601     evaluate(Board*) [23]
[110]    0.0    0.01    0.00 9594601         score_total(DisaggregatedScore) [110]
-----------------------------------------------
                                                 <spontaneous>
[111]    0.0    0.01    0.00                 __gnu_cxx::new_allocator<Coordinate>::new_allocator(__gnu_cxx::new_allocator<Coordinate> const&) [111]
-----------------------------------------------
                0.00    0.00    6526/6526        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [70]
[112]    0.0    0.00    0.00    6526         void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [112]
                0.00    0.00   81344/166335      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [91]
                0.00    0.00   81344/166335      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [148]
-----------------------------------------------
                                   4             print_pv(Board*, int, int, PVRecord (*) [10000]) [113]
                0.00    0.00       1/1           main [1]
[113]    0.0    0.00    0.00       1+4       print_pv(Board*, int, int, PVRecord (*) [10000]) [113]
                0.00    0.00       4/9671735     apply_move(Board*, Move) [7]
                0.00    0.00       4/9671734     undo_move(Board*, Move) [8]
                0.00    0.00       4/866         print_move(Board const*, Move) [114]
                                   4             print_pv(Board*, int, int, PVRecord (*) [10000]) [113]
-----------------------------------------------
                0.00    0.00       4/866         print_pv(Board*, int, int, PVRecord (*) [10000]) [113]
                0.00    0.00     862/866         get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[114]    0.0    0.00    0.00     866         print_move(Board const*, Move) [114]
                0.00    0.00     866/115283766     get_piece(Board const*, Coordinate) [67]
-----------------------------------------------
                0.00    0.00       5/5           get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[115]    0.0    0.00    0.00       5         apply_null(Board*) [115]
                0.00    0.00       5/145328224     flip_color(Color) [28]
-----------------------------------------------
                0.00    0.00       5/5           get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[116]    0.0    0.00    0.00       5         undo_null(Board*) [116]
                0.00    0.00       5/145328224     flip_color(Color) [28]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00       8/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [79]
[117]    0.0    0.00    0.00      10         std::vector<Coordinate, std::allocator<Coordinate> >::begin() [117]
                0.00    0.00      10/160903182     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&) [45]
-----------------------------------------------
                0.00    0.00       5/5           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [87]
[118]    0.0    0.00    0.00       5         std::vector<int, std::allocator<int> >::begin() [118]
                0.00    0.00       5/38532682     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [73]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [107]
                0.00    0.00       4/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [58]
[119]    0.0    0.00    0.00       5         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin() [119]
                0.00    0.00       5/78576554     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&) [59]
-----------------------------------------------
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&) [121]
[120]    0.0    0.00    0.00       1         void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&) [120]
                0.00    0.00       1/38686944     operator new(unsigned long, void*) [81]
                0.00    0.00       1/4           DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&) [250]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [107]
[121]    0.0    0.00    0.00       1         void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&) [121]
                0.00    0.00       1/1           void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&) [120]
                0.00    0.00       1/4           DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&) [250]
-----------------------------------------------
                0.00    0.00       4/19343474     void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [58]
                0.00    0.00 9671735/19343474     void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [63]
                0.00    0.00 9671735/19343474     void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&) [78]
[128]    0.0    0.00    0.00 19343474         DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&) [128]
-----------------------------------------------
                0.00    0.00 19266336/19266336     std::vector<int, std::allocator<int> >::back() [30]
[129]    0.0    0.00    0.00 19266336         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [129]
-----------------------------------------------
                0.00    0.00   25798/11577774     void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [75]
                0.00    0.00   29922/11577774     void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [108]
                0.00    0.00  440223/11577774     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&) [150]
                0.00    0.00  685832/11577774     void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [148]
                0.00    0.00  724263/11577774     void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [146]
                0.00    0.00 9671736/11577774     std::vector<int, std::allocator<int> >::push_back(int&&) [34]
[130]    0.0    0.00    0.00 11577774         std::remove_reference<int&>::type&& std::move<int&>(int&) [130]
-----------------------------------------------
                0.00    0.00 9671734/9671734     void std::allocator_traits<std::allocator<DisaggregatedScore> >::destroy<DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*) [133]
[131]    0.0    0.00    0.00 9671734         void __gnu_cxx::new_allocator<DisaggregatedScore>::destroy<DisaggregatedScore>(DisaggregatedScore*) [131]
-----------------------------------------------
                0.00    0.00 9671734/9671734     void std::allocator_traits<std::allocator<int> >::destroy<int>(std::allocator<int>&, int*) [104]
[132]    0.0    0.00    0.00 9671734         void __gnu_cxx::new_allocator<int>::destroy<int>(int*) [132]
-----------------------------------------------
                0.00    0.00 9671734/9671734     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::pop_back() [82]
[133]    0.0    0.00    0.00 9671734         void std::allocator_traits<std::allocator<DisaggregatedScore> >::destroy<DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*) [133]
                0.00    0.00 9671734/9671734     void __gnu_cxx::new_allocator<DisaggregatedScore>::destroy<DisaggregatedScore>(DisaggregatedScore*) [131]
-----------------------------------------------
                0.00    0.00  481333/1030033     bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [140]
                0.00    0.00  548700/1030033     bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int, int*>(int&, int*) [138]
[134]    0.0    0.00    0.00 1030033         order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}::operator()(int, int) const [134]
-----------------------------------------------
                0.00    0.00  429660/949157      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [141]
                0.00    0.00  519497/949157      bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int, int*>(int&, int*) [139]
[135]    0.0    0.00    0.00  949157         order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}::operator()(int, int) const [135]
-----------------------------------------------
                0.00    0.00      40/674356      std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [210]
                0.00    0.00  674316/674356      add_eval_diff(Board*, Coordinate, Piece, bool) [13]
[136]    0.0    0.00    0.00  674356         std::vector<Coordinate, std::allocator<Coordinate> >::size() const [136]
-----------------------------------------------
                0.00    0.00  674316/674316      add_eval_diff(Board*, Coordinate, Piece, bool) [13]
[137]    0.0    0.00    0.00  674316         std::vector<Coordinate, std::allocator<Coordinate> >::operator[](unsigned long) [137]
-----------------------------------------------
                0.00    0.00  548700/548700      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [146]
[138]    0.0    0.00    0.00  548700         bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int, int*>(int&, int*) [138]
                0.00    0.00  548700/1030033     order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}::operator()(int, int) const [134]
-----------------------------------------------
                0.00    0.00  519497/519497      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [148]
[139]    0.0    0.00    0.00  519497         bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int, int*>(int&, int*) [139]
                0.00    0.00  519497/949157      order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}::operator()(int, int) const [135]
-----------------------------------------------
                0.00    0.00   35205/481333      void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [158]
                0.00    0.00  106140/481333      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [108]
                0.00    0.00  339988/481333      int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [94]
[140]    0.0    0.00    0.00  481333         bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [140]
                0.00    0.00  481333/1030033     order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}::operator()(int, int) const [134]
-----------------------------------------------
                0.00    0.00   28444/429660      void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [160]
                0.00    0.00   97890/429660      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [75]
                0.00    0.00  303326/429660      int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [159]
[141]    0.0    0.00    0.00  429660         bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [141]
                0.00    0.00  429660/949157      order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}::operator()(int, int) const [135]
-----------------------------------------------
                0.00    0.00    7076/189715      __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter) [163]
                0.00    0.00    7076/189715      __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Iter_comp_iter({lambda(int, int)#2}) [162]
                0.00    0.00  175563/189715      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#2}>&&) [144]
[142]    0.0    0.00    0.00  189715         std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&) [142]
-----------------------------------------------
                0.00    0.00    6526/179387      __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter) [166]
                0.00    0.00    6526/179387      __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Iter_comp_iter({lambda(int, int)#1}) [165]
                0.00    0.00  166335/179387      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#1}>&&) [90]
[143]    0.0    0.00    0.00  179387         std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&) [143]
-----------------------------------------------
                0.00    0.00  175563/175563      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [145]
[144]    0.0    0.00    0.00  175563         __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#2}>&&) [144]
                0.00    0.00  175563/189715      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&) [142]
-----------------------------------------------
                0.00    0.00   84384/175563      void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [164]
                0.00    0.00   91179/175563      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [108]
[145]    0.0    0.00    0.00  175563         __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [145]
                0.00    0.00  175563/175563      std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>(std::remove_reference&&) [147]
                0.00    0.00  175563/175563      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#2}>&&) [144]
-----------------------------------------------
                0.00    0.00   84384/175563      void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [164]
                0.00    0.00   91179/175563      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [108]
[146]    0.0    0.00    0.00  175563         void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [146]
                0.00    0.00  724263/11577774     std::remove_reference<int&>::type&& std::move<int&>(int&) [130]
                0.00    0.00  548700/548700      bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int, int*>(int&, int*) [138]
-----------------------------------------------
                0.00    0.00  175563/175563      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [145]
[147]    0.0    0.00    0.00  175563         std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>(std::remove_reference&&) [147]
-----------------------------------------------
                0.00    0.00   81344/166335      void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [112]
                0.00    0.00   84991/166335      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [75]
[148]    0.0    0.00    0.00  166335         void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [148]
                0.00    0.00  685832/11577774     std::remove_reference<int&>::type&& std::move<int&>(int&) [130]
                0.00    0.00  519497/519497      bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int, int*>(int&, int*) [139]
-----------------------------------------------
                0.00    0.00  166335/166335      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [91]
[149]    0.0    0.00    0.00  166335         std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>(std::remove_reference&&) [149]
-----------------------------------------------
                0.00    0.00  146741/146741      void std::iter_swap<int*, int*>(int*, int*) [151]
[150]    0.0    0.00    0.00  146741         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&) [150]
                0.00    0.00  440223/11577774     std::remove_reference<int&>::type&& std::move<int&>(int&) [130]
-----------------------------------------------
                0.00    0.00   11717/146741      void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [160]
                0.00    0.00   13540/146741      void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [158]
                0.00    0.00   54234/146741      int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [94]
                0.00    0.00   67250/146741      int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [159]
[151]    0.0    0.00    0.00  146741         void std::iter_swap<int*, int*>(int*, int*) [151]
                0.00    0.00  146741/146741      std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&) [150]
-----------------------------------------------
                0.00    0.00      30/83610       int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [229]
                0.00    0.00   83580/83610       int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [93]
[152]    0.0    0.00    0.00   83610         int* std::__niter_base<int*>(int*) [152]
-----------------------------------------------
                0.00    0.00   55720/55720       int* std::move_backward<int*, int*>(int*, int*, int*) [92]
[153]    0.0    0.00    0.00   55720         int* std::__miter_base<int*>(int*) [153]
-----------------------------------------------
                0.00    0.00   27860/27860       int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [156]
[154]    0.0    0.00    0.00   27860         int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [154]
-----------------------------------------------
                0.00    0.00   27860/27860       int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [93]
[155]    0.0    0.00    0.00   27860         int* std::__niter_wrap<int*>(int* const&, int*) [155]
-----------------------------------------------
                0.00    0.00   27860/27860       int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [93]
[156]    0.0    0.00    0.00   27860         int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [156]
                0.00    0.00   27860/27860       int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [154]
-----------------------------------------------
                0.00    0.00    6526/13602       void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [72]
                0.00    0.00    7076/13602       void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [85]
[157]    0.0    0.00    0.00   13602         std::__lg(long) [157]
-----------------------------------------------
                0.00    0.00   13540/13540       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [95]
[158]    0.0    0.00    0.00   13540         void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [158]
                0.00    0.00   35205/481333      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [140]
                0.00    0.00   13540/146741      void std::iter_swap<int*, int*>(int*, int*) [151]
-----------------------------------------------
                0.00    0.00   11717/11717       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [161]
[159]    0.0    0.00    0.00   11717         int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [159]
                0.00    0.00  303326/429660      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [141]
                0.00    0.00   67250/146741      void std::iter_swap<int*, int*>(int*, int*) [151]
-----------------------------------------------
                0.00    0.00   11717/11717       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [161]
[160]    0.0    0.00    0.00   11717         void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [160]
                0.00    0.00   28444/429660      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [141]
                0.00    0.00   11717/146741      void std::iter_swap<int*, int*>(int*, int*) [151]
-----------------------------------------------
                0.00    0.00   11717/11717       void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [167]
[161]    0.0    0.00    0.00   11717         int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [161]
                0.00    0.00   11717/11717       void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [160]
                0.00    0.00   11717/11717       int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [159]
-----------------------------------------------
                0.00    0.00    7076/7076        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter) [163]
[162]    0.0    0.00    0.00    7076         __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Iter_comp_iter({lambda(int, int)#2}) [162]
                0.00    0.00    7076/189715      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&) [142]
-----------------------------------------------
                0.00    0.00    7076/7076        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}) [84]
[163]    0.0    0.00    0.00    7076         __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter) [163]
                0.00    0.00    7076/189715      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&) [142]
                0.00    0.00    7076/7076        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Iter_comp_iter({lambda(int, int)#2}) [162]
-----------------------------------------------
                0.00    0.00    7071/7071        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [109]
[164]    0.0    0.00    0.00    7071         void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [164]
                0.00    0.00   84384/175563      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [145]
                0.00    0.00   84384/175563      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [146]
-----------------------------------------------
                0.00    0.00    6526/6526        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter) [166]
[165]    0.0    0.00    0.00    6526         __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Iter_comp_iter({lambda(int, int)#1}) [165]
                0.00    0.00    6526/179387      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&) [143]
-----------------------------------------------
                0.00    0.00    6526/6526        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}) [71]
[166]    0.0    0.00    0.00    6526         __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter) [166]
                0.00    0.00    6526/179387      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&) [143]
                0.00    0.00    6526/6526        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Iter_comp_iter({lambda(int, int)#1}) [165]
-----------------------------------------------
                               11717             void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [167]
                0.00    0.00    6526/6526        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [72]
[167]    0.0    0.00    0.00    6526+11717   void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [167]
                0.00    0.00   11717/11717       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [161]
                               11717             void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [167]
-----------------------------------------------
                0.00    0.00    1701/3435        std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [173]
                0.00    0.00    1734/3435        std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [169]
[168]    0.0    0.00    0.00    3435         std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [168]
-----------------------------------------------
                0.00    0.00      33/1734        std::ios_base::unsetf(std::_Ios_Fmtflags) [179]
                0.00    0.00    1701/1734        std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [173]
[169]    0.0    0.00    0.00    1734         std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [169]
                0.00    0.00    1734/3435        std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [168]
-----------------------------------------------
                0.00    0.00      33/1734        std::ios_base::unsetf(std::_Ios_Fmtflags) [179]
                0.00    0.00    1701/1734        std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [173]
[170]    0.0    0.00    0.00    1734         std::operator~(std::_Ios_Fmtflags) [170]
-----------------------------------------------
                0.00    0.00       6/1707        std::ios_base::setf(std::_Ios_Fmtflags) [235]
                0.00    0.00    1701/1707        std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [173]
[171]    0.0    0.00    0.00    1707         std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [171]
                0.00    0.00    1707/1707        std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [172]
-----------------------------------------------
                0.00    0.00    1707/1707        std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [171]
[172]    0.0    0.00    0.00    1707         std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [172]
-----------------------------------------------
                0.00    0.00    1701/1701        std::right(std::ios_base&) [618]
[173]    0.0    0.00    0.00    1701         std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [173]
                0.00    0.00    1701/1734        std::operator~(std::_Ios_Fmtflags) [170]
                0.00    0.00    1701/1734        std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [169]
                0.00    0.00    1701/3435        std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [168]
                0.00    0.00    1701/1707        std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [171]
-----------------------------------------------
                0.00    0.00       2/1701        main [1]
                0.00    0.00       5/1701        print_board_fancy(Board const*) [280]
                0.00    0.00    1694/1701        get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[174]    0.0    0.00    0.00    1701         std::setw(int) [174]
-----------------------------------------------
                0.00    0.00     256/256         print_board_fancy(Board const*)::{lambda(int const (*) [8][8], int)#3}::operator()(int const (*) [8][8], int) const [198]
[175]    0.0    0.00    0.00     256         print_board_fancy(Board const*)::{lambda(char const*, int)#1}::operator()(char const*, int) const [175]
-----------------------------------------------
                0.00    0.00      60/60          Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [195]
[176]    0.0    0.00    0.00      60         Coordinate* std::__niter_base<Coordinate*>(Coordinate*) [176]
-----------------------------------------------
                0.00    0.00       4/40          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00      16/40          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [79]
                0.00    0.00      20/40          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&) [207]
[177]    0.0    0.00    0.00      40         __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const [177]
-----------------------------------------------
                0.00    0.00      10/40          std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [223]
                0.00    0.00      10/40          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&) [218]
                0.00    0.00      20/40          std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&) [190]
[178]    0.0    0.00    0.00      40         unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [178]
-----------------------------------------------
                0.00    0.00      33/33          std::noshowpos(std::ios_base&) [634]
[179]    0.0    0.00    0.00      33         std::ios_base::unsetf(std::_Ios_Fmtflags) [179]
                0.00    0.00      33/1734        std::operator~(std::_Ios_Fmtflags) [170]
                0.00    0.00      33/1734        std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [169]
-----------------------------------------------
                0.00    0.00      10/30          __gnu_cxx::new_allocator<Coordinate>::allocate(unsigned long, void const*) [206]
                0.00    0.00      20/30          std::allocator_traits<std::allocator<Coordinate> >::max_size(std::allocator<Coordinate> const&) [189]
[180]    0.0    0.00    0.00      30         __gnu_cxx::new_allocator<Coordinate>::max_size() const [180]
-----------------------------------------------
                0.00    0.00      30/30          DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [228]
[181]    0.0    0.00    0.00      30         DisaggregatedScore* std::__niter_base<DisaggregatedScore*>(DisaggregatedScore*) [181]
-----------------------------------------------
                0.00    0.00       2/22          std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [270]
                0.00    0.00       4/22          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00      16/22          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [79]
[182]    0.0    0.00    0.00      22         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() [182]
-----------------------------------------------
                0.00    0.00       2/20          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [107]
                0.00    0.00       8/20          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [58]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&) [240]
[183]    0.0    0.00    0.00      20         __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const [183]
-----------------------------------------------
                0.00    0.00      10/20          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [87]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [241]
[184]    0.0    0.00    0.00      20         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [184]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const [186]
[185]    0.0    0.00    0.00      20         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() const [185]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [210]
[186]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const [186]
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&) [190]
                0.00    0.00      20/20          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() const [185]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [242]
[187]    0.0    0.00    0.00      20         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::size() const [187]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [243]
[188]    0.0    0.00    0.00      20         std::vector<int, std::allocator<int> >::size() const [188]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&) [190]
[189]    0.0    0.00    0.00      20         std::allocator_traits<std::allocator<Coordinate> >::max_size(std::allocator<Coordinate> const&) [189]
                0.00    0.00      20/30          __gnu_cxx::new_allocator<Coordinate>::max_size() const [180]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const [186]
[190]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&) [190]
                0.00    0.00      20/20          std::allocator_traits<std::allocator<Coordinate> >::max_size(std::allocator<Coordinate> const&) [189]
                0.00    0.00      20/40          unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [178]
-----------------------------------------------
                0.00    0.00       4/20          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00      16/20          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [79]
[191]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [191]
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_do_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&, std::integral_constant<bool, true>) [192]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [191]
[192]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::_S_do_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&, std::integral_constant<bool, true>) [192]
                0.00    0.00      20/20          Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [195]
-----------------------------------------------
                0.00    0.00       4/20          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00      16/20          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [79]
[193]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate() [193]
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [194]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate() [193]
[194]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [194]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_do_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&, std::integral_constant<bool, true>) [192]
[195]    0.0    0.00    0.00      20         Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [195]
                0.00    0.00      60/60          Coordinate* std::__niter_base<Coordinate*>(Coordinate*) [176]
                0.00    0.00      20/20          std::enable_if<std::__is_bitwise_relocatable<Coordinate, void>::value, Coordinate*>::type std::__relocate_a_1<Coordinate, Coordinate>(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [196]
-----------------------------------------------
                0.00    0.00      20/20          Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [195]
[196]    0.0    0.00    0.00      20         std::enable_if<std::__is_bitwise_relocatable<Coordinate, void>::value, Coordinate*>::type std::__relocate_a_1<Coordinate, Coordinate>(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [196]
-----------------------------------------------
                0.00    0.00       5/20          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [243]
                0.00    0.00       5/20          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [242]
                0.00    0.00      10/20          std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [210]
[197]    0.0    0.00    0.00      20         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [197]
-----------------------------------------------
                0.00    0.00      16/16          print_board_fancy(Board const*) [280]
[198]    0.0    0.00    0.00      16         print_board_fancy(Board const*)::{lambda(int const (*) [8][8], int)#3}::operator()(int const (*) [8][8], int) const [198]
                0.00    0.00     256/256         print_board_fancy(Board const*)::{lambda(char const*, int)#1}::operator()(char const*, int) const [175]
-----------------------------------------------
                0.00    0.00       5/15          __gnu_cxx::new_allocator<DisaggregatedScore>::allocate(unsigned long, void const*) [237]
                0.00    0.00      10/15          std::allocator_traits<std::allocator<DisaggregatedScore> >::max_size(std::allocator<DisaggregatedScore> const&) [216]
[199]    0.0    0.00    0.00      15         __gnu_cxx::new_allocator<DisaggregatedScore>::max_size() const [199]
-----------------------------------------------
                0.00    0.00       5/15          __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [239]
                0.00    0.00      10/15          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [217]
[200]    0.0    0.00    0.00      15         __gnu_cxx::new_allocator<int>::max_size() const [200]
-----------------------------------------------
                0.00    0.00      14/14          print_board(Board const*) [279]
[201]    0.0    0.00    0.00      14         print_board(Board const*)::{lambda()#1}::operator()() const [201]
-----------------------------------------------
                0.00    0.00       2/12          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base() [268]
                0.00    0.00       2/12          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00       8/12          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [79]
[202]    0.0    0.00    0.00      12         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [202]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<Coordinate> >::deallocate(std::allocator<Coordinate>&, Coordinate*, unsigned long) [214]
-----------------------------------------------
                0.00    0.00       1/11          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector() [310]
                0.00    0.00       2/11          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [107]
                0.00    0.00       8/11          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [58]
[203]    0.0    0.00    0.00      11         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() [203]
-----------------------------------------------
                0.00    0.00       1/11          std::vector<int, std::allocator<int> >::~vector() [312]
                0.00    0.00      10/11          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [87]
[204]    0.0    0.00    0.00      11         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [204]
-----------------------------------------------
                0.00    0.00      10/10          std::allocator_traits<std::allocator<Coordinate> >::deallocate(std::allocator<Coordinate>&, Coordinate*, unsigned long) [214]
[205]    0.0    0.00    0.00      10         __gnu_cxx::new_allocator<Coordinate>::deallocate(Coordinate*, unsigned long) [205]
-----------------------------------------------
                0.00    0.00      10/10          std::allocator_traits<std::allocator<Coordinate> >::allocate(std::allocator<Coordinate>&, unsigned long) [215]
[206]    0.0    0.00    0.00      10         __gnu_cxx::new_allocator<Coordinate>::allocate(unsigned long, void const*) [206]
                0.00    0.00      10/30          __gnu_cxx::new_allocator<Coordinate>::max_size() const [180]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00       8/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [79]
[207]    0.0    0.00    0.00      10         __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&) [207]
                0.00    0.00      20/40          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const [177]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const [211]
[208]    0.0    0.00    0.00      10         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() const [208]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::max_size() const [212]
[209]    0.0    0.00    0.00      10         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [209]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00       8/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [79]
[210]    0.0    0.00    0.00      10         std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [210]
                0.00    0.00      40/674356      std::vector<Coordinate, std::allocator<Coordinate> >::size() const [136]
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const [186]
                0.00    0.00      10/20          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [197]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [242]
[211]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const [211]
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&) [218]
                0.00    0.00      10/10          std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() const [208]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [243]
[212]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::max_size() const [212]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [223]
                0.00    0.00      10/10          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [209]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00       8/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [79]
[213]    0.0    0.00    0.00      10         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long) [213]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<Coordinate> >::allocate(std::allocator<Coordinate>&, unsigned long) [215]
-----------------------------------------------
                0.00    0.00      10/10          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [202]
[214]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<Coordinate> >::deallocate(std::allocator<Coordinate>&, Coordinate*, unsigned long) [214]
                0.00    0.00      10/10          __gnu_cxx::new_allocator<Coordinate>::deallocate(Coordinate*, unsigned long) [205]
-----------------------------------------------
                0.00    0.00      10/10          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long) [213]
[215]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<Coordinate> >::allocate(std::allocator<Coordinate>&, unsigned long) [215]
                0.00    0.00      10/10          __gnu_cxx::new_allocator<Coordinate>::allocate(unsigned long, void const*) [206]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&) [218]
[216]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<DisaggregatedScore> >::max_size(std::allocator<DisaggregatedScore> const&) [216]
                0.00    0.00      10/15          __gnu_cxx::new_allocator<DisaggregatedScore>::max_size() const [199]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [223]
[217]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [217]
                0.00    0.00      10/15          __gnu_cxx::new_allocator<int>::max_size() const [200]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const [211]
[218]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&) [218]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<DisaggregatedScore> >::max_size(std::allocator<DisaggregatedScore> const&) [216]
                0.00    0.00      10/40          unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [178]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [107]
                0.00    0.00       8/10          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [58]
[219]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [219]
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_do_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&, std::integral_constant<bool, true>) [220]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [219]
[220]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_do_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&, std::integral_constant<bool, true>) [220]
                0.00    0.00      10/10          DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [228]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [107]
                0.00    0.00       8/10          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [58]
[221]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate() [221]
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [222]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate() [221]
[222]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [222]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::max_size() const [212]
[223]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [223]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [217]
                0.00    0.00      10/40          unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [178]
-----------------------------------------------
                0.00    0.00      10/10          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [87]
[224]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&) [224]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>) [225]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&) [224]
[225]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>) [225]
                0.00    0.00      10/10          int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [229]
-----------------------------------------------
                0.00    0.00      10/10          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [87]
[226]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::_S_use_relocate() [226]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [227]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_use_relocate() [226]
[227]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [227]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_do_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&, std::integral_constant<bool, true>) [220]
[228]    0.0    0.00    0.00      10         DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [228]
                0.00    0.00      30/30          DisaggregatedScore* std::__niter_base<DisaggregatedScore*>(DisaggregatedScore*) [181]
                0.00    0.00      10/10          std::enable_if<std::__is_bitwise_relocatable<DisaggregatedScore, void>::value, DisaggregatedScore*>::type std::__relocate_a_1<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [230]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>) [225]
[229]    0.0    0.00    0.00      10         int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [229]
                0.00    0.00      30/83610       int* std::__niter_base<int*>(int*) [152]
                0.00    0.00      10/10          std::enable_if<std::__is_bitwise_relocatable<int, void>::value, int*>::type std::__relocate_a_1<int, int>(int*, int*, int*, std::allocator<int>&) [231]
-----------------------------------------------
                0.00    0.00      10/10          DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [228]
[230]    0.0    0.00    0.00      10         std::enable_if<std::__is_bitwise_relocatable<DisaggregatedScore, void>::value, DisaggregatedScore*>::type std::__relocate_a_1<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [230]
-----------------------------------------------
                0.00    0.00      10/10          int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [229]
[231]    0.0    0.00    0.00      10         std::enable_if<std::__is_bitwise_relocatable<int, void>::value, int*>::type std::__relocate_a_1<int, int>(int*, int*, int*, std::allocator<int>&) [231]
-----------------------------------------------
                0.00    0.00       2/8           void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [41]
                0.00    0.00       2/8           void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&) [44]
                0.00    0.00       2/8           void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00       2/8           void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&) [51]
[232]    0.0    0.00    0.00       8         Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&) [232]
-----------------------------------------------
                0.00    0.00       1/6           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base() [303]
                0.00    0.00       1/6           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [107]
                0.00    0.00       4/6           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [58]
[233]    0.0    0.00    0.00       6         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [233]
                0.00    0.00       5/5           std::allocator_traits<std::allocator<DisaggregatedScore> >::deallocate(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, unsigned long) [244]
-----------------------------------------------
                0.00    0.00       1/6           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [308]
                0.00    0.00       5/6           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [87]
[234]    0.0    0.00    0.00       6         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [234]
                0.00    0.00       5/5           std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [246]
-----------------------------------------------
                0.00    0.00       6/6           std::showpos(std::ios_base&) [625]
[235]    0.0    0.00    0.00       6         std::ios_base::setf(std::_Ios_Fmtflags) [235]
                0.00    0.00       6/1707        std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [171]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator_traits<std::allocator<DisaggregatedScore> >::deallocate(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, unsigned long) [244]
[236]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<DisaggregatedScore>::deallocate(DisaggregatedScore*, unsigned long) [236]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator_traits<std::allocator<DisaggregatedScore> >::allocate(std::allocator<DisaggregatedScore>&, unsigned long) [245]
[237]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<DisaggregatedScore>::allocate(unsigned long, void const*) [237]
                0.00    0.00       5/15          __gnu_cxx::new_allocator<DisaggregatedScore>::max_size() const [199]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [246]
[238]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [238]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [247]
[239]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [239]
                0.00    0.00       5/15          __gnu_cxx::new_allocator<int>::max_size() const [200]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [107]
                0.00    0.00       4/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [58]
[240]    0.0    0.00    0.00       5         __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&) [240]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const [183]
-----------------------------------------------
                0.00    0.00       5/5           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [87]
[241]    0.0    0.00    0.00       5         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [241]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [184]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [107]
                0.00    0.00       4/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [58]
[242]    0.0    0.00    0.00       5         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [242]
                0.00    0.00      20/20          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::size() const [187]
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const [211]
                0.00    0.00       5/20          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [197]
-----------------------------------------------
                0.00    0.00       5/5           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [87]
[243]    0.0    0.00    0.00       5         std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [243]
                0.00    0.00      20/20          std::vector<int, std::allocator<int> >::size() const [188]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::max_size() const [212]
                0.00    0.00       5/20          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [197]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [233]
[244]    0.0    0.00    0.00       5         std::allocator_traits<std::allocator<DisaggregatedScore> >::deallocate(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, unsigned long) [244]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<DisaggregatedScore>::deallocate(DisaggregatedScore*, unsigned long) [236]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long) [66]
[245]    0.0    0.00    0.00       5         std::allocator_traits<std::allocator<DisaggregatedScore> >::allocate(std::allocator<DisaggregatedScore>&, unsigned long) [245]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<DisaggregatedScore>::allocate(unsigned long, void const*) [237]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [234]
[246]    0.0    0.00    0.00       5         std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [246]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [238]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [97]
[247]    0.0    0.00    0.00       5         std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [247]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [239]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() const [257]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [254]
[248]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore const* const&) [248]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<int, std::allocator<int> >::end() const [259]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator-(long) const [256]
[249]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [249]
-----------------------------------------------
                0.00    0.00       1/4           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [105]
                0.00    0.00       1/4           void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&) [121]
                0.00    0.00       1/4           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [107]
                0.00    0.00       1/4           void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&) [120]
[250]    0.0    0.00    0.00       4         DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&) [250]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<Coordinate>::allocator() [261]
[251]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Coordinate>::new_allocator() [251]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<Coordinate>::~allocator() [262]
[252]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Coordinate>::~new_allocator() [252]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [258]
[253]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [253]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [258]
[254]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [254]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore const* const&) [248]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::back() const [260]
[255]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator*() const [255]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::back() const [260]
[256]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator-(long) const [256]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [249]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [258]
[257]    0.0    0.00    0.00       2         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() const [257]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore const* const&) [248]
-----------------------------------------------
                0.00    0.00       1/2           print_board_fancy(Board const*) [280]
                0.00    0.00       1/2           print_board(Board const*) [279]
[258]    0.0    0.00    0.00       2         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [258]
                0.00    0.00       2/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() const [257]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [254]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [253]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::back() const [260]
[259]    0.0    0.00    0.00       2         std::vector<int, std::allocator<int> >::end() const [259]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [249]
-----------------------------------------------
                0.00    0.00       1/2           print_board_fancy(Board const*) [280]
                0.00    0.00       1/2           print_board(Board const*) [279]
[260]    0.0    0.00    0.00       2         std::vector<int, std::allocator<int> >::back() const [260]
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::end() const [259]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator-(long) const [256]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator*() const [255]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl() [264]
[261]    0.0    0.00    0.00       2         std::allocator<Coordinate>::allocator() [261]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Coordinate>::new_allocator() [251]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::~_Vector_impl() [265]
[262]    0.0    0.00    0.00       2         std::allocator<Coordinate>::~allocator() [262]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Coordinate>::~new_allocator() [252]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Coordinate*>(Coordinate*, Coordinate*) [272]
[263]    0.0    0.00    0.00       2         void std::_Destroy_aux<true>::__destroy<Coordinate*>(Coordinate*, Coordinate*) [263]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_base() [267]
[264]    0.0    0.00    0.00       2         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl() [264]
                0.00    0.00       2/2           std::allocator<Coordinate>::allocator() [261]
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl_data::_Vector_impl_data() [266]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base() [268]
[265]    0.0    0.00    0.00       2         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::~_Vector_impl() [265]
                0.00    0.00       2/2           std::allocator<Coordinate>::~allocator() [262]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl() [264]
[266]    0.0    0.00    0.00       2         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl_data::_Vector_impl_data() [266]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::vector() [269]
[267]    0.0    0.00    0.00       2         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_base() [267]
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl() [264]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [270]
[268]    0.0    0.00    0.00       2         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base() [268]
                0.00    0.00       2/12          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [202]
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::~_Vector_impl() [265]
-----------------------------------------------
                0.00    0.00       2/2           Board::Board() [287]
[269]    0.0    0.00    0.00       2         std::vector<Coordinate, std::allocator<Coordinate> >::vector() [269]
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_base() [267]
-----------------------------------------------
                0.00    0.00       2/2           Board::~Board() [288]
[270]    0.0    0.00    0.00       2         std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [270]
                0.00    0.00       2/22          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() [182]
                0.00    0.00       2/2           void std::_Destroy<Coordinate*, Coordinate>(Coordinate*, Coordinate*, std::allocator<Coordinate>&) [273]
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base() [268]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&) [42]
[271]    0.0    0.00    0.00       2         std::remove_reference<Coordinate&>::type&& std::move<Coordinate&>(Coordinate&) [271]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Coordinate*, Coordinate>(Coordinate*, Coordinate*, std::allocator<Coordinate>&) [273]
[272]    0.0    0.00    0.00       2         void std::_Destroy<Coordinate*>(Coordinate*, Coordinate*) [272]
                0.00    0.00       2/2           void std::_Destroy_aux<true>::__destroy<Coordinate*>(Coordinate*, Coordinate*) [263]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [270]
[273]    0.0    0.00    0.00       2         void std::_Destroy<Coordinate*, Coordinate>(Coordinate*, Coordinate*, std::allocator<Coordinate>&) [273]
                0.00    0.00       2/2           void std::_Destroy<Coordinate*>(Coordinate*, Coordinate*) [272]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [49]
[274]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z10copy_board5Board [274]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [283]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [49]
[275]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z11score_total18DisaggregatedScore [275]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [285]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [49]
[276]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z13get_best_moveP5BoardiiibbiPA10000_8PVRecord [276]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [286]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [49]
[277]    0.0    0.00    0.00       1         _GLOBAL__sub_I_pv_table [277]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [281]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[278]    0.0    0.00    0.00       1         zero_table(PVRecord (*) [10000]) [278]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[279]    0.0    0.00    0.00       1         print_board(Board const*) [279]
                0.00    0.00      14/14          print_board(Board const*)::{lambda()#1}::operator()() const [201]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::back() const [260]
                0.00    0.00       1/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [258]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[280]    0.0    0.00    0.00       1         print_board_fancy(Board const*) [280]
                0.00    0.00      16/16          print_board_fancy(Board const*)::{lambda(int const (*) [8][8], int)#3}::operator()(int const (*) [8][8], int) const [198]
                0.00    0.00       5/1701        std::setw(int) [174]
                0.00    0.00       1/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [258]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::back() const [260]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_pv_table [277]
[281]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [281]
-----------------------------------------------
                                   1             __static_initialization_and_destruction_0(int, int) [282]
                0.00    0.00       1/1           __libc_csu_init [49]
[282]    0.0    0.00    0.00       1+1       __static_initialization_and_destruction_0(int, int) [282]
                                   1             __static_initialization_and_destruction_0(int, int) [282]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10copy_board5Board [274]
[283]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [283]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10print_movePK5Board4Move [48]
[284]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [284]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z11score_total18DisaggregatedScore [275]
[285]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [285]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z13get_best_moveP5BoardiiibbiPA10000_8PVRecord [276]
[286]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [286]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[287]    0.0    0.00    0.00       1         Board::Board() [287]
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::vector() [269]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [311]
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::vector() [309]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[288]    0.0    0.00    0.00       1         Board::~Board() [288]
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [270]
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector() [310]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [312]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<DisaggregatedScore>::allocator() [293]
[289]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<DisaggregatedScore>::new_allocator() [289]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<DisaggregatedScore>::~allocator() [294]
[290]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<DisaggregatedScore>::~new_allocator() [290]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::allocator() [295]
[291]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::new_allocator() [291]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::~allocator() [296]
[292]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::~new_allocator() [292]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl() [299]
[293]    0.0    0.00    0.00       1         std::allocator<DisaggregatedScore>::allocator() [293]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<DisaggregatedScore>::new_allocator() [289]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::~_Vector_impl() [300]
[294]    0.0    0.00    0.00       1         std::allocator<DisaggregatedScore>::~allocator() [294]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<DisaggregatedScore>::~new_allocator() [290]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [304]
[295]    0.0    0.00    0.00       1         std::allocator<int>::allocator() [295]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::new_allocator() [291]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [305]
[296]    0.0    0.00    0.00       1         std::allocator<int>::~allocator() [296]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::~new_allocator() [292]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [314]
[297]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [297]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<int*>(int*, int*) [316]
[298]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [298]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_base() [302]
[299]    0.0    0.00    0.00       1         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl() [299]
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl_data::_Vector_impl_data() [301]
                0.00    0.00       1/1           std::allocator<DisaggregatedScore>::allocator() [293]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base() [303]
[300]    0.0    0.00    0.00       1         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::~_Vector_impl() [300]
                0.00    0.00       1/1           std::allocator<DisaggregatedScore>::~allocator() [294]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl() [299]
[301]    0.0    0.00    0.00       1         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl_data::_Vector_impl_data() [301]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::vector() [309]
[302]    0.0    0.00    0.00       1         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_base() [302]
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl() [299]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector() [310]
[303]    0.0    0.00    0.00       1         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base() [303]
                0.00    0.00       1/6           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [233]
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::~_Vector_impl() [300]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [307]
[304]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [304]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [306]
                0.00    0.00       1/1           std::allocator<int>::allocator() [295]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [308]
[305]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [305]
                0.00    0.00       1/1           std::allocator<int>::~allocator() [296]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [304]
[306]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [306]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [311]
[307]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [307]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [304]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [312]
[308]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [308]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [305]
                0.00    0.00       1/6           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [234]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board() [287]
[309]    0.0    0.00    0.00       1         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::vector() [309]
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_base() [302]
-----------------------------------------------
                0.00    0.00       1/1           Board::~Board() [288]
[310]    0.0    0.00    0.00       1         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector() [310]
                0.00    0.00       1/11          std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() [203]
                0.00    0.00       1/1           void std::_Destroy<DisaggregatedScore*, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [315]
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base() [303]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board() [287]
[311]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::vector() [311]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [307]
-----------------------------------------------
                0.00    0.00       1/1           Board::~Board() [288]
[312]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::~vector() [312]
                0.00    0.00       1/11          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [204]
                0.00    0.00       1/1           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [317]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [308]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&) [106]
[313]    0.0    0.00    0.00       1         std::remove_reference<DisaggregatedScore&>::type&& std::move<DisaggregatedScore&>(DisaggregatedScore&) [313]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<DisaggregatedScore*, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [315]
[314]    0.0    0.00    0.00       1         void std::_Destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [314]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [297]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector() [310]
[315]    0.0    0.00    0.00       1         void std::_Destroy<DisaggregatedScore*, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [315]
                0.00    0.00       1/1           void std::_Destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [314]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [317]
[316]    0.0    0.00    0.00       1         void std::_Destroy<int*>(int*, int*) [316]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [298]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [312]
[317]    0.0    0.00    0.00       1         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [317]
                0.00    0.00       1/1           void std::_Destroy<int*>(int*, int*) [316]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [274] _GLOBAL__sub_I__Z10copy_board5Board [25] __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator-(long) const [54] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end()
  [48] _GLOBAL__sub_I__Z10print_movePK5Board4Move [183] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const [21] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back()
 [275] _GLOBAL__sub_I__Z11score_total18DisaggregatedScore [88] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [119] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin()
 [276] _GLOBAL__sub_I__Z13get_best_moveP5BoardiiibbiPA10000_8PVRecord [32] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [82] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::pop_back()
 [277] _GLOBAL__sub_I_pv_table [253] __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [106] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&)
   [7] apply_move(Board*, Move) [254] __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [26] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&)
 [115] apply_null(Board*)    [255] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator*() const [309] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::vector()
  [28] flip_color(Color)     [256] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator-(long) const [310] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector()
  [37] init_board(Board*)    [184] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [223] std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)
  [89] is_capture(Move)      [129] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [224] std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&)
 [114] print_move(Board const*, Move) [60] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const [33] void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
 [278] zero_table(PVRecord (*) [10000]) [185] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() const [225] std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>)
  [15] max_ray_len(int, int, int, int) [208] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() const [226] std::vector<int, std::allocator<int> >::_S_use_relocate()
  [16] order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) [209] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [87] void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)
 [279] print_board(Board const*) [210] std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [227] std::vector<int, std::allocator<int> >::_S_nothrow_relocate(std::integral_constant<bool, true>)
 [110] score_total(DisaggregatedScore) [136] std::vector<Coordinate, std::allocator<Coordinate> >::size() const [69] std::vector<int, std::allocator<int> >::end()
   [5] stable_eval(Board*, int, int, int) [186] std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const [30] std::vector<int, std::allocator<int> >::back()
   [4] change_piece(Board*, Coordinate, Piece, bool) [242] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [118] std::vector<int, std::allocator<int> >::begin()
  [35] piece_equals(Piece, Piece) [257] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() const [83] std::vector<int, std::allocator<int> >::pop_back()
  [13] add_eval_diff(Board*, Coordinate, Piece, bool) [258] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [34] std::vector<int, std::allocator<int> >::push_back(int&&)
   [3] get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) [187] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::size() const [311] std::vector<int, std::allocator<int> >::vector()
  [64] quintant_from(Coordinate) [211] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const [312] std::vector<int, std::allocator<int> >::~vector()
  [17] generate_moves(Board const*, MoveList*) [243] std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [235] std::ios_base::setf(std::_Ios_Fmtflags)
  [18] generate_moves(Board const*, MoveList*, Color) [259] std::vector<int, std::allocator<int> >::end() const [173] std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  [57] is_irreversible(Move, Piece) [260] std::vector<int, std::allocator<int> >::back() const [179] std::ios_base::unsetf(std::_Ios_Fmtflags)
  [22] kronecker_piece(Board const*, Coordinate, Piece) [188] std::vector<int, std::allocator<int> >::size() const [86] __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > std::__miter_base<__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > >(__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >)
 [280] print_board_fancy(Board const*) [212] std::vector<int, std::allocator<int> >::max_size() const [98] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
  [56] generate_king_moves(Board const*, MoveList*, Coordinate) [261] std::allocator<Coordinate>::allocator() [153] int* std::__miter_base<int*>(int*)
  [38] generate_pawn_moves(Board const*, MoveList*, Coordinate) [262] std::allocator<Coordinate>::~allocator() [176] Coordinate* std::__niter_base<Coordinate*>(Coordinate*)
  [68] generate_rook_moves(Board const*, MoveList*, Coordinate) [293] std::allocator<DisaggregatedScore>::allocator() [181] DisaggregatedScore* std::__niter_base<DisaggregatedScore*>(DisaggregatedScore*)
   [6] shallow_greedy_move(Board*) [294] std::allocator<DisaggregatedScore>::~allocator() [152] int* std::__niter_base<int*>(int*)
  [12] update_king_attacks(Board*, Coordinate, Color, bool) [295] std::allocator<int>::allocator() [155] int* std::__niter_wrap<int*>(int* const&, int*)
  [11] update_weak_squares(Board*, Color, int) [296] std::allocator<int>::~allocator() [195] Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  [31] add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [263] void std::_Destroy_aux<true>::__destroy<Coordinate*>(Coordinate*, Coordinate*) [228] DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  [55] generate_queen_moves(Board const*, MoveList*, Coordinate) [297] void std::_Destroy_aux<true>::__destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [229] int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
   [9] update_xrays_by_pawn(Board*, Coordinate, Piece, bool) [298] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [92] int* std::move_backward<int*, int*>(int*, int*, int*)
  [77] generate_bishop_moves(Board const*, MoveList*, Coordinate) [213] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long) [196] std::enable_if<std::__is_bitwise_relocatable<Coordinate, void>::value, Coordinate*>::type std::__relocate_a_1<Coordinate, Coordinate>(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  [40] generate_knight_moves(Board const*, MoveList*, Coordinate) [264] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl() [230] std::enable_if<std::__is_bitwise_relocatable<DisaggregatedScore, void>::value, DisaggregatedScore*>::type std::__relocate_a_1<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  [20] update_least_advanced(Board*, Color, int) [265] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::~_Vector_impl() [231] std::enable_if<std::__is_bitwise_relocatable<int, void>::value, int*>::type std::__relocate_a_1<int, int>(int*, int*, int*, std::allocator<int>&)
  [10] update_xrays_by_piece(Board*, Coordinate, Piece, bool) [202] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [108] void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  [19] generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [266] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl_data::_Vector_impl_data() [75] void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  [50] add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [182] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() [96] void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [281] __static_initialization_and_destruction_0(int, int) [267] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_base() [167] void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
 [282] __static_initialization_and_destruction_0(int, int) [268] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base() [94] int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [283] __static_initialization_and_destruction_0(int, int) [66] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long) [159] int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
 [284] __static_initialization_and_destruction_0(int, int) [299] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl() [156] int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
 [285] __static_initialization_and_destruction_0(int, int) [300] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::~_Vector_impl() [109] void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [286] __static_initialization_and_destruction_0(int, int) [233] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [70] void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  [65] parity(Coordinate)    [301] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl_data::_Vector_impl_data() [158] void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  [23] evaluate(Board*)      [203] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() [160] void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  [24] is_valid(Coordinate)  [302] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_base() [99] DisaggregatedScore* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore*, DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
 [113] print_pv(Board*, int, int, PVRecord (*) [10000]) [303] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base() [100] DisaggregatedScore* std::__uninitialized_copy_a<std::move_iterator<DisaggregatedScore*>, DisaggregatedScore*, DisaggregatedScore>(std::move_iterator<DisaggregatedScore*>, std::move_iterator<DisaggregatedScore*>, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  [67] get_piece(Board const*, Coordinate) [97] std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [93] int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*)
   [8] undo_move(Board*, Move) [304] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [146] void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [116] undo_null(Board*)     [305] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [148] void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
 [287] Board::Board()        [234] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [164] void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [288] Board::~Board()       [306] std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [112] void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
 [205] __gnu_cxx::new_allocator<Coordinate>::deallocate(Coordinate*, unsigned long) [204] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [95] int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [103] void __gnu_cxx::new_allocator<Coordinate>::destroy<Coordinate>(Coordinate*) [307] std::_Vector_base<int, std::allocator<int> >::_Vector_base() [161] int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
 [206] __gnu_cxx::new_allocator<Coordinate>::allocate(unsigned long, void const*) [308] std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [74] Coordinate* std::__uninitialized_move_if_noexcept_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  [39] void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&) [214] std::allocator_traits<std::allocator<Coordinate> >::deallocate(std::allocator<Coordinate>&, Coordinate*, unsigned long) [101] DisaggregatedScore* std::__uninitialized_move_if_noexcept_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  [51] void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&) [62] void std::allocator_traits<std::allocator<Coordinate> >::destroy<Coordinate>(std::allocator<Coordinate>&, Coordinate*) [197] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [111] __gnu_cxx::new_allocator<Coordinate>::new_allocator(__gnu_cxx::new_allocator<Coordinate> const&) [215] std::allocator_traits<std::allocator<Coordinate> >::allocate(std::allocator<Coordinate>&, unsigned long) [178] unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
 [251] __gnu_cxx::new_allocator<Coordinate>::new_allocator() [189] std::allocator_traits<std::allocator<Coordinate> >::max_size(std::allocator<Coordinate> const&) [157] std::__lg(long)
 [252] __gnu_cxx::new_allocator<Coordinate>::~new_allocator() [36] void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [102] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > std::copy<__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > >(__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >)
 [236] __gnu_cxx::new_allocator<DisaggregatedScore>::deallocate(DisaggregatedScore*, unsigned long) [44] void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&) [271] std::remove_reference<Coordinate&>::type&& std::move<Coordinate&>(Coordinate&)
 [131] void __gnu_cxx::new_allocator<DisaggregatedScore>::destroy<DisaggregatedScore>(DisaggregatedScore*) [244] std::allocator_traits<std::allocator<DisaggregatedScore> >::deallocate(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, unsigned long) [313] std::remove_reference<DisaggregatedScore&>::type&& std::move<DisaggregatedScore&>(DisaggregatedScore&)
 [237] __gnu_cxx::new_allocator<DisaggregatedScore>::allocate(unsigned long, void const*) [133] void std::allocator_traits<std::allocator<DisaggregatedScore> >::destroy<DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*) [147] std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>(std::remove_reference&&)
  [78] void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&) [245] std::allocator_traits<std::allocator<DisaggregatedScore> >::allocate(std::allocator<DisaggregatedScore>&, unsigned long) [149] std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>(std::remove_reference&&)
 [120] void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&) [216] std::allocator_traits<std::allocator<DisaggregatedScore> >::max_size(std::allocator<DisaggregatedScore> const&) [142] std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&)
 [289] __gnu_cxx::new_allocator<DisaggregatedScore>::new_allocator() [63] void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [143] std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&)
 [290] __gnu_cxx::new_allocator<DisaggregatedScore>::~new_allocator() [121] void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&) [130] std::remove_reference<int&>::type&& std::move<int&>(int&)
 [238] __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [246] std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [174] std::setw(int)
 [132] void __gnu_cxx::new_allocator<int>::destroy<int>(int*) [104] void std::allocator_traits<std::allocator<int> >::destroy<int>(std::allocator<int>&, int*) [84] void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2})
 [239] __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [247] std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [71] void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1})
  [76] void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [217] std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [150] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&)
 [291] __gnu_cxx::new_allocator<int>::new_allocator() [47] void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [85] void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [292] __gnu_cxx::new_allocator<int>::~new_allocator() [154] int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [72] void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  [45] __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&) [190] std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&) [232] Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&)
  [59] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&) [191] std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [250] DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&)
 [248] __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore const* const&) [41] void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [80] Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&)
 [249] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [192] std::vector<Coordinate, std::allocator<Coordinate> >::_S_do_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&, std::integral_constant<bool, true>) [128] DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&)
  [73] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [193] std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate() [53] int&& std::forward<int>(std::remove_reference<int>::type&)
 [144] __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#2}>&&) [79] void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [272] void std::_Destroy<Coordinate*>(Coordinate*, Coordinate*)
 [138] bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int, int*>(int&, int*) [43] void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [273] void std::_Destroy<Coordinate*, Coordinate>(Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  [90] __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#1}>&&) [194] std::vector<Coordinate, std::allocator<Coordinate> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [314] void std::_Destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*)
 [139] bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int, int*>(int&, int*) [29] std::vector<Coordinate, std::allocator<Coordinate> >::end() [315] void std::_Destroy<DisaggregatedScore*, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
 [162] __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Iter_comp_iter({lambda(int, int)#2}) [14] std::vector<Coordinate, std::allocator<Coordinate> >::back() [316] void std::_Destroy<int*>(int*, int*)
 [140] bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [117] std::vector<Coordinate, std::allocator<Coordinate> >::begin() [317] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [165] __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Iter_comp_iter({lambda(int, int)#1}) [46] std::vector<Coordinate, std::allocator<Coordinate> >::pop_back() [151] void std::iter_swap<int*, int*>(int*, int*)
 [141] bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [42] std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&) [169] std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
 [145] __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [27] std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [168] std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  [91] __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [269] std::vector<Coordinate, std::allocator<Coordinate> >::vector() [170] std::operator~(std::_Ios_Fmtflags)
 [163] __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter) [270] std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [171] std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
 [166] __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter) [137] std::vector<Coordinate, std::allocator<Coordinate> >::operator[](unsigned long) [172] std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
 [207] __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&) [218] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&) [134] order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}::operator()(int, int) const
 [240] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&) [219] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [135] order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}::operator()(int, int) const
 [241] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [105] void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [201] print_board(Board const*)::{lambda()#1}::operator()() const
 [180] __gnu_cxx::new_allocator<Coordinate>::max_size() const [220] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_do_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&, std::integral_constant<bool, true>) [61] add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const
 [199] __gnu_cxx::new_allocator<DisaggregatedScore>::max_size() const [221] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate() [198] print_board_fancy(Board const*)::{lambda(int const (*) [8][8], int)#3}::operator()(int const (*) [8][8], int) const
 [200] __gnu_cxx::new_allocator<int>::max_size() const [58] void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [175] print_board_fancy(Board const*)::{lambda(char const*, int)#1}::operator()(char const*, int) const
 [177] __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const [107] void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [81] operator new(unsigned long, void*)
  [52] __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator*() const [222] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [2] <cycle 1>
