Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 19.28      2.12     2.12 17981946     0.00     0.00  update_xrays_by_pawn(Board*, Coordinate, Piece, bool)
 17.37      4.03     1.91 48874160     0.00     0.00  update_weak_squares(Board*, Color, int)
 14.82      5.66     1.63 20713292     0.00     0.00  update_xrays_by_piece(Board*, Coordinate, Piece, bool)
  5.46      6.26     0.60 40043870     0.00     0.00  change_piece(Board*, Coordinate, Piece, bool)
  3.64      6.66     0.40 186455824     0.00     0.00  max_ray_len(int, int, int, int)
  3.18      7.01     0.35 20021936     0.00     0.00  add_eval_diff(Board*, Coordinate, Piece, bool)
  2.73      7.31     0.30 22061924     0.00     0.00  update_king_attacks(Board*, Coordinate, Color, bool)
  1.59      7.49     0.18 80451581     0.00     0.00  __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator-(long) const
  1.55      7.66     0.17 160903182     0.00     0.00  __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&)
  1.55      7.83     0.17 63488510     0.00     0.00  quintant_from(Coordinate)
  1.45      7.99     0.16 17981946     0.00     0.00  update_least_advanced(Board*, Color, int)
  1.45      8.15     0.16  9671735     0.00     0.00  apply_move(Board*, Move)
  1.23      8.28     0.14 115283766     0.00     0.00  get_piece(Board const*, Coordinate)
  1.14      8.41     0.13 123234611     0.00     0.00  is_valid(Coordinate)
  1.05      8.52     0.12 39496651     0.00     0.00  add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color)
  1.05      8.64     0.12 80451581     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::back()
  1.00      8.75     0.11 19343468     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::pop_back()
  0.95      8.85     0.11 80451591     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::end()
  0.95      8.96     0.11 20736619     0.00     0.00  piece_equals(Piece, Piece)
  0.91      9.06     0.10 19343470     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&)
  0.91      9.16     0.10   243106     0.00     0.03  shallow_greedy_move(Board*)
  0.73      9.24     0.08 39288277     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end()
  0.64      9.31     0.07  9671734     0.00     0.00  undo_move(Board*, Move)
  0.64      9.38     0.07   383362     0.00     0.03  get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000])
  0.55      9.44     0.06 145328224     0.00     0.00  flip_color(Color)
  0.55      9.50     0.06        2    30.00    30.00  void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&)
  0.55      9.56     0.06  9594601     0.00     0.00  evaluate(Board*)
  0.55      9.62     0.06   378171     0.00     0.00  generate_moves(Board const*, MoveList*, Color)
  0.50      9.67     0.06 80451581     0.00     0.00  __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator*() const
  0.45      9.72     0.05 37874451     0.00     0.00  parity(Coordinate)
  0.45      9.77     0.05 19343470     0.00     0.00  void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&)
  0.45      9.82     0.05 16690725     0.00     0.00  kronecker_piece(Board const*, Coordinate, Piece)
  0.41      9.87     0.05  8851752     0.00     0.00  add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color)
  0.36      9.91     0.04 39288272     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const
  0.36      9.95     0.04 39288272     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const
  0.36      9.99     0.04 38686948     0.00     0.00  Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&)
  0.36     10.03     0.04 19266336     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const
  0.36     10.07     0.04 19266336     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const
  0.32     10.10     0.04 78576554     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&)
  0.32     10.14     0.04  9671735     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&)
  0.32     10.17     0.04  9671734     0.00     0.00  void std::allocator_traits<std::allocator<DisaggregatedScore> >::destroy<DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*)
  0.27     10.20     0.03 19343470     0.00     0.00  void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&)
  0.27     10.23     0.03 19266341     0.00     0.00  std::vector<int, std::allocator<int> >::end()
  0.27     10.26     0.03 19266336     0.00     0.00  std::vector<int, std::allocator<int> >::back()
  0.27     10.29     0.03  9671736     0.00     0.00  std::vector<int, std::allocator<int> >::push_back(int&&)
  0.27     10.32     0.03  2950584     0.00     0.00  generate_pawn_moves(Board const*, MoveList*, Coordinate)
  0.27     10.35     0.03   378171     0.00     0.00  generate_moves(Board const*, MoveList*)
  0.27     10.38     0.03        1    30.00    30.00  _GLOBAL__sub_I__Z10print_movePK5Board4Move
  0.27     10.41     0.03                             Coordinate* std::__uninitialized_move_if_noexcept_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  0.23     10.44     0.03 38532682     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
  0.23     10.46     0.03   755626     0.00     0.00  generate_rook_moves(Board const*, MoveList*, Coordinate)
  0.23     10.49     0.03   366146     0.00     0.00  generate_queen_moves(Board const*, MoveList*, Coordinate)
  0.18     10.51     0.02 29258348     0.00     0.00  is_capture(Move)
  0.18     10.53     0.02 29015213     0.00     0.00  int&& std::forward<int>(std::remove_reference<int>::type&)
  0.18     10.55     0.02 19343468     0.00     0.00  void __gnu_cxx::new_allocator<Coordinate>::destroy<Coordinate>(Coordinate*)
  0.18     10.57     0.02  9671736     0.00     0.00  void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&)
  0.18     10.59     0.02  9671736     0.00     0.00  void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
  0.18     10.61     0.02  9671734     0.00     0.00  std::vector<int, std::allocator<int> >::pop_back()
  0.18     10.63     0.02  9594601     0.00     0.00  score_total(DisaggregatedScore)
  0.18     10.65     0.02  5846578     0.00     0.00  generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate)
  0.18     10.67     0.02  4045896     0.00     0.00  add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const
  0.18     10.69     0.02   673459     0.00     0.00  generate_knight_moves(Board const*, MoveList*, Coordinate)
  0.18     10.71     0.02    13602     0.00     0.03  order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])
  0.18     10.73     0.02        4     5.00     7.00  void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&)
  0.18     10.75     0.02                             __gnu_cxx::new_allocator<Coordinate>::new_allocator(__gnu_cxx::new_allocator<Coordinate> const&)
  0.18     10.77     0.02                             int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
  0.18     10.79     0.02                             __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.14     10.80     0.02        2     7.50    37.50  void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&)
  0.09     10.81     0.01 39288272     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back()
  0.09     10.82     0.01 38686944     0.00     0.00  operator new(unsigned long, void*)
  0.09     10.83     0.01 19343468     0.00     0.00  void std::allocator_traits<std::allocator<Coordinate> >::destroy<Coordinate>(std::allocator<Coordinate>&, Coordinate*)
  0.09     10.84     0.01  9671736     0.00     0.00  void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&)
  0.09     10.85     0.01  9671734     0.00     0.00  void __gnu_cxx::new_allocator<int>::destroy<int>(int*)
  0.09     10.86     0.01  9671734     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::pop_back()
  0.09     10.87     0.01   543434     0.00     0.01  stable_eval(Board*, int, int, int)
  0.09     10.88     0.01   519497     0.00     0.00  bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int, int*>(int&, int*)
  0.09     10.89     0.01   375354     0.00     0.00  generate_king_moves(Board const*, MoveList*, Coordinate)
  0.09     10.90     0.01   166335     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#1}>&&)
  0.09     10.91     0.01     7076     0.00     0.00  void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.09     10.92     0.01     6526     0.00     0.00  void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.09     10.93     0.01        5     2.00     2.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long)
  0.09     10.94     0.01        5     2.00     2.00  std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
  0.09     10.95     0.01        1    10.00    10.00  _GLOBAL__sub_I__Z10copy_board5Board
  0.09     10.96     0.01                             DisaggregatedScore* std::__uninitialized_copy_a<std::move_iterator<DisaggregatedScore*>, DisaggregatedScore*, DisaggregatedScore>(std::move_iterator<DisaggregatedScore*>, std::move_iterator<DisaggregatedScore*>, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.09     10.97     0.01                             int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
  0.09     10.98     0.01                             __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > std::copy<__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > >(__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >)
  0.05     10.99     0.01  9671735     0.00     0.00  is_irreversible(Move, Piece)
  0.05     10.99     0.01                             __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > std::__miter_base<__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > >(__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >)
  0.05     11.00     0.01                             __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
  0.05     11.00     0.01                             DisaggregatedScore* std::__uninitialized_move_if_noexcept_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.00     11.00     0.00 19343474     0.00     0.00  DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&)
  0.00     11.00     0.00 11577774     0.00     0.00  std::remove_reference<int&>::type&& std::move<int&>(int&)
  0.00     11.00     0.00  9671735     0.00     0.00  void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&)
  0.00     11.00     0.00  9671735     0.00     0.00  void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&)
  0.00     11.00     0.00  9671734     0.00     0.00  void __gnu_cxx::new_allocator<DisaggregatedScore>::destroy<DisaggregatedScore>(DisaggregatedScore*)
  0.00     11.00     0.00  9671734     0.00     0.00  void std::allocator_traits<std::allocator<int> >::destroy<int>(std::allocator<int>&, int*)
  0.00     11.00     0.00  1030033     0.00     0.00  order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}::operator()(int, int) const
  0.00     11.00     0.00   949157     0.00     0.00  order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}::operator()(int, int) const
  0.00     11.00     0.00   725409     0.00     0.00  generate_bishop_moves(Board const*, MoveList*, Coordinate)
  0.00     11.00     0.00   674356     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::size() const
  0.00     11.00     0.00   674316     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::operator[](unsigned long)
  0.00     11.00     0.00   548700     0.00     0.00  bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int, int*>(int&, int*)
  0.00     11.00     0.00   481333     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator())
  0.00     11.00     0.00   429660     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator())
  0.00     11.00     0.00   189715     0.00     0.00  std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&)
  0.00     11.00     0.00   179387     0.00     0.00  std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&)
  0.00     11.00     0.00   175563     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#2}>&&)
  0.00     11.00     0.00   175563     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>)
  0.00     11.00     0.00   175563     0.00     0.00  void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.00     0.00   175563     0.00     0.00  std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>(std::remove_reference&&)
  0.00     11.00     0.00   166335     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>)
  0.00     11.00     0.00   166335     0.00     0.00  void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.00     0.00   166335     0.00     0.00  std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>(std::remove_reference&&)
  0.00     11.00     0.00   146741     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&)
  0.00     11.00     0.00   146741     0.00     0.00  void std::iter_swap<int*, int*>(int*, int*)
  0.00     11.00     0.00    83610     0.00     0.00  int* std::__niter_base<int*>(int*)
  0.00     11.00     0.00    55720     0.00     0.00  int* std::__miter_base<int*>(int*)
  0.00     11.00     0.00    27860     0.00     0.00  int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*)
  0.00     11.00     0.00    27860     0.00     0.00  int* std::__niter_wrap<int*>(int* const&, int*)
  0.00     11.00     0.00    27860     0.00     0.00  int* std::move_backward<int*, int*>(int*, int*, int*)
  0.00     11.00     0.00    27860     0.00     0.00  int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
  0.00     11.00     0.00    27860     0.00     0.00  int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*)
  0.00     11.00     0.00    13602     0.00     0.00  std::__lg(long)
  0.00     11.00     0.00    13540     0.00     0.00  int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.00     0.00    13540     0.00     0.00  void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.00     0.00    13540     0.00     0.00  int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.00     0.00    11717     0.00     0.00  int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.00     0.00    11717     0.00     0.00  void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.00     0.00    11717     0.00     0.00  int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.00     0.00     7076     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Iter_comp_iter({lambda(int, int)#2})
  0.00     11.00     0.00     7076     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter)
  0.00     11.00     0.00     7076     0.00     0.00  void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.00     0.00     7076     0.00     0.00  void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.00     0.00     7076     0.00     0.00  void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2})
  0.00     11.00     0.00     7076     0.00     0.00  void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.00     0.00     7071     0.00     0.00  void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00     11.00     0.00     6526     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Iter_comp_iter({lambda(int, int)#1})
  0.00     11.00     0.00     6526     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter)
  0.00     11.00     0.00     6526     0.00     0.00  void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.00     0.00     6526     0.00     0.00  void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.00     0.00     6526     0.00     0.00  void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.00     0.00     6526     0.00     0.00  void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1})
  0.00     11.00     0.00     6526     0.00     0.00  void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00     11.00     0.00     3435     0.00     0.00  std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  0.00     11.00     0.00     1734     0.00     0.00  std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
  0.00     11.00     0.00     1734     0.00     0.00  std::operator~(std::_Ios_Fmtflags)
  0.00     11.00     0.00     1707     0.00     0.00  std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
  0.00     11.00     0.00     1707     0.00     0.00  std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  0.00     11.00     0.00     1701     0.00     0.00  std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  0.00     11.00     0.00     1701     0.00     0.00  std::setw(int)
  0.00     11.00     0.00      866     0.00     0.00  print_move(Board const*, Move)
  0.00     11.00     0.00      256     0.00     0.00  print_board_fancy(Board const*)::{lambda(char const*, int)#1}::operator()(char const*, int) const
  0.00     11.00     0.00       60     0.00     0.00  Coordinate* std::__niter_base<Coordinate*>(Coordinate*)
  0.00     11.00     0.00       40     0.00     0.00  __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const
  0.00     11.00     0.00       40     0.00     0.00  unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
  0.00     11.00     0.00       33     0.00     0.00  std::ios_base::unsetf(std::_Ios_Fmtflags)
  0.00     11.00     0.00       30     0.00     0.00  __gnu_cxx::new_allocator<Coordinate>::max_size() const
  0.00     11.00     0.00       30     0.00     0.00  DisaggregatedScore* std::__niter_base<DisaggregatedScore*>(DisaggregatedScore*)
  0.00     11.00     0.00       22     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator()
  0.00     11.00     0.00       20     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const
  0.00     11.00     0.00       20     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
  0.00     11.00     0.00       20     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() const
  0.00     11.00     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const
  0.00     11.00     0.00       20     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::size() const
  0.00     11.00     0.00       20     0.00     0.00  std::vector<int, std::allocator<int> >::size() const
  0.00     11.00     0.00       20     0.00     0.00  std::allocator_traits<std::allocator<Coordinate> >::max_size(std::allocator<Coordinate> const&)
  0.00     11.00     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&)
  0.00     11.00     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  0.00     11.00     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_S_do_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&, std::integral_constant<bool, true>)
  0.00     11.00     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate()
  0.00     11.00     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_S_nothrow_relocate(std::integral_constant<bool, true>)
  0.00     11.00     0.00       20     0.00     0.00  Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  0.00     11.00     0.00       20     0.00     0.00  std::enable_if<std::__is_bitwise_relocatable<Coordinate, void>::value, Coordinate*>::type std::__relocate_a_1<Coordinate, Coordinate>(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  0.00     11.00     0.00       20     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00     11.00     0.00       16     0.00     0.00  print_board_fancy(Board const*)::{lambda(int const (*) [8][8], int)#3}::operator()(int const (*) [8][8], int) const
  0.00     11.00     0.00       15     0.00     0.00  __gnu_cxx::new_allocator<DisaggregatedScore>::max_size() const
  0.00     11.00     0.00       15     0.00     0.00  __gnu_cxx::new_allocator<int>::max_size() const
  0.00     11.00     0.00       14     0.00     0.00  print_board(Board const*)::{lambda()#1}::operator()() const
  0.00     11.00     0.00       12     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long)
  0.00     11.00     0.00       11     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator()
  0.00     11.00     0.00       11     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00     11.00     0.00       10     0.00     0.00  __gnu_cxx::new_allocator<Coordinate>::deallocate(Coordinate*, unsigned long)
  0.00     11.00     0.00       10     0.00     0.00  __gnu_cxx::new_allocator<Coordinate>::allocate(unsigned long, void const*)
  0.00     11.00     0.00       10     0.00     0.00  __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&)
  0.00     11.00     0.00       10     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() const
  0.00     11.00     0.00       10     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.00     11.00     0.00       10     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const
  0.00     11.00     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const
  0.00     11.00     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::max_size() const
  0.00     11.00     0.00       10     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long)
  0.00     11.00     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<Coordinate> >::deallocate(std::allocator<Coordinate>&, Coordinate*, unsigned long)
  0.00     11.00     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<Coordinate> >::allocate(std::allocator<Coordinate>&, unsigned long)
  0.00     11.00     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<DisaggregatedScore> >::max_size(std::allocator<DisaggregatedScore> const&)
  0.00     11.00     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
  0.00     11.00     0.00       10     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::begin()
  0.00     11.00     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&)
  0.00     11.00     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.00     11.00     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_do_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&, std::integral_constant<bool, true>)
  0.00     11.00     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate()
  0.00     11.00     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_nothrow_relocate(std::integral_constant<bool, true>)
  0.00     11.00     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)
  0.00     11.00     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&)
  0.00     11.00     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>)
  0.00     11.00     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::_S_use_relocate()
  0.00     11.00     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::_S_nothrow_relocate(std::integral_constant<bool, true>)
  0.00     11.00     0.00       10     0.00     0.00  DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.00     11.00     0.00       10     0.00     0.00  int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
  0.00     11.00     0.00       10     0.00     0.00  std::enable_if<std::__is_bitwise_relocatable<DisaggregatedScore, void>::value, DisaggregatedScore*>::type std::__relocate_a_1<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.00     11.00     0.00       10     0.00     0.00  std::enable_if<std::__is_bitwise_relocatable<int, void>::value, int*>::type std::__relocate_a_1<int, int>(int*, int*, int*, std::allocator<int>&)
  0.00     11.00     0.00        8     0.00     0.00  void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&)
  0.00     11.00     0.00        8     0.00     0.00  Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&)
  0.00     11.00     0.00        6     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long)
  0.00     11.00     0.00        6     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00     11.00     0.00        6     0.00     0.00  std::ios_base::setf(std::_Ios_Fmtflags)
  0.00     11.00     0.00        5     0.00     0.00  apply_null(Board*)
  0.00     11.00     0.00        5     0.00     0.00  undo_null(Board*)
  0.00     11.00     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<DisaggregatedScore>::deallocate(DisaggregatedScore*, unsigned long)
  0.00     11.00     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<DisaggregatedScore>::allocate(unsigned long, void const*)
  0.00     11.00     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
  0.00     11.00     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
  0.00     11.00     0.00        5     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&)
  0.00     11.00     0.00        5     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00     11.00     0.00        5     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const
  0.00     11.00     0.00        5     0.00     0.00  std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
  0.00     11.00     0.00        5     0.00     0.00  std::allocator_traits<std::allocator<DisaggregatedScore> >::deallocate(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, unsigned long)
  0.00     11.00     0.00        5     0.00     0.00  std::allocator_traits<std::allocator<DisaggregatedScore> >::allocate(std::allocator<DisaggregatedScore>&, unsigned long)
  0.00     11.00     0.00        5     0.00     0.00  std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)
  0.00     11.00     0.00        5     0.00     0.00  std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)
  0.00     11.00     0.00        5     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin()
  0.00     11.00     0.00        5     0.00     2.00  void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)
  0.00     11.00     0.00        5     0.00     0.00  std::vector<int, std::allocator<int> >::begin()
  0.00     11.00     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore const* const&)
  0.00     11.00     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
  0.00     11.00     0.00        4     0.00     0.00  DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&)
  0.00     11.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Coordinate>::new_allocator()
  0.00     11.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Coordinate>::~new_allocator()
  0.00     11.00     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const
  0.00     11.00     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const
  0.00     11.00     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator*() const
  0.00     11.00     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator-(long) const
  0.00     11.00     0.00        2     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() const
  0.00     11.00     0.00        2     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const
  0.00     11.00     0.00        2     0.00     0.00  std::vector<int, std::allocator<int> >::end() const
  0.00     11.00     0.00        2     0.00     0.00  std::vector<int, std::allocator<int> >::back() const
  0.00     11.00     0.00        2     0.00     0.00  std::allocator<Coordinate>::allocator()
  0.00     11.00     0.00        2     0.00     0.00  std::allocator<Coordinate>::~allocator()
  0.00     11.00     0.00        2     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Coordinate*>(Coordinate*, Coordinate*)
  0.00     11.00     0.00        2     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl()
  0.00     11.00     0.00        2     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::~_Vector_impl()
  0.00     11.00     0.00        2     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl_data::_Vector_impl_data()
  0.00     11.00     0.00        2     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_base()
  0.00     11.00     0.00        2     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base()
  0.00     11.00     0.00        2     0.00    37.50  void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&)
  0.00     11.00     0.00        2     0.00    37.50  void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&)
  0.00     11.00     0.00        2     0.00    37.50  std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&)
  0.00     11.00     0.00        2     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::vector()
  0.00     11.00     0.00        2     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::~vector()
  0.00     11.00     0.00        2     0.00     0.00  std::remove_reference<Coordinate&>::type&& std::move<Coordinate&>(Coordinate&)
  0.00     11.00     0.00        2     0.00     0.00  void std::_Destroy<Coordinate*>(Coordinate*, Coordinate*)
  0.00     11.00     0.00        2     0.00     0.00  void std::_Destroy<Coordinate*, Coordinate>(Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  0.00     11.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z11score_total18DisaggregatedScore
  0.00     11.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z13get_best_moveP5BoardiiibbiPA10000_8PVRecord
  0.00     11.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_pv_table
  0.00     11.00     0.00        1     0.00    77.01  init_board(Board*)
  0.00     11.00     0.00        1     0.00     0.00  zero_table(PVRecord (*) [10000])
  0.00     11.00     0.00        1     0.00     0.00  print_board(Board const*)
  0.00     11.00     0.00        1     0.00     0.00  print_board_fancy(Board const*)
  0.00     11.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     11.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     11.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     11.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     11.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     11.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     11.00     0.00        1     0.00     0.00  print_pv(Board*, int, int, PVRecord (*) [10000])
  0.00     11.00     0.00        1     0.00     0.00  Board::Board()
  0.00     11.00     0.00        1     0.00     0.00  Board::~Board()
  0.00     11.00     0.00        1     0.00     0.00  void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&)
  0.00     11.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<DisaggregatedScore>::new_allocator()
  0.00     11.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<DisaggregatedScore>::~new_allocator()
  0.00     11.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00     11.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00     11.00     0.00        1     0.00     0.00  std::allocator<DisaggregatedScore>::allocator()
  0.00     11.00     0.00        1     0.00     0.00  std::allocator<DisaggregatedScore>::~allocator()
  0.00     11.00     0.00        1     0.00     0.00  std::allocator<int>::allocator()
  0.00     11.00     0.00        1     0.00     0.00  std::allocator<int>::~allocator()
  0.00     11.00     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*)
  0.00     11.00     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00     11.00     0.00        1     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl()
  0.00     11.00     0.00        1     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::~_Vector_impl()
  0.00     11.00     0.00        1     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl_data::_Vector_impl_data()
  0.00     11.00     0.00        1     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_base()
  0.00     11.00     0.00        1     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base()
  0.00     11.00     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00     11.00     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00     11.00     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data()
  0.00     11.00     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00     11.00     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00     11.00     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&)
  0.00     11.00     0.00        1     0.00     2.00  void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&)
  0.00     11.00     0.00        1     0.00     2.00  void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&)
  0.00     11.00     0.00        1     0.00     2.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&)
  0.00     11.00     0.00        1     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::vector()
  0.00     11.00     0.00        1     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector()
  0.00     11.00     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00     11.00     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00     11.00     0.00        1     0.00     0.00  std::remove_reference<DisaggregatedScore&>::type&& std::move<DisaggregatedScore&>(DisaggregatedScore&)
  0.00     11.00     0.00        1     0.00     0.00  void std::_Destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*)
  0.00     11.00     0.00        1     0.00     0.00  void std::_Destroy<DisaggregatedScore*, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.00     11.00     0.00        1     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00     11.00     0.00        1     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.09% of 11.00 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     98.4    0.00   10.83                 main [1]
                0.09   10.66       2/2           get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.00    0.08       1/1           init_board(Board*) [41]
                0.00    0.00       1/1           print_pv(Board*, int, int, PVRecord (*) [10000]) [115]
                0.00    0.00       1/9671735     apply_move(Board*, Move) [7]
                0.00    0.00       2/1701        std::setw(int) [177]
                0.00    0.00       1/1           Board::Board() [289]
                0.00    0.00       1/1           zero_table(PVRecord (*) [10000]) [280]
                0.00    0.00       1/1           print_board_fancy(Board const*) [282]
                0.00    0.00       1/1           print_board(Board const*) [281]
                0.00    0.00       1/1           Board::~Board() [290]
-----------------------------------------------
[2]     97.7    0.09   10.66       2+396962  <cycle 1 as a whole> [2]
                0.07   10.23  383362+2322602     get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.02    0.43   13602             order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
-----------------------------------------------
                             2322602             get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                              383360             order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
                0.09   10.66       2/2           main [1]
[3]     93.6    0.07   10.23  383362+2322602 get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.01    7.64  543434/543434      stable_eval(Board*, int, int, int) [5]
                0.04    1.29 2322597/9671735     apply_move(Board*, Move) [7]
                0.02    1.00 2322597/9671734     undo_move(Board*, Move) [8]
                0.01    0.18  135065/378171      generate_moves(Board const*, MoveList*) [14]
                0.01    0.03 2006001/9594601     evaluate(Board*) [23]
                0.00    0.00     862/866         print_move(Board const*, Move) [116]
                0.00    0.00      38/29258348     is_capture(Move) [79]
                0.00    0.00       5/5           apply_null(Board*) [121]
                0.00    0.00       5/5           undo_null(Board*) [122]
                0.00    0.00    1694/1701        std::setw(int) [177]
                               13602             order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
                             2322602             get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
-----------------------------------------------
                0.30    3.62 20021934/40043870     undo_move(Board*, Move) [8]
                0.30    3.62 20021936/40043870     apply_move(Board*, Move) [7]
[4]     71.3    0.60    7.25 40043870         change_piece(Board*, Coordinate, Piece, bool) [4]
                2.12    0.27 17981946/17981946     update_xrays_by_pawn(Board*, Coordinate, Piece, bool) [9]
                1.91    0.00 48874160/48874160     update_weak_squares(Board*, Color, int) [10]
                1.63    0.21 20713292/20713292     update_xrays_by_piece(Board*, Coordinate, Piece, bool) [11]
                0.06    0.26 41426584/80451581     std::vector<Coordinate, std::allocator<Coordinate> >::back() [13]
                0.16    0.15 17981946/17981946     update_least_advanced(Board*, Color, int) [19]
                0.30    0.01 22061924/22061924     update_king_attacks(Board*, Coordinate, Color, bool) [20]
                0.11    0.00 41426584/63488510     quintant_from(Coordinate) [28]
                0.03    0.00 23432712/37874451     parity(Coordinate) [56]
                0.02    0.00 40043870/145328224     flip_color(Color) [50]
-----------------------------------------------
                              163713             stable_eval(Board*, int, int, int) [5]
                0.01    7.64  543434/543434      get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[5]     69.6    0.01    7.64  543434+163713  stable_eval(Board*, int, int, int) [5]
                0.10    7.36  243106/243106      shallow_greedy_move(Board*) [6]
                0.00    0.09  163713/9671735     apply_move(Board*, Move) [7]
                0.00    0.07  163713/9671734     undo_move(Board*, Move) [8]
                0.00    0.01  786540/9594601     evaluate(Board*) [23]
                0.00    0.00  243106/29258348     is_capture(Move) [79]
                              163713             stable_eval(Board*, int, int, int) [5]
-----------------------------------------------
                0.10    7.36  243106/243106      stable_eval(Board*, int, int, int) [5]
[6]     67.8    0.10    7.36  243106         shallow_greedy_move(Board*) [6]
                0.11    3.78 6802060/9671735     apply_move(Board*, Move) [7]
                0.05    2.93 6802060/9671734     undo_move(Board*, Move) [8]
                0.02    0.32  243106/378171      generate_moves(Board const*, MoveList*) [14]
                0.04    0.11 6802060/9594601     evaluate(Board*) [23]
-----------------------------------------------
                0.00    0.00       1/9671735     main [1]
                0.00    0.00       4/9671735     print_pv(Board*, int, int, PVRecord (*) [10000]) [115]
                0.00    0.09  163713/9671735     stable_eval(Board*, int, int, int) [5]
                0.01    0.21  383360/9671735     order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
                0.04    1.29 2322597/9671735     get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.11    3.78 6802060/9671735     shallow_greedy_move(Board*) [6]
[7]     50.4    0.16    5.38 9671735         apply_move(Board*, Move) [7]
                0.30    3.62 20021936/40043870     change_piece(Board*, Coordinate, Piece, bool) [4]
                0.35    0.39 20021936/20021936     add_eval_diff(Board*, Coordinate, Piece, bool) [12]
                0.10    0.13 19343470/19343470     std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [22]
                0.03    0.12 19677377/80451581     std::vector<Coordinate, std::allocator<Coordinate> >::back() [13]
                0.03    0.08 9671735/9671736     std::vector<int, std::allocator<int> >::push_back(int&&) [35]
                0.02    0.07 9671735/19266336     std::vector<int, std::allocator<int> >::back() [29]
                0.04    0.03 9671735/9671735     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&) [47]
                0.00    0.05 9671735/39288272     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [24]
                0.01    0.01 9671735/9671735     is_irreversible(Move, Piece) [87]
                0.01    0.00 9671735/115283766     get_piece(Board const*, Coordinate) [32]
                0.01    0.00 9671735/29258348     is_capture(Move) [79]
                0.00    0.00 9671735/145328224     flip_color(Color) [50]
-----------------------------------------------
                0.00    0.00       4/9671734     print_pv(Board*, int, int, PVRecord (*) [10000]) [115]
                0.00    0.07  163713/9671734     stable_eval(Board*, int, int, int) [5]
                0.00    0.16  383360/9671734     order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
                0.02    1.00 2322597/9671734     get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.05    2.93 6802060/9671734     shallow_greedy_move(Board*) [6]
[8]     38.5    0.07    4.16 9671734         undo_move(Board*, Move) [8]
                0.30    3.62 20021934/40043870     change_piece(Board*, Coordinate, Piece, bool) [4]
                0.11    0.03 19343468/19343468     std::vector<Coordinate, std::allocator<Coordinate> >::pop_back() [31]
                0.01    0.04 9671734/9671734     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::pop_back() [59]
                0.02    0.01 9671734/9671734     std::vector<int, std::allocator<int> >::pop_back() [75]
                0.01    0.00 9671734/115283766     get_piece(Board const*, Coordinate) [32]
                0.01    0.00 9671734/29258348     is_capture(Move) [79]
                0.00    0.00 9671734/145328224     flip_color(Color) [50]
-----------------------------------------------
                2.12    0.27 17981946/17981946     change_piece(Board*, Coordinate, Piece, bool) [4]
[9]     21.7    2.12    0.27 17981946         update_xrays_by_pawn(Board*, Coordinate, Piece, bool) [9]
                0.27    0.00 126084520/186455824     max_ray_len(int, int, int, int) [18]
-----------------------------------------------
                1.91    0.00 48874160/48874160     change_piece(Board*, Coordinate, Piece, bool) [4]
[10]    17.4    1.91    0.00 48874160         update_weak_squares(Board*, Color, int) [10]
-----------------------------------------------
                1.63    0.21 20713292/20713292     change_piece(Board*, Coordinate, Piece, bool) [4]
[11]    16.8    1.63    0.21 20713292         update_xrays_by_piece(Board*, Coordinate, Piece, bool) [11]
                0.13    0.00 60371304/186455824     max_ray_len(int, int, int, int) [18]
                0.08    0.00 74886208/123234611     is_valid(Coordinate) [33]
                0.01    0.00 20713292/145328224     flip_color(Color) [50]
-----------------------------------------------
                0.35    0.39 20021936/20021936     apply_move(Board*, Move) [7]
[12]     6.7    0.35    0.39 20021936         add_eval_diff(Board*, Coordinate, Piece, bool) [12]
                0.03    0.12 19347620/80451581     std::vector<Coordinate, std::allocator<Coordinate> >::back() [13]
                0.01    0.10 20021936/39288272     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [24]
                0.06    0.00 22061926/63488510     quintant_from(Coordinate) [28]
                0.02    0.03 4045896/4045896     add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const [58]
                0.02    0.00 14441739/37874451     parity(Coordinate) [56]
                0.01    0.00 20021936/145328224     flip_color(Color) [50]
                0.00    0.00  674316/674356      std::vector<Coordinate, std::allocator<Coordinate> >::size() const [136]
                0.00    0.00  674316/674316      std::vector<Coordinate, std::allocator<Coordinate> >::operator[](unsigned long) [137]
-----------------------------------------------
                0.03    0.12 19347620/80451581     add_eval_diff(Board*, Coordinate, Piece, bool) [12]
                0.03    0.12 19677377/80451581     apply_move(Board*, Move) [7]
                0.06    0.26 41426584/80451581     change_piece(Board*, Coordinate, Piece, bool) [4]
[13]     5.6    0.12    0.51 80451581         std::vector<Coordinate, std::allocator<Coordinate> >::back() [13]
                0.18    0.09 80451581/80451581     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator-(long) const [21]
                0.11    0.09 80451581/80451591     std::vector<Coordinate, std::allocator<Coordinate> >::end() [26]
                0.06    0.00 80451581/80451581     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator*() const [53]
-----------------------------------------------
                0.01    0.18  135065/378171      get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.02    0.32  243106/378171      shallow_greedy_move(Board*) [6]
[14]     4.8    0.03    0.50  378171         generate_moves(Board const*, MoveList*) [14]
                0.06    0.44  378171/378171      generate_moves(Board const*, MoveList*, Color) [15]
-----------------------------------------------
                0.06    0.44  378171/378171      generate_moves(Board const*, MoveList*) [14]
[15]     4.5    0.06    0.44  378171         generate_moves(Board const*, MoveList*, Color) [15]
                0.02    0.39 5846578/5846578     generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [17]
                0.03    0.00 24202944/115283766     get_piece(Board const*, Coordinate) [32]
-----------------------------------------------
                               13602             get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[16]     4.1    0.02    0.43   13602         order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
                0.01    0.21  383360/9671735     apply_move(Board*, Move) [7]
                0.00    0.16  383360/9671734     undo_move(Board*, Move) [8]
                0.00    0.03    6526/6526        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}) [70]
                0.00    0.01    7076/7076        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}) [96]
                              383360             get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
-----------------------------------------------
                0.02    0.39 5846578/5846578     generate_moves(Board const*, MoveList*, Color) [15]
[17]     3.7    0.02    0.39 5846578         generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [17]
                0.03    0.08 2950584/2950584     generate_pawn_moves(Board const*, MoveList*, Coordinate) [36]
                0.02    0.06  673459/673459      generate_knight_moves(Board const*, MoveList*, Coordinate) [40]
                0.03    0.04  366146/366146      generate_queen_moves(Board const*, MoveList*, Coordinate) [48]
                0.03    0.03  755626/755626      generate_rook_moves(Board const*, MoveList*, Coordinate) [51]
                0.01    0.03  375354/375354      generate_king_moves(Board const*, MoveList*, Coordinate) [61]
                0.00    0.04  725409/725409      generate_bishop_moves(Board const*, MoveList*, Coordinate) [66]
-----------------------------------------------
                0.13    0.00 60371304/186455824     update_xrays_by_piece(Board*, Coordinate, Piece, bool) [11]
                0.27    0.00 126084520/186455824     update_xrays_by_pawn(Board*, Coordinate, Piece, bool) [9]
[18]     3.6    0.40    0.00 186455824         max_ray_len(int, int, int, int) [18]
-----------------------------------------------
                0.16    0.15 17981946/17981946     change_piece(Board*, Coordinate, Piece, bool) [4]
[19]     2.9    0.16    0.15 17981946         update_least_advanced(Board*, Color, int) [19]
                0.05    0.10 16690725/16690725     kronecker_piece(Board const*, Coordinate, Piece) [30]
-----------------------------------------------
                0.30    0.01 22061924/22061924     change_piece(Board*, Coordinate, Piece, bool) [4]
[20]     2.8    0.30    0.01 22061924         update_king_attacks(Board*, Coordinate, Color, bool) [20]
                0.01    0.00 22061924/145328224     flip_color(Color) [50]
-----------------------------------------------
                0.18    0.09 80451581/80451581     std::vector<Coordinate, std::allocator<Coordinate> >::back() [13]
[21]     2.4    0.18    0.09 80451581         __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator-(long) const [21]
                0.09    0.00 80451581/160903182     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&) [27]
-----------------------------------------------
                0.10    0.13 19343470/19343470     apply_move(Board*, Move) [7]
[22]     2.0    0.10    0.13 19343470         std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [22]
                0.05    0.08 19343462/19343470     void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [34]
                0.00    0.00       8/8           void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [117]
                0.00    0.00       8/80451591     std::vector<Coordinate, std::allocator<Coordinate> >::end() [26]
-----------------------------------------------
                0.00    0.01  786540/9594601     stable_eval(Board*, int, int, int) [5]
                0.01    0.03 2006001/9594601     get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.04    0.11 6802060/9594601     shallow_greedy_move(Board*) [6]
[23]     1.9    0.06    0.15 9594601         evaluate(Board*) [23]
                0.01    0.07 9594601/19266336     std::vector<int, std::allocator<int> >::back() [29]
                0.00    0.05 9594601/39288272     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [24]
                0.02    0.00 9594601/9594601     score_total(DisaggregatedScore) [81]
-----------------------------------------------
                0.00    0.05 9594601/39288272     evaluate(Board*) [23]
                0.00    0.05 9671735/39288272     apply_move(Board*, Move) [7]
                0.01    0.10 20021936/39288272     add_eval_diff(Board*, Coordinate, Piece, bool) [12]
[24]     1.9    0.01    0.20 39288272         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [24]
                0.08    0.02 39288272/39288277     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() [38]
                0.04    0.02 39288272/39288272     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [52]
                0.04    0.00 39288272/39288272     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [62]
-----------------------------------------------
                0.01    0.00 2234911/39496651     generate_pawn_moves(Board const*, MoveList*, Coordinate) [36]
                0.02    0.01 6005664/39496651     generate_king_moves(Board const*, MoveList*, Coordinate) [61]
                0.02    0.01 6614823/39496651     generate_rook_moves(Board const*, MoveList*, Coordinate) [51]
                0.02    0.01 6769440/39496651     generate_queen_moves(Board const*, MoveList*, Coordinate) [48]
                0.02    0.02 7096469/39496651     generate_bishop_moves(Board const*, MoveList*, Coordinate) [66]
                0.03    0.02 10775344/39496651     generate_knight_moves(Board const*, MoveList*, Coordinate) [40]
[25]     1.8    0.12    0.09 39496651         add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [25]
                0.05    0.00 39496651/115283766     get_piece(Board const*, Coordinate) [32]
                0.04    0.00 39496651/123234611     is_valid(Coordinate) [33]
-----------------------------------------------
                0.00    0.00       2/80451591     void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [42]
                0.00    0.00       8/80451591     std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [22]
                0.11    0.09 80451581/80451591     std::vector<Coordinate, std::allocator<Coordinate> >::back() [13]
[26]     1.7    0.11    0.09 80451591         std::vector<Coordinate, std::allocator<Coordinate> >::end() [26]
                0.09    0.00 80451591/160903182     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&) [27]
-----------------------------------------------
                0.00    0.00      10/160903182     std::vector<Coordinate, std::allocator<Coordinate> >::begin() [118]
                0.09    0.00 80451581/160903182     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator-(long) const [21]
                0.09    0.00 80451591/160903182     std::vector<Coordinate, std::allocator<Coordinate> >::end() [26]
[27]     1.5    0.17    0.00 160903182         __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&) [27]
-----------------------------------------------
                0.06    0.00 22061926/63488510     add_eval_diff(Board*, Coordinate, Piece, bool) [12]
                0.11    0.00 41426584/63488510     change_piece(Board*, Coordinate, Piece, bool) [4]
[28]     1.5    0.17    0.00 63488510         quintant_from(Coordinate) [28]
-----------------------------------------------
                0.01    0.07 9594601/19266336     evaluate(Board*) [23]
                0.02    0.07 9671735/19266336     apply_move(Board*, Move) [7]
[29]     1.5    0.03    0.14 19266336         std::vector<int, std::allocator<int> >::back() [29]
                0.04    0.01 19266336/19266336     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const [55]
                0.03    0.01 19266336/19266341     std::vector<int, std::allocator<int> >::end() [60]
                0.04    0.00 19266336/19266336     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [64]
-----------------------------------------------
                0.05    0.10 16690725/16690725     update_least_advanced(Board*, Color, int) [19]
[30]     1.4    0.05    0.10 16690725         kronecker_piece(Board const*, Coordinate, Piece) [30]
                0.08    0.00 16690725/20736619     piece_equals(Piece, Piece) [37]
                0.02    0.00 16690725/115283766     get_piece(Board const*, Coordinate) [32]
-----------------------------------------------
                0.11    0.03 19343468/19343468     undo_move(Board*, Move) [8]
[31]     1.3    0.11    0.03 19343468         std::vector<Coordinate, std::allocator<Coordinate> >::pop_back() [31]
                0.01    0.02 19343468/19343468     void std::allocator_traits<std::allocator<Coordinate> >::destroy<Coordinate>(std::allocator<Coordinate>&, Coordinate*) [74]
-----------------------------------------------
                0.00    0.00     866/115283766     print_move(Board const*, Move) [116]
                0.00    0.00 4045894/115283766     add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const [58]
                0.01    0.00 9671734/115283766     undo_move(Board*, Move) [8]
                0.01    0.00 9671735/115283766     apply_move(Board*, Move) [7]
                0.01    0.00 11503217/115283766     add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [46]
                0.02    0.00 16690725/115283766     kronecker_piece(Board const*, Coordinate, Piece) [30]
                0.03    0.00 24202944/115283766     generate_moves(Board const*, MoveList*, Color) [15]
                0.05    0.00 39496651/115283766     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [25]
[32]     1.2    0.14    0.00 115283766         get_piece(Board const*, Coordinate) [32]
-----------------------------------------------
                0.01    0.00 8851752/123234611     add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [46]
                0.04    0.00 39496651/123234611     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [25]
                0.08    0.00 74886208/123234611     update_xrays_by_piece(Board*, Coordinate, Piece, bool) [11]
[33]     1.1    0.13    0.00 123234611         is_valid(Coordinate) [33]
-----------------------------------------------
                0.00    0.00       8/19343470     void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [117]
                0.05    0.08 19343462/19343470     std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [22]
[34]     1.1    0.05    0.08 19343470         void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [34]
                0.03    0.03 19343470/19343470     void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&) [54]
                0.02    0.00 19343470/38686948     Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&) [63]
-----------------------------------------------
                0.00    0.00       1/9671736     init_board(Board*) [41]
                0.03    0.08 9671735/9671736     apply_move(Board*, Move) [7]
[35]     1.0    0.03    0.08 9671736         std::vector<int, std::allocator<int> >::push_back(int&&) [35]
                0.02    0.06 9671736/9671736     void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [39]
                0.00    0.00 9671736/11577774     std::remove_reference<int&>::type&& std::move<int&>(int&) [132]
-----------------------------------------------
                0.03    0.08 2950584/2950584     generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [17]
[36]     1.0    0.03    0.08 2950584         generate_pawn_moves(Board const*, MoveList*, Coordinate) [36]
                0.05    0.02 8851752/8851752     add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [46]
                0.01    0.00 2234911/39496651     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [25]
                0.00    0.00 5901168/145328224     flip_color(Color) [50]
-----------------------------------------------
                0.02    0.00 4045894/20736619     add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const [58]
                0.08    0.00 16690725/20736619     kronecker_piece(Board const*, Coordinate, Piece) [30]
[37]     1.0    0.11    0.00 20736619         piece_equals(Piece, Piece) [37]
-----------------------------------------------
                0.00    0.00       1/39288277     void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [112]
                0.00    0.00       4/39288277     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&) [47]
                0.08    0.02 39288272/39288277     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [24]
[38]     0.9    0.08    0.02 39288277         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() [38]
                0.02    0.00 39288277/78576554     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&) [67]
-----------------------------------------------
                0.02    0.06 9671736/9671736     std::vector<int, std::allocator<int> >::push_back(int&&) [35]
[39]     0.8    0.02    0.06 9671736         void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [39]
                0.02    0.03 9671731/9671736     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [57]
                0.00    0.01       5/5           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [88]
                0.01    0.00 9671736/29015213     int&& std::forward<int>(std::remove_reference<int>::type&) [80]
                0.00    0.00       5/19266341     std::vector<int, std::allocator<int> >::end() [60]
-----------------------------------------------
                0.02    0.06  673459/673459      generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [17]
[40]     0.7    0.02    0.06  673459         generate_knight_moves(Board const*, MoveList*, Coordinate) [40]
                0.03    0.02 10775344/39496651     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [25]
                0.00    0.00 5387672/145328224     flip_color(Color) [50]
-----------------------------------------------
                0.00    0.08       1/1           main [1]
[41]     0.7    0.00    0.08       1         init_board(Board*) [41]
                0.00    0.08       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&) [43]
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&) [113]
                0.00    0.00       1/9671736     std::vector<int, std::allocator<int> >::push_back(int&&) [35]
-----------------------------------------------
                0.00    0.08       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&) [43]
[42]     0.7    0.00    0.08       2         void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [42]
                0.00    0.08       2/2           void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [44]
                0.00    0.00       2/80451591     std::vector<Coordinate, std::allocator<Coordinate> >::end() [26]
                0.00    0.00       2/8           Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&) [235]
-----------------------------------------------
                0.00    0.08       2/2           init_board(Board*) [41]
[43]     0.7    0.00    0.08       2         std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&) [43]
                0.00    0.08       2/2           void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [42]
                0.00    0.00       2/2           std::remove_reference<Coordinate&>::type&& std::move<Coordinate&>(Coordinate&) [274]
-----------------------------------------------
                0.00    0.08       2/2           void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [42]
[44]     0.7    0.00    0.08       2         void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [44]
                0.02    0.06       2/2           void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&) [45]
                0.00    0.00       2/10          std::vector<Coordinate, std::allocator<Coordinate> >::begin() [118]
                0.00    0.00       4/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate() [196]
                0.00    0.00       4/22          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() [185]
                0.00    0.00       4/40          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const [180]
                0.00    0.00       4/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [194]
                0.00    0.00       2/10          std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [213]
                0.00    0.00       2/10          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&) [210]
                0.00    0.00       2/10          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long) [216]
                0.00    0.00       2/8           Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&) [235]
                0.00    0.00       2/12          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [205]
-----------------------------------------------
                0.02    0.06       2/2           void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [44]
[45]     0.7    0.02    0.06       2         void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&) [45]
                0.06    0.00       2/2           void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&) [49]
                0.00    0.00       2/8           Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&) [235]
-----------------------------------------------
                0.05    0.02 8851752/8851752     generate_pawn_moves(Board const*, MoveList*, Coordinate) [36]
[46]     0.6    0.05    0.02 8851752         add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [46]
                0.01    0.00 11503217/115283766     get_piece(Board const*, Coordinate) [32]
                0.01    0.00 8851752/123234611     is_valid(Coordinate) [33]
-----------------------------------------------
                0.04    0.03 9671735/9671735     apply_move(Board*, Move) [7]
[47]     0.6    0.04    0.03 9671735         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&) [47]
                0.02    0.01       4/4           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [76]
                0.00    0.00 9671731/9671735     void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [111]
                0.00    0.00       4/39288277     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() [38]
-----------------------------------------------
                0.03    0.04  366146/366146      generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [17]
[48]     0.6    0.03    0.04  366146         generate_queen_moves(Board const*, MoveList*, Coordinate) [48]
                0.02    0.01 6769440/39496651     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [25]
                0.00    0.00 2927955/145328224     flip_color(Color) [50]
-----------------------------------------------
                0.06    0.00       2/2           void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&) [45]
[49]     0.5    0.06    0.00       2         void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&) [49]
                0.00    0.00       2/38686944     operator new(unsigned long, void*) [89]
                0.00    0.00       2/8           Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&) [235]
-----------------------------------------------
                0.00    0.00       5/145328224     apply_null(Board*) [121]
                0.00    0.00       5/145328224     undo_null(Board*) [122]
                0.00    0.00 2901636/145328224     generate_bishop_moves(Board const*, MoveList*, Coordinate) [66]
                0.00    0.00 2927955/145328224     generate_queen_moves(Board const*, MoveList*, Coordinate) [48]
                0.00    0.00 3002832/145328224     generate_king_moves(Board const*, MoveList*, Coordinate) [61]
                0.00    0.00 3022460/145328224     generate_rook_moves(Board const*, MoveList*, Coordinate) [51]
                0.00    0.00 5387672/145328224     generate_knight_moves(Board const*, MoveList*, Coordinate) [40]
                0.00    0.00 5901168/145328224     generate_pawn_moves(Board const*, MoveList*, Coordinate) [36]
                0.00    0.00 9671734/145328224     undo_move(Board*, Move) [8]
                0.00    0.00 9671735/145328224     apply_move(Board*, Move) [7]
                0.01    0.00 20021936/145328224     add_eval_diff(Board*, Coordinate, Piece, bool) [12]
                0.01    0.00 20713292/145328224     update_xrays_by_piece(Board*, Coordinate, Piece, bool) [11]
                0.01    0.00 22061924/145328224     update_king_attacks(Board*, Coordinate, Color, bool) [20]
                0.02    0.00 40043870/145328224     change_piece(Board*, Coordinate, Piece, bool) [4]
[50]     0.5    0.06    0.00 145328224         flip_color(Color) [50]
-----------------------------------------------
                0.03    0.03  755626/755626      generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [17]
[51]     0.5    0.03    0.03  755626         generate_rook_moves(Board const*, MoveList*, Coordinate) [51]
                0.02    0.01 6614823/39496651     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [25]
                0.00    0.00 3022460/145328224     flip_color(Color) [50]
-----------------------------------------------
                0.04    0.02 39288272/39288272     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [24]
[52]     0.5    0.04    0.02 39288272         __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [52]
                0.02    0.00 39288272/78576554     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&) [67]
-----------------------------------------------
                0.06    0.00 80451581/80451581     std::vector<Coordinate, std::allocator<Coordinate> >::back() [13]
[53]     0.5    0.06    0.00 80451581         __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator*() const [53]
-----------------------------------------------
                0.03    0.03 19343470/19343470     void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [34]
[54]     0.5    0.03    0.03 19343470         void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&) [54]
                0.02    0.00 19343470/38686948     Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&) [63]
                0.01    0.00 19343470/38686944     operator new(unsigned long, void*) [89]
-----------------------------------------------
                0.04    0.01 19266336/19266336     std::vector<int, std::allocator<int> >::back() [29]
[55]     0.5    0.04    0.01 19266336         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const [55]
                0.01    0.00 19266336/38532682     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [77]
-----------------------------------------------
                0.02    0.00 14441739/37874451     add_eval_diff(Board*, Coordinate, Piece, bool) [12]
                0.03    0.00 23432712/37874451     change_piece(Board*, Coordinate, Piece, bool) [4]
[56]     0.5    0.05    0.00 37874451         parity(Coordinate) [56]
-----------------------------------------------
                0.00    0.00       5/9671736     void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [88]
                0.02    0.03 9671731/9671736     void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [39]
[57]     0.4    0.02    0.03 9671736         void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [57]
                0.01    0.01 9671736/9671736     void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [86]
                0.01    0.00 9671736/29015213     int&& std::forward<int>(std::remove_reference<int>::type&) [80]
-----------------------------------------------
                0.02    0.03 4045896/4045896     add_eval_diff(Board*, Coordinate, Piece, bool) [12]
[58]     0.4    0.02    0.03 4045896         add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const [58]
                0.02    0.00 4045894/20736619     piece_equals(Piece, Piece) [37]
                0.00    0.00 4045894/115283766     get_piece(Board const*, Coordinate) [32]
-----------------------------------------------
                0.01    0.04 9671734/9671734     undo_move(Board*, Move) [8]
[59]     0.4    0.01    0.04 9671734         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::pop_back() [59]
                0.04    0.00 9671734/9671734     void std::allocator_traits<std::allocator<DisaggregatedScore> >::destroy<DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*) [68]
-----------------------------------------------
                0.00    0.00       5/19266341     void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [39]
                0.03    0.01 19266336/19266341     std::vector<int, std::allocator<int> >::back() [29]
[60]     0.4    0.03    0.01 19266341         std::vector<int, std::allocator<int> >::end() [60]
                0.01    0.00 19266341/38532682     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [77]
-----------------------------------------------
                0.01    0.03  375354/375354      generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [17]
[61]     0.4    0.01    0.03  375354         generate_king_moves(Board const*, MoveList*, Coordinate) [61]
                0.02    0.01 6005664/39496651     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [25]
                0.00    0.00 3002832/145328224     flip_color(Color) [50]
-----------------------------------------------
                0.04    0.00 39288272/39288272     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [24]
[62]     0.4    0.04    0.00 39288272         __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [62]
-----------------------------------------------
                0.00    0.00       8/38686948     void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [117]
                0.02    0.00 19343470/38686948     void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [34]
                0.02    0.00 19343470/38686948     void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&) [54]
[63]     0.4    0.04    0.00 38686948         Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&) [63]
-----------------------------------------------
                0.04    0.00 19266336/19266336     std::vector<int, std::allocator<int> >::back() [29]
[64]     0.4    0.04    0.00 19266336         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [64]
-----------------------------------------------
                                                 <spontaneous>
[65]     0.4    0.00    0.04                 __libc_csu_init [65]
                0.03    0.00       1/1           _GLOBAL__sub_I__Z10print_movePK5Board4Move [72]
                0.01    0.00       1/1           _GLOBAL__sub_I__Z10copy_board5Board [100]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z13get_best_moveP5BoardiiibbiPA10000_8PVRecord [278]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z11score_total18DisaggregatedScore [277]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [284]
                0.00    0.00       1/1           _GLOBAL__sub_I_pv_table [279]
-----------------------------------------------
                0.00    0.04  725409/725409      generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [17]
[66]     0.3    0.00    0.04  725409         generate_bishop_moves(Board const*, MoveList*, Coordinate) [66]
                0.02    0.02 7096469/39496651     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [25]
                0.00    0.00 2901636/145328224     flip_color(Color) [50]
-----------------------------------------------
                0.00    0.00       5/78576554     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin() [120]
                0.02    0.00 39288272/78576554     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [52]
                0.02    0.00 39288277/78576554     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() [38]
[67]     0.3    0.04    0.00 78576554         __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&) [67]
-----------------------------------------------
                0.04    0.00 9671734/9671734     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::pop_back() [59]
[68]     0.3    0.04    0.00 9671734         void std::allocator_traits<std::allocator<DisaggregatedScore> >::destroy<DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*) [68]
                0.00    0.00 9671734/9671734     void __gnu_cxx::new_allocator<DisaggregatedScore>::destroy<DisaggregatedScore>(DisaggregatedScore*) [133]
-----------------------------------------------
                0.00    0.03    6526/6526        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [71]
[69]     0.3    0.00    0.03    6526         void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [69]
                0.01    0.01    6526/6526        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [78]
                0.00    0.01    6526/6526        void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [106]
-----------------------------------------------
                0.00    0.03    6526/6526        order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
[70]     0.3    0.00    0.03    6526         void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}) [70]
                0.00    0.03    6526/6526        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [71]
                0.00    0.00    6526/6526        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter) [169]
-----------------------------------------------
                0.00    0.03    6526/6526        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}) [70]
[71]     0.3    0.00    0.03    6526         void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [71]
                0.00    0.03    6526/6526        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [69]
                0.00    0.00    6526/13602       std::__lg(long) [157]
                0.00    0.00    6526/6526        void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [170]
-----------------------------------------------
                0.03    0.00       1/1           __libc_csu_init [65]
[72]     0.3    0.03    0.00       1         _GLOBAL__sub_I__Z10print_movePK5Board4Move [72]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [286]
-----------------------------------------------
                                                 <spontaneous>
[73]     0.3    0.03    0.00                 Coordinate* std::__uninitialized_move_if_noexcept_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [73]
-----------------------------------------------
                0.01    0.02 19343468/19343468     std::vector<Coordinate, std::allocator<Coordinate> >::pop_back() [31]
[74]     0.3    0.01    0.02 19343468         void std::allocator_traits<std::allocator<Coordinate> >::destroy<Coordinate>(std::allocator<Coordinate>&, Coordinate*) [74]
                0.02    0.00 19343468/19343468     void __gnu_cxx::new_allocator<Coordinate>::destroy<Coordinate>(Coordinate*) [85]
-----------------------------------------------
                0.02    0.01 9671734/9671734     undo_move(Board*, Move) [8]
[75]     0.3    0.02    0.01 9671734         std::vector<int, std::allocator<int> >::pop_back() [75]
                0.00    0.01 9671734/9671734     void std::allocator_traits<std::allocator<int> >::destroy<int>(std::allocator<int>&, int*) [105]
-----------------------------------------------
                0.02    0.01       4/4           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&) [47]
[76]     0.3    0.02    0.01       4         void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [76]
                0.01    0.00       4/5           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long) [98]
                0.00    0.00       4/5           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin() [120]
                0.00    0.00       4/9671735     void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [111]
                0.00    0.00       8/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate() [224]
                0.00    0.00       8/11          std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() [206]
                0.00    0.00       8/20          __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const [186]
                0.00    0.00       8/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [222]
                0.00    0.00       4/5           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [245]
                0.00    0.00       4/5           __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&) [243]
                0.00    0.00       4/19343474     DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&) [131]
                0.00    0.00       4/6           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [236]
-----------------------------------------------
                0.00    0.00       5/38532682     std::vector<int, std::allocator<int> >::begin() [119]
                0.01    0.00 19266336/38532682     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const [55]
                0.01    0.00 19266341/38532682     std::vector<int, std::allocator<int> >::end() [60]
[77]     0.2    0.03    0.00 38532682         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [77]
-----------------------------------------------
                0.01    0.01    6526/6526        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [69]
[78]     0.2    0.01    0.01    6526         void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [78]
                0.00    0.01   84991/166335      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [92]
                0.00    0.01   84991/166335      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [93]
                0.00    0.00   97890/429660      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [140]
                0.00    0.00   25798/11577774     std::remove_reference<int&>::type&& std::move<int&>(int&) [132]
                0.00    0.00   12899/27860       int* std::move_backward<int*, int*>(int*, int*, int*) [154]
-----------------------------------------------
                0.00    0.00      38/29258348     get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.00    0.00  243106/29258348     stable_eval(Board*, int, int, int) [5]
                0.01    0.00 9671734/29258348     undo_move(Board*, Move) [8]
                0.01    0.00 9671735/29258348     apply_move(Board*, Move) [7]
                0.01    0.00 9671735/29258348     is_irreversible(Move, Piece) [87]
[79]     0.2    0.02    0.00 29258348         is_capture(Move) [79]
-----------------------------------------------
                0.00    0.00       5/29015213     void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [88]
                0.01    0.00 9671736/29015213     void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [39]
                0.01    0.00 9671736/29015213     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [57]
                0.01    0.00 9671736/29015213     void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [86]
[80]     0.2    0.02    0.00 29015213         int&& std::forward<int>(std::remove_reference<int>::type&) [80]
-----------------------------------------------
                0.02    0.00 9594601/9594601     evaluate(Board*) [23]
[81]     0.2    0.02    0.00 9594601         score_total(DisaggregatedScore) [81]
-----------------------------------------------
                                                 <spontaneous>
[82]     0.2    0.02    0.00                 __gnu_cxx::new_allocator<Coordinate>::new_allocator(__gnu_cxx::new_allocator<Coordinate> const&) [82]
-----------------------------------------------
                                                 <spontaneous>
[83]     0.2    0.02    0.00                 int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*) [83]
-----------------------------------------------
                                                 <spontaneous>
[84]     0.2    0.02    0.00                 __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [84]
-----------------------------------------------
                0.02    0.00 19343468/19343468     void std::allocator_traits<std::allocator<Coordinate> >::destroy<Coordinate>(std::allocator<Coordinate>&, Coordinate*) [74]
[85]     0.2    0.02    0.00 19343468         void __gnu_cxx::new_allocator<Coordinate>::destroy<Coordinate>(Coordinate*) [85]
-----------------------------------------------
                0.01    0.01 9671736/9671736     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [57]
[86]     0.2    0.01    0.01 9671736         void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [86]
                0.01    0.00 9671736/29015213     int&& std::forward<int>(std::remove_reference<int>::type&) [80]
                0.00    0.00 9671736/38686944     operator new(unsigned long, void*) [89]
-----------------------------------------------
                0.01    0.01 9671735/9671735     apply_move(Board*, Move) [7]
[87]     0.1    0.01    0.01 9671735         is_irreversible(Move, Piece) [87]
                0.01    0.00 9671735/29258348     is_capture(Move) [79]
-----------------------------------------------
                0.00    0.01       5/5           void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [39]
[88]     0.1    0.00    0.01       5         void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [88]
                0.01    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [99]
                0.00    0.00       5/9671736     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [57]
                0.00    0.00       5/29015213     int&& std::forward<int>(std::remove_reference<int>::type&) [80]
                0.00    0.00       5/5           std::vector<int, std::allocator<int> >::begin() [119]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_use_relocate() [229]
                0.00    0.00      10/11          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [207]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [187]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&) [227]
                0.00    0.00       5/5           std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [246]
                0.00    0.00       5/5           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [244]
                0.00    0.00       5/6           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [237]
-----------------------------------------------
                0.00    0.00       1/38686944     void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&) [123]
                0.00    0.00       2/38686944     void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&) [49]
                0.00    0.00 9671735/38686944     void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&) [110]
                0.00    0.00 9671736/38686944     void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [86]
                0.01    0.00 19343470/38686944     void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&) [54]
[89]     0.1    0.01    0.00 38686944         operator new(unsigned long, void*) [89]
-----------------------------------------------
                0.01    0.00  519497/519497      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [93]
[90]     0.1    0.01    0.00  519497         bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int, int*>(int&, int*) [90]
                0.00    0.00  519497/949157      order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}::operator()(int, int) const [135]
-----------------------------------------------
                0.01    0.00  166335/166335      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [92]
[91]     0.1    0.01    0.00  166335         __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#1}>&&) [91]
                0.00    0.00  166335/179387      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&) [142]
-----------------------------------------------
                0.00    0.00   81344/166335      void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [106]
                0.00    0.01   84991/166335      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [78]
[92]     0.1    0.00    0.01  166335         __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [92]
                0.01    0.00  166335/166335      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#1}>&&) [91]
                0.00    0.00  166335/166335      std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>(std::remove_reference&&) [147]
-----------------------------------------------
                0.00    0.00   81344/166335      void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [106]
                0.00    0.01   84991/166335      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [78]
[93]     0.1    0.00    0.01  166335         void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [93]
                0.01    0.00  519497/519497      bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int, int*>(int&, int*) [90]
                0.00    0.00  685832/11577774     std::remove_reference<int&>::type&& std::move<int&>(int&) [132]
-----------------------------------------------
                0.01    0.00    7076/7076        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [95]
[94]     0.1    0.01    0.00    7076         void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [94]
                0.00    0.00  106140/481333      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [139]
                0.00    0.00   91179/175563      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [144]
                0.00    0.00   91179/175563      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [145]
                0.00    0.00   29922/11577774     std::remove_reference<int&>::type&& std::move<int&>(int&) [132]
                0.00    0.00   14961/27860       int* std::move_backward<int*, int*>(int*, int*, int*) [154]
-----------------------------------------------
                0.00    0.01    7076/7076        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [97]
[95]     0.1    0.00    0.01    7076         void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [95]
                0.01    0.00    7076/7076        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [94]
                0.00    0.00    7071/7071        void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [167]
-----------------------------------------------
                0.00    0.01    7076/7076        order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [16]
[96]     0.1    0.00    0.01    7076         void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}) [96]
                0.00    0.01    7076/7076        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [97]
                0.00    0.00    7076/7076        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter) [165]
-----------------------------------------------
                0.00    0.01    7076/7076        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}) [96]
[97]     0.1    0.00    0.01    7076         void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [97]
                0.00    0.01    7076/7076        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [95]
                0.00    0.00    7076/13602       std::__lg(long) [157]
                0.00    0.00    7076/7076        void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [166]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [114]
                0.01    0.00       4/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [76]
[98]     0.1    0.01    0.00       5         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long) [98]
                0.00    0.00       5/5           std::allocator_traits<std::allocator<DisaggregatedScore> >::allocate(std::allocator<DisaggregatedScore>&, unsigned long) [248]
-----------------------------------------------
                0.01    0.00       5/5           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [88]
[99]     0.1    0.01    0.00       5         std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [99]
                0.00    0.00       5/5           std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [250]
-----------------------------------------------
                0.01    0.00       1/1           __libc_csu_init [65]
[100]    0.1    0.01    0.00       1         _GLOBAL__sub_I__Z10copy_board5Board [100]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [285]
-----------------------------------------------
                                                 <spontaneous>
[101]    0.1    0.01    0.00                 DisaggregatedScore* std::__uninitialized_copy_a<std::move_iterator<DisaggregatedScore*>, DisaggregatedScore*, DisaggregatedScore>(std::move_iterator<DisaggregatedScore*>, std::move_iterator<DisaggregatedScore*>, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [101]
-----------------------------------------------
                                                 <spontaneous>
[102]    0.1    0.01    0.00                 int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [102]
-----------------------------------------------
                                                 <spontaneous>
[103]    0.1    0.01    0.00                 __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > std::copy<__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > >(__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >) [103]
-----------------------------------------------
                0.01    0.00 9671734/9671734     void std::allocator_traits<std::allocator<int> >::destroy<int>(std::allocator<int>&, int*) [105]
[104]    0.1    0.01    0.00 9671734         void __gnu_cxx::new_allocator<int>::destroy<int>(int*) [104]
-----------------------------------------------
                0.00    0.01 9671734/9671734     std::vector<int, std::allocator<int> >::pop_back() [75]
[105]    0.1    0.00    0.01 9671734         void std::allocator_traits<std::allocator<int> >::destroy<int>(std::allocator<int>&, int*) [105]
                0.01    0.00 9671734/9671734     void __gnu_cxx::new_allocator<int>::destroy<int>(int*) [104]
-----------------------------------------------
                0.00    0.01    6526/6526        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [69]
[106]    0.1    0.00    0.01    6526         void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [106]
                0.00    0.00   81344/166335      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [92]
                0.00    0.00   81344/166335      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [93]
-----------------------------------------------
                                                 <spontaneous>
[107]    0.0    0.01    0.00                 __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > std::__miter_base<__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > >(__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >) [107]
-----------------------------------------------
                                                 <spontaneous>
[108]    0.0    0.01    0.00                 __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [108]
-----------------------------------------------
                                                 <spontaneous>
[109]    0.0    0.01    0.00                 DisaggregatedScore* std::__uninitialized_move_if_noexcept_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [109]
-----------------------------------------------
                0.00    0.00 9671735/9671735     void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [111]
[110]    0.0    0.00    0.00 9671735         void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&) [110]
                0.00    0.00 9671735/38686944     operator new(unsigned long, void*) [89]
                0.00    0.00 9671735/19343474     DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&) [131]
-----------------------------------------------
                0.00    0.00       4/9671735     void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [76]
                0.00    0.00 9671731/9671735     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&) [47]
[111]    0.0    0.00    0.00 9671735         void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [111]
                0.00    0.00 9671735/9671735     void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&) [110]
                0.00    0.00 9671735/19343474     DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&) [131]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&) [113]
[112]    0.0    0.00    0.00       1         void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [112]
                0.00    0.00       1/1           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [114]
                0.00    0.00       1/39288277     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() [38]
                0.00    0.00       1/4           DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&) [253]
-----------------------------------------------
                0.00    0.00       1/1           init_board(Board*) [41]
[113]    0.0    0.00    0.00       1         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&) [113]
                0.00    0.00       1/1           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [112]
                0.00    0.00       1/1           std::remove_reference<DisaggregatedScore&>::type&& std::move<DisaggregatedScore&>(DisaggregatedScore&) [315]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [112]
[114]    0.0    0.00    0.00       1         void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [114]
                0.00    0.00       1/5           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long) [98]
                0.00    0.00       1/5           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin() [120]
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&) [124]
                0.00    0.00       2/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate() [224]
                0.00    0.00       2/11          std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() [206]
                0.00    0.00       2/20          __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const [186]
                0.00    0.00       2/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [222]
                0.00    0.00       1/5           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [245]
                0.00    0.00       1/5           __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&) [243]
                0.00    0.00       1/4           DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&) [253]
                0.00    0.00       1/6           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [236]
-----------------------------------------------
                                   4             print_pv(Board*, int, int, PVRecord (*) [10000]) [115]
                0.00    0.00       1/1           main [1]
[115]    0.0    0.00    0.00       1+4       print_pv(Board*, int, int, PVRecord (*) [10000]) [115]
                0.00    0.00       4/9671735     apply_move(Board*, Move) [7]
                0.00    0.00       4/9671734     undo_move(Board*, Move) [8]
                0.00    0.00       4/866         print_move(Board const*, Move) [116]
                                   4             print_pv(Board*, int, int, PVRecord (*) [10000]) [115]
-----------------------------------------------
                0.00    0.00       4/866         print_pv(Board*, int, int, PVRecord (*) [10000]) [115]
                0.00    0.00     862/866         get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[116]    0.0    0.00    0.00     866         print_move(Board const*, Move) [116]
                0.00    0.00     866/115283766     get_piece(Board const*, Coordinate) [32]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [22]
[117]    0.0    0.00    0.00       8         void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [117]
                0.00    0.00       8/19343470     void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [34]
                0.00    0.00       8/10          std::vector<Coordinate, std::allocator<Coordinate> >::begin() [118]
                0.00    0.00       8/38686948     Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&) [63]
                0.00    0.00      16/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate() [196]
                0.00    0.00      16/22          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() [185]
                0.00    0.00      16/40          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const [180]
                0.00    0.00      16/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [194]
                0.00    0.00       8/10          std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [213]
                0.00    0.00       8/10          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&) [210]
                0.00    0.00       8/10          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long) [216]
                0.00    0.00       8/12          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [205]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [44]
                0.00    0.00       8/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [117]
[118]    0.0    0.00    0.00      10         std::vector<Coordinate, std::allocator<Coordinate> >::begin() [118]
                0.00    0.00      10/160903182     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&) [27]
-----------------------------------------------
                0.00    0.00       5/5           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [88]
[119]    0.0    0.00    0.00       5         std::vector<int, std::allocator<int> >::begin() [119]
                0.00    0.00       5/38532682     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [77]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [114]
                0.00    0.00       4/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [76]
[120]    0.0    0.00    0.00       5         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin() [120]
                0.00    0.00       5/78576554     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&) [67]
-----------------------------------------------
                0.00    0.00       5/5           get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[121]    0.0    0.00    0.00       5         apply_null(Board*) [121]
                0.00    0.00       5/145328224     flip_color(Color) [50]
-----------------------------------------------
                0.00    0.00       5/5           get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[122]    0.0    0.00    0.00       5         undo_null(Board*) [122]
                0.00    0.00       5/145328224     flip_color(Color) [50]
-----------------------------------------------
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&) [124]
[123]    0.0    0.00    0.00       1         void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&) [123]
                0.00    0.00       1/38686944     operator new(unsigned long, void*) [89]
                0.00    0.00       1/4           DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&) [253]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [114]
[124]    0.0    0.00    0.00       1         void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&) [124]
                0.00    0.00       1/1           void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&) [123]
                0.00    0.00       1/4           DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&) [253]
-----------------------------------------------
                0.00    0.00       4/19343474     void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [76]
                0.00    0.00 9671735/19343474     void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [111]
                0.00    0.00 9671735/19343474     void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&) [110]
[131]    0.0    0.00    0.00 19343474         DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&) [131]
-----------------------------------------------
                0.00    0.00   25798/11577774     void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [78]
                0.00    0.00   29922/11577774     void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [94]
                0.00    0.00  440223/11577774     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&) [148]
                0.00    0.00  685832/11577774     void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [93]
                0.00    0.00  724263/11577774     void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [145]
                0.00    0.00 9671736/11577774     std::vector<int, std::allocator<int> >::push_back(int&&) [35]
[132]    0.0    0.00    0.00 11577774         std::remove_reference<int&>::type&& std::move<int&>(int&) [132]
-----------------------------------------------
                0.00    0.00 9671734/9671734     void std::allocator_traits<std::allocator<DisaggregatedScore> >::destroy<DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*) [68]
[133]    0.0    0.00    0.00 9671734         void __gnu_cxx::new_allocator<DisaggregatedScore>::destroy<DisaggregatedScore>(DisaggregatedScore*) [133]
-----------------------------------------------
                0.00    0.00  481333/1030033     bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [139]
                0.00    0.00  548700/1030033     bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int, int*>(int&, int*) [138]
[134]    0.0    0.00    0.00 1030033         order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}::operator()(int, int) const [134]
-----------------------------------------------
                0.00    0.00  429660/949157      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [140]
                0.00    0.00  519497/949157      bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int, int*>(int&, int*) [90]
[135]    0.0    0.00    0.00  949157         order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}::operator()(int, int) const [135]
-----------------------------------------------
                0.00    0.00      40/674356      std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [213]
                0.00    0.00  674316/674356      add_eval_diff(Board*, Coordinate, Piece, bool) [12]
[136]    0.0    0.00    0.00  674356         std::vector<Coordinate, std::allocator<Coordinate> >::size() const [136]
-----------------------------------------------
                0.00    0.00  674316/674316      add_eval_diff(Board*, Coordinate, Piece, bool) [12]
[137]    0.0    0.00    0.00  674316         std::vector<Coordinate, std::allocator<Coordinate> >::operator[](unsigned long) [137]
-----------------------------------------------
                0.00    0.00  548700/548700      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [145]
[138]    0.0    0.00    0.00  548700         bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int, int*>(int&, int*) [138]
                0.00    0.00  548700/1030033     order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}::operator()(int, int) const [134]
-----------------------------------------------
                0.00    0.00   35205/481333      void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [159]
                0.00    0.00  106140/481333      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [94]
                0.00    0.00  339988/481333      int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [158]
[139]    0.0    0.00    0.00  481333         bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [139]
                0.00    0.00  481333/1030033     order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}::operator()(int, int) const [134]
-----------------------------------------------
                0.00    0.00   28444/429660      void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [162]
                0.00    0.00   97890/429660      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [78]
                0.00    0.00  303326/429660      int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [161]
[140]    0.0    0.00    0.00  429660         bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [140]
                0.00    0.00  429660/949157      order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}::operator()(int, int) const [135]
-----------------------------------------------
                0.00    0.00    7076/189715      __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter) [165]
                0.00    0.00    7076/189715      __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Iter_comp_iter({lambda(int, int)#2}) [164]
                0.00    0.00  175563/189715      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#2}>&&) [143]
[141]    0.0    0.00    0.00  189715         std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&) [141]
-----------------------------------------------
                0.00    0.00    6526/179387      __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter) [169]
                0.00    0.00    6526/179387      __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Iter_comp_iter({lambda(int, int)#1}) [168]
                0.00    0.00  166335/179387      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#1}>&&) [91]
[142]    0.0    0.00    0.00  179387         std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&) [142]
-----------------------------------------------
                0.00    0.00  175563/175563      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [144]
[143]    0.0    0.00    0.00  175563         __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#2}>&&) [143]
                0.00    0.00  175563/189715      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&) [141]
-----------------------------------------------
                0.00    0.00   84384/175563      void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [167]
                0.00    0.00   91179/175563      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [94]
[144]    0.0    0.00    0.00  175563         __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [144]
                0.00    0.00  175563/175563      std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>(std::remove_reference&&) [146]
                0.00    0.00  175563/175563      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#2}>&&) [143]
-----------------------------------------------
                0.00    0.00   84384/175563      void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [167]
                0.00    0.00   91179/175563      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [94]
[145]    0.0    0.00    0.00  175563         void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [145]
                0.00    0.00  724263/11577774     std::remove_reference<int&>::type&& std::move<int&>(int&) [132]
                0.00    0.00  548700/548700      bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int, int*>(int&, int*) [138]
-----------------------------------------------
                0.00    0.00  175563/175563      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [144]
[146]    0.0    0.00    0.00  175563         std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>(std::remove_reference&&) [146]
-----------------------------------------------
                0.00    0.00  166335/166335      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [92]
[147]    0.0    0.00    0.00  166335         std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>(std::remove_reference&&) [147]
-----------------------------------------------
                0.00    0.00  146741/146741      void std::iter_swap<int*, int*>(int*, int*) [149]
[148]    0.0    0.00    0.00  146741         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&) [148]
                0.00    0.00  440223/11577774     std::remove_reference<int&>::type&& std::move<int&>(int&) [132]
-----------------------------------------------
                0.00    0.00   11717/146741      void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [162]
                0.00    0.00   13540/146741      void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [159]
                0.00    0.00   54234/146741      int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [158]
                0.00    0.00   67250/146741      int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [161]
[149]    0.0    0.00    0.00  146741         void std::iter_swap<int*, int*>(int*, int*) [149]
                0.00    0.00  146741/146741      std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&) [148]
-----------------------------------------------
                0.00    0.00      30/83610       int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [232]
                0.00    0.00   83580/83610       int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [156]
[150]    0.0    0.00    0.00   83610         int* std::__niter_base<int*>(int*) [150]
-----------------------------------------------
                0.00    0.00   55720/55720       int* std::move_backward<int*, int*>(int*, int*, int*) [154]
[151]    0.0    0.00    0.00   55720         int* std::__miter_base<int*>(int*) [151]
-----------------------------------------------
                0.00    0.00   27860/27860       int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [155]
[152]    0.0    0.00    0.00   27860         int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [152]
-----------------------------------------------
                0.00    0.00   27860/27860       int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [156]
[153]    0.0    0.00    0.00   27860         int* std::__niter_wrap<int*>(int* const&, int*) [153]
-----------------------------------------------
                0.00    0.00   12899/27860       void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [78]
                0.00    0.00   14961/27860       void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [94]
[154]    0.0    0.00    0.00   27860         int* std::move_backward<int*, int*>(int*, int*, int*) [154]
                0.00    0.00   55720/55720       int* std::__miter_base<int*>(int*) [151]
                0.00    0.00   27860/27860       int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [156]
-----------------------------------------------
                0.00    0.00   27860/27860       int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [156]
[155]    0.0    0.00    0.00   27860         int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [155]
                0.00    0.00   27860/27860       int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [152]
-----------------------------------------------
                0.00    0.00   27860/27860       int* std::move_backward<int*, int*>(int*, int*, int*) [154]
[156]    0.0    0.00    0.00   27860         int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [156]
                0.00    0.00   83580/83610       int* std::__niter_base<int*>(int*) [150]
                0.00    0.00   27860/27860       int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [155]
                0.00    0.00   27860/27860       int* std::__niter_wrap<int*>(int* const&, int*) [153]
-----------------------------------------------
                0.00    0.00    6526/13602       void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [71]
                0.00    0.00    7076/13602       void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [97]
[157]    0.0    0.00    0.00   13602         std::__lg(long) [157]
-----------------------------------------------
                0.00    0.00   13540/13540       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [160]
[158]    0.0    0.00    0.00   13540         int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [158]
                0.00    0.00  339988/481333      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [139]
                0.00    0.00   54234/146741      void std::iter_swap<int*, int*>(int*, int*) [149]
-----------------------------------------------
                0.00    0.00   13540/13540       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [160]
[159]    0.0    0.00    0.00   13540         void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [159]
                0.00    0.00   35205/481333      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [139]
                0.00    0.00   13540/146741      void std::iter_swap<int*, int*>(int*, int*) [149]
-----------------------------------------------
                0.00    0.00   13540/13540       void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [166]
[160]    0.0    0.00    0.00   13540         int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [160]
                0.00    0.00   13540/13540       void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [159]
                0.00    0.00   13540/13540       int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [158]
-----------------------------------------------
                0.00    0.00   11717/11717       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [163]
[161]    0.0    0.00    0.00   11717         int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [161]
                0.00    0.00  303326/429660      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [140]
                0.00    0.00   67250/146741      void std::iter_swap<int*, int*>(int*, int*) [149]
-----------------------------------------------
                0.00    0.00   11717/11717       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [163]
[162]    0.0    0.00    0.00   11717         void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [162]
                0.00    0.00   28444/429660      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [140]
                0.00    0.00   11717/146741      void std::iter_swap<int*, int*>(int*, int*) [149]
-----------------------------------------------
                0.00    0.00   11717/11717       void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [170]
[163]    0.0    0.00    0.00   11717         int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [163]
                0.00    0.00   11717/11717       void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [162]
                0.00    0.00   11717/11717       int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [161]
-----------------------------------------------
                0.00    0.00    7076/7076        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter) [165]
[164]    0.0    0.00    0.00    7076         __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Iter_comp_iter({lambda(int, int)#2}) [164]
                0.00    0.00    7076/189715      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&) [141]
-----------------------------------------------
                0.00    0.00    7076/7076        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}) [96]
[165]    0.0    0.00    0.00    7076         __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter) [165]
                0.00    0.00    7076/189715      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&) [141]
                0.00    0.00    7076/7076        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Iter_comp_iter({lambda(int, int)#2}) [164]
-----------------------------------------------
                               13540             void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [166]
                0.00    0.00    7076/7076        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [97]
[166]    0.0    0.00    0.00    7076+13540   void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [166]
                0.00    0.00   13540/13540       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [160]
                               13540             void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [166]
-----------------------------------------------
                0.00    0.00    7071/7071        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [95]
[167]    0.0    0.00    0.00    7071         void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [167]
                0.00    0.00   84384/175563      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [144]
                0.00    0.00   84384/175563      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [145]
-----------------------------------------------
                0.00    0.00    6526/6526        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter) [169]
[168]    0.0    0.00    0.00    6526         __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Iter_comp_iter({lambda(int, int)#1}) [168]
                0.00    0.00    6526/179387      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&) [142]
-----------------------------------------------
                0.00    0.00    6526/6526        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}) [70]
[169]    0.0    0.00    0.00    6526         __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter) [169]
                0.00    0.00    6526/179387      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&) [142]
                0.00    0.00    6526/6526        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Iter_comp_iter({lambda(int, int)#1}) [168]
-----------------------------------------------
                               11717             void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [170]
                0.00    0.00    6526/6526        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [71]
[170]    0.0    0.00    0.00    6526+11717   void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [170]
                0.00    0.00   11717/11717       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [163]
                               11717             void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [170]
-----------------------------------------------
                0.00    0.00    1701/3435        std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [176]
                0.00    0.00    1734/3435        std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [172]
[171]    0.0    0.00    0.00    3435         std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [171]
-----------------------------------------------
                0.00    0.00      33/1734        std::ios_base::unsetf(std::_Ios_Fmtflags) [182]
                0.00    0.00    1701/1734        std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [176]
[172]    0.0    0.00    0.00    1734         std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [172]
                0.00    0.00    1734/3435        std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [171]
-----------------------------------------------
                0.00    0.00      33/1734        std::ios_base::unsetf(std::_Ios_Fmtflags) [182]
                0.00    0.00    1701/1734        std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [176]
[173]    0.0    0.00    0.00    1734         std::operator~(std::_Ios_Fmtflags) [173]
-----------------------------------------------
                0.00    0.00       6/1707        std::ios_base::setf(std::_Ios_Fmtflags) [238]
                0.00    0.00    1701/1707        std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [176]
[174]    0.0    0.00    0.00    1707         std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [174]
                0.00    0.00    1707/1707        std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [175]
-----------------------------------------------
                0.00    0.00    1707/1707        std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [174]
[175]    0.0    0.00    0.00    1707         std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [175]
-----------------------------------------------
                0.00    0.00    1701/1701        std::right(std::ios_base&) [618]
[176]    0.0    0.00    0.00    1701         std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [176]
                0.00    0.00    1701/1734        std::operator~(std::_Ios_Fmtflags) [173]
                0.00    0.00    1701/1734        std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [172]
                0.00    0.00    1701/3435        std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [171]
                0.00    0.00    1701/1707        std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [174]
-----------------------------------------------
                0.00    0.00       2/1701        main [1]
                0.00    0.00       5/1701        print_board_fancy(Board const*) [282]
                0.00    0.00    1694/1701        get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[177]    0.0    0.00    0.00    1701         std::setw(int) [177]
-----------------------------------------------
                0.00    0.00     256/256         print_board_fancy(Board const*)::{lambda(int const (*) [8][8], int)#3}::operator()(int const (*) [8][8], int) const [201]
[178]    0.0    0.00    0.00     256         print_board_fancy(Board const*)::{lambda(char const*, int)#1}::operator()(char const*, int) const [178]
-----------------------------------------------
                0.00    0.00      60/60          Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [198]
[179]    0.0    0.00    0.00      60         Coordinate* std::__niter_base<Coordinate*>(Coordinate*) [179]
-----------------------------------------------
                0.00    0.00       4/40          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [44]
                0.00    0.00      16/40          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [117]
                0.00    0.00      20/40          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&) [210]
[180]    0.0    0.00    0.00      40         __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const [180]
-----------------------------------------------
                0.00    0.00      10/40          std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [226]
                0.00    0.00      10/40          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&) [221]
                0.00    0.00      20/40          std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&) [193]
[181]    0.0    0.00    0.00      40         unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [181]
-----------------------------------------------
                0.00    0.00      33/33          std::noshowpos(std::ios_base&) [634]
[182]    0.0    0.00    0.00      33         std::ios_base::unsetf(std::_Ios_Fmtflags) [182]
                0.00    0.00      33/1734        std::operator~(std::_Ios_Fmtflags) [173]
                0.00    0.00      33/1734        std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [172]
-----------------------------------------------
                0.00    0.00      10/30          __gnu_cxx::new_allocator<Coordinate>::allocate(unsigned long, void const*) [209]
                0.00    0.00      20/30          std::allocator_traits<std::allocator<Coordinate> >::max_size(std::allocator<Coordinate> const&) [192]
[183]    0.0    0.00    0.00      30         __gnu_cxx::new_allocator<Coordinate>::max_size() const [183]
-----------------------------------------------
                0.00    0.00      30/30          DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [231]
[184]    0.0    0.00    0.00      30         DisaggregatedScore* std::__niter_base<DisaggregatedScore*>(DisaggregatedScore*) [184]
-----------------------------------------------
                0.00    0.00       2/22          std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [273]
                0.00    0.00       4/22          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [44]
                0.00    0.00      16/22          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [117]
[185]    0.0    0.00    0.00      22         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() [185]
-----------------------------------------------
                0.00    0.00       2/20          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [114]
                0.00    0.00       8/20          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [76]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&) [243]
[186]    0.0    0.00    0.00      20         __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const [186]
-----------------------------------------------
                0.00    0.00      10/20          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [88]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [244]
[187]    0.0    0.00    0.00      20         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [187]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const [189]
[188]    0.0    0.00    0.00      20         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() const [188]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [213]
[189]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const [189]
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&) [193]
                0.00    0.00      20/20          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() const [188]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [245]
[190]    0.0    0.00    0.00      20         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::size() const [190]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [246]
[191]    0.0    0.00    0.00      20         std::vector<int, std::allocator<int> >::size() const [191]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&) [193]
[192]    0.0    0.00    0.00      20         std::allocator_traits<std::allocator<Coordinate> >::max_size(std::allocator<Coordinate> const&) [192]
                0.00    0.00      20/30          __gnu_cxx::new_allocator<Coordinate>::max_size() const [183]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const [189]
[193]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&) [193]
                0.00    0.00      20/20          std::allocator_traits<std::allocator<Coordinate> >::max_size(std::allocator<Coordinate> const&) [192]
                0.00    0.00      20/40          unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [181]
-----------------------------------------------
                0.00    0.00       4/20          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [44]
                0.00    0.00      16/20          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [117]
[194]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [194]
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_do_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&, std::integral_constant<bool, true>) [195]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [194]
[195]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::_S_do_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&, std::integral_constant<bool, true>) [195]
                0.00    0.00      20/20          Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [198]
-----------------------------------------------
                0.00    0.00       4/20          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [44]
                0.00    0.00      16/20          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [117]
[196]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate() [196]
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [197]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate() [196]
[197]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [197]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_do_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&, std::integral_constant<bool, true>) [195]
[198]    0.0    0.00    0.00      20         Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [198]
                0.00    0.00      60/60          Coordinate* std::__niter_base<Coordinate*>(Coordinate*) [179]
                0.00    0.00      20/20          std::enable_if<std::__is_bitwise_relocatable<Coordinate, void>::value, Coordinate*>::type std::__relocate_a_1<Coordinate, Coordinate>(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [199]
-----------------------------------------------
                0.00    0.00      20/20          Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [198]
[199]    0.0    0.00    0.00      20         std::enable_if<std::__is_bitwise_relocatable<Coordinate, void>::value, Coordinate*>::type std::__relocate_a_1<Coordinate, Coordinate>(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [199]
-----------------------------------------------
                0.00    0.00       5/20          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [246]
                0.00    0.00       5/20          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [245]
                0.00    0.00      10/20          std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [213]
[200]    0.0    0.00    0.00      20         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [200]
-----------------------------------------------
                0.00    0.00      16/16          print_board_fancy(Board const*) [282]
[201]    0.0    0.00    0.00      16         print_board_fancy(Board const*)::{lambda(int const (*) [8][8], int)#3}::operator()(int const (*) [8][8], int) const [201]
                0.00    0.00     256/256         print_board_fancy(Board const*)::{lambda(char const*, int)#1}::operator()(char const*, int) const [178]
-----------------------------------------------
                0.00    0.00       5/15          __gnu_cxx::new_allocator<DisaggregatedScore>::allocate(unsigned long, void const*) [240]
                0.00    0.00      10/15          std::allocator_traits<std::allocator<DisaggregatedScore> >::max_size(std::allocator<DisaggregatedScore> const&) [219]
[202]    0.0    0.00    0.00      15         __gnu_cxx::new_allocator<DisaggregatedScore>::max_size() const [202]
-----------------------------------------------
                0.00    0.00       5/15          __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [242]
                0.00    0.00      10/15          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [220]
[203]    0.0    0.00    0.00      15         __gnu_cxx::new_allocator<int>::max_size() const [203]
-----------------------------------------------
                0.00    0.00      14/14          print_board(Board const*) [281]
[204]    0.0    0.00    0.00      14         print_board(Board const*)::{lambda()#1}::operator()() const [204]
-----------------------------------------------
                0.00    0.00       2/12          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base() [271]
                0.00    0.00       2/12          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [44]
                0.00    0.00       8/12          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [117]
[205]    0.0    0.00    0.00      12         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [205]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<Coordinate> >::deallocate(std::allocator<Coordinate>&, Coordinate*, unsigned long) [217]
-----------------------------------------------
                0.00    0.00       1/11          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector() [312]
                0.00    0.00       2/11          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [114]
                0.00    0.00       8/11          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [76]
[206]    0.0    0.00    0.00      11         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() [206]
-----------------------------------------------
                0.00    0.00       1/11          std::vector<int, std::allocator<int> >::~vector() [314]
                0.00    0.00      10/11          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [88]
[207]    0.0    0.00    0.00      11         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [207]
-----------------------------------------------
                0.00    0.00      10/10          std::allocator_traits<std::allocator<Coordinate> >::deallocate(std::allocator<Coordinate>&, Coordinate*, unsigned long) [217]
[208]    0.0    0.00    0.00      10         __gnu_cxx::new_allocator<Coordinate>::deallocate(Coordinate*, unsigned long) [208]
-----------------------------------------------
                0.00    0.00      10/10          std::allocator_traits<std::allocator<Coordinate> >::allocate(std::allocator<Coordinate>&, unsigned long) [218]
[209]    0.0    0.00    0.00      10         __gnu_cxx::new_allocator<Coordinate>::allocate(unsigned long, void const*) [209]
                0.00    0.00      10/30          __gnu_cxx::new_allocator<Coordinate>::max_size() const [183]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [44]
                0.00    0.00       8/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [117]
[210]    0.0    0.00    0.00      10         __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&) [210]
                0.00    0.00      20/40          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const [180]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const [214]
[211]    0.0    0.00    0.00      10         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() const [211]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::max_size() const [215]
[212]    0.0    0.00    0.00      10         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [212]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [44]
                0.00    0.00       8/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [117]
[213]    0.0    0.00    0.00      10         std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [213]
                0.00    0.00      40/674356      std::vector<Coordinate, std::allocator<Coordinate> >::size() const [136]
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const [189]
                0.00    0.00      10/20          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [200]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [245]
[214]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const [214]
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&) [221]
                0.00    0.00      10/10          std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() const [211]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [246]
[215]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::max_size() const [215]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [226]
                0.00    0.00      10/10          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [212]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [44]
                0.00    0.00       8/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [117]
[216]    0.0    0.00    0.00      10         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long) [216]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<Coordinate> >::allocate(std::allocator<Coordinate>&, unsigned long) [218]
-----------------------------------------------
                0.00    0.00      10/10          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [205]
[217]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<Coordinate> >::deallocate(std::allocator<Coordinate>&, Coordinate*, unsigned long) [217]
                0.00    0.00      10/10          __gnu_cxx::new_allocator<Coordinate>::deallocate(Coordinate*, unsigned long) [208]
-----------------------------------------------
                0.00    0.00      10/10          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long) [216]
[218]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<Coordinate> >::allocate(std::allocator<Coordinate>&, unsigned long) [218]
                0.00    0.00      10/10          __gnu_cxx::new_allocator<Coordinate>::allocate(unsigned long, void const*) [209]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&) [221]
[219]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<DisaggregatedScore> >::max_size(std::allocator<DisaggregatedScore> const&) [219]
                0.00    0.00      10/15          __gnu_cxx::new_allocator<DisaggregatedScore>::max_size() const [202]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [226]
[220]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [220]
                0.00    0.00      10/15          __gnu_cxx::new_allocator<int>::max_size() const [203]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const [214]
[221]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&) [221]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<DisaggregatedScore> >::max_size(std::allocator<DisaggregatedScore> const&) [219]
                0.00    0.00      10/40          unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [181]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [114]
                0.00    0.00       8/10          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [76]
[222]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [222]
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_do_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&, std::integral_constant<bool, true>) [223]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [222]
[223]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_do_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&, std::integral_constant<bool, true>) [223]
                0.00    0.00      10/10          DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [231]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [114]
                0.00    0.00       8/10          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [76]
[224]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate() [224]
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [225]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate() [224]
[225]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [225]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::max_size() const [215]
[226]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [226]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [220]
                0.00    0.00      10/40          unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [181]
-----------------------------------------------
                0.00    0.00      10/10          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [88]
[227]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&) [227]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>) [228]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&) [227]
[228]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>) [228]
                0.00    0.00      10/10          int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [232]
-----------------------------------------------
                0.00    0.00      10/10          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [88]
[229]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::_S_use_relocate() [229]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [230]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_use_relocate() [229]
[230]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [230]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_do_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&, std::integral_constant<bool, true>) [223]
[231]    0.0    0.00    0.00      10         DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [231]
                0.00    0.00      30/30          DisaggregatedScore* std::__niter_base<DisaggregatedScore*>(DisaggregatedScore*) [184]
                0.00    0.00      10/10          std::enable_if<std::__is_bitwise_relocatable<DisaggregatedScore, void>::value, DisaggregatedScore*>::type std::__relocate_a_1<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [233]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>) [228]
[232]    0.0    0.00    0.00      10         int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [232]
                0.00    0.00      30/83610       int* std::__niter_base<int*>(int*) [150]
                0.00    0.00      10/10          std::enable_if<std::__is_bitwise_relocatable<int, void>::value, int*>::type std::__relocate_a_1<int, int>(int*, int*, int*, std::allocator<int>&) [234]
-----------------------------------------------
                0.00    0.00      10/10          DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [231]
[233]    0.0    0.00    0.00      10         std::enable_if<std::__is_bitwise_relocatable<DisaggregatedScore, void>::value, DisaggregatedScore*>::type std::__relocate_a_1<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [233]
-----------------------------------------------
                0.00    0.00      10/10          int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [232]
[234]    0.0    0.00    0.00      10         std::enable_if<std::__is_bitwise_relocatable<int, void>::value, int*>::type std::__relocate_a_1<int, int>(int*, int*, int*, std::allocator<int>&) [234]
-----------------------------------------------
                0.00    0.00       2/8           void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [42]
                0.00    0.00       2/8           void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&) [45]
                0.00    0.00       2/8           void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [44]
                0.00    0.00       2/8           void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&) [49]
[235]    0.0    0.00    0.00       8         Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&) [235]
-----------------------------------------------
                0.00    0.00       1/6           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base() [305]
                0.00    0.00       1/6           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [114]
                0.00    0.00       4/6           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [76]
[236]    0.0    0.00    0.00       6         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [236]
                0.00    0.00       5/5           std::allocator_traits<std::allocator<DisaggregatedScore> >::deallocate(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, unsigned long) [247]
-----------------------------------------------
                0.00    0.00       1/6           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [310]
                0.00    0.00       5/6           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [88]
[237]    0.0    0.00    0.00       6         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [237]
                0.00    0.00       5/5           std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [249]
-----------------------------------------------
                0.00    0.00       6/6           std::showpos(std::ios_base&) [625]
[238]    0.0    0.00    0.00       6         std::ios_base::setf(std::_Ios_Fmtflags) [238]
                0.00    0.00       6/1707        std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [174]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator_traits<std::allocator<DisaggregatedScore> >::deallocate(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, unsigned long) [247]
[239]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<DisaggregatedScore>::deallocate(DisaggregatedScore*, unsigned long) [239]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator_traits<std::allocator<DisaggregatedScore> >::allocate(std::allocator<DisaggregatedScore>&, unsigned long) [248]
[240]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<DisaggregatedScore>::allocate(unsigned long, void const*) [240]
                0.00    0.00       5/15          __gnu_cxx::new_allocator<DisaggregatedScore>::max_size() const [202]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [249]
[241]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [241]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [250]
[242]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [242]
                0.00    0.00       5/15          __gnu_cxx::new_allocator<int>::max_size() const [203]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [114]
                0.00    0.00       4/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [76]
[243]    0.0    0.00    0.00       5         __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&) [243]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const [186]
-----------------------------------------------
                0.00    0.00       5/5           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [88]
[244]    0.0    0.00    0.00       5         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [244]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [187]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [114]
                0.00    0.00       4/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [76]
[245]    0.0    0.00    0.00       5         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [245]
                0.00    0.00      20/20          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::size() const [190]
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const [214]
                0.00    0.00       5/20          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [200]
-----------------------------------------------
                0.00    0.00       5/5           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [88]
[246]    0.0    0.00    0.00       5         std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [246]
                0.00    0.00      20/20          std::vector<int, std::allocator<int> >::size() const [191]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::max_size() const [215]
                0.00    0.00       5/20          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [200]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [236]
[247]    0.0    0.00    0.00       5         std::allocator_traits<std::allocator<DisaggregatedScore> >::deallocate(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, unsigned long) [247]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<DisaggregatedScore>::deallocate(DisaggregatedScore*, unsigned long) [239]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long) [98]
[248]    0.0    0.00    0.00       5         std::allocator_traits<std::allocator<DisaggregatedScore> >::allocate(std::allocator<DisaggregatedScore>&, unsigned long) [248]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<DisaggregatedScore>::allocate(unsigned long, void const*) [240]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [237]
[249]    0.0    0.00    0.00       5         std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [249]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [241]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [99]
[250]    0.0    0.00    0.00       5         std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [250]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [242]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() const [260]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [257]
[251]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore const* const&) [251]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<int, std::allocator<int> >::end() const [262]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator-(long) const [259]
[252]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [252]
-----------------------------------------------
                0.00    0.00       1/4           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [112]
                0.00    0.00       1/4           void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&) [124]
                0.00    0.00       1/4           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [114]
                0.00    0.00       1/4           void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&) [123]
[253]    0.0    0.00    0.00       4         DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&) [253]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<Coordinate>::allocator() [264]
[254]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Coordinate>::new_allocator() [254]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<Coordinate>::~allocator() [265]
[255]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Coordinate>::~new_allocator() [255]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [261]
[256]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [256]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [261]
[257]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [257]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore const* const&) [251]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::back() const [263]
[258]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator*() const [258]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::back() const [263]
[259]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator-(long) const [259]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [252]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [261]
[260]    0.0    0.00    0.00       2         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() const [260]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore const* const&) [251]
-----------------------------------------------
                0.00    0.00       1/2           print_board_fancy(Board const*) [282]
                0.00    0.00       1/2           print_board(Board const*) [281]
[261]    0.0    0.00    0.00       2         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [261]
                0.00    0.00       2/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() const [260]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [257]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [256]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::back() const [263]
[262]    0.0    0.00    0.00       2         std::vector<int, std::allocator<int> >::end() const [262]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [252]
-----------------------------------------------
                0.00    0.00       1/2           print_board_fancy(Board const*) [282]
                0.00    0.00       1/2           print_board(Board const*) [281]
[263]    0.0    0.00    0.00       2         std::vector<int, std::allocator<int> >::back() const [263]
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::end() const [262]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator-(long) const [259]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator*() const [258]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl() [267]
[264]    0.0    0.00    0.00       2         std::allocator<Coordinate>::allocator() [264]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Coordinate>::new_allocator() [254]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::~_Vector_impl() [268]
[265]    0.0    0.00    0.00       2         std::allocator<Coordinate>::~allocator() [265]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Coordinate>::~new_allocator() [255]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Coordinate*>(Coordinate*, Coordinate*) [275]
[266]    0.0    0.00    0.00       2         void std::_Destroy_aux<true>::__destroy<Coordinate*>(Coordinate*, Coordinate*) [266]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_base() [270]
[267]    0.0    0.00    0.00       2         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl() [267]
                0.00    0.00       2/2           std::allocator<Coordinate>::allocator() [264]
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl_data::_Vector_impl_data() [269]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base() [271]
[268]    0.0    0.00    0.00       2         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::~_Vector_impl() [268]
                0.00    0.00       2/2           std::allocator<Coordinate>::~allocator() [265]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl() [267]
[269]    0.0    0.00    0.00       2         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl_data::_Vector_impl_data() [269]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::vector() [272]
[270]    0.0    0.00    0.00       2         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_base() [270]
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl() [267]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [273]
[271]    0.0    0.00    0.00       2         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base() [271]
                0.00    0.00       2/12          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [205]
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::~_Vector_impl() [268]
-----------------------------------------------
                0.00    0.00       2/2           Board::Board() [289]
[272]    0.0    0.00    0.00       2         std::vector<Coordinate, std::allocator<Coordinate> >::vector() [272]
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_base() [270]
-----------------------------------------------
                0.00    0.00       2/2           Board::~Board() [290]
[273]    0.0    0.00    0.00       2         std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [273]
                0.00    0.00       2/22          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() [185]
                0.00    0.00       2/2           void std::_Destroy<Coordinate*, Coordinate>(Coordinate*, Coordinate*, std::allocator<Coordinate>&) [276]
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base() [271]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&) [43]
[274]    0.0    0.00    0.00       2         std::remove_reference<Coordinate&>::type&& std::move<Coordinate&>(Coordinate&) [274]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Coordinate*, Coordinate>(Coordinate*, Coordinate*, std::allocator<Coordinate>&) [276]
[275]    0.0    0.00    0.00       2         void std::_Destroy<Coordinate*>(Coordinate*, Coordinate*) [275]
                0.00    0.00       2/2           void std::_Destroy_aux<true>::__destroy<Coordinate*>(Coordinate*, Coordinate*) [266]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [273]
[276]    0.0    0.00    0.00       2         void std::_Destroy<Coordinate*, Coordinate>(Coordinate*, Coordinate*, std::allocator<Coordinate>&) [276]
                0.00    0.00       2/2           void std::_Destroy<Coordinate*>(Coordinate*, Coordinate*) [275]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [65]
[277]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z11score_total18DisaggregatedScore [277]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [287]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [65]
[278]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z13get_best_moveP5BoardiiibbiPA10000_8PVRecord [278]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [288]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [65]
[279]    0.0    0.00    0.00       1         _GLOBAL__sub_I_pv_table [279]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [283]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[280]    0.0    0.00    0.00       1         zero_table(PVRecord (*) [10000]) [280]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[281]    0.0    0.00    0.00       1         print_board(Board const*) [281]
                0.00    0.00      14/14          print_board(Board const*)::{lambda()#1}::operator()() const [204]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::back() const [263]
                0.00    0.00       1/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [261]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[282]    0.0    0.00    0.00       1         print_board_fancy(Board const*) [282]
                0.00    0.00      16/16          print_board_fancy(Board const*)::{lambda(int const (*) [8][8], int)#3}::operator()(int const (*) [8][8], int) const [201]
                0.00    0.00       5/1701        std::setw(int) [177]
                0.00    0.00       1/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [261]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::back() const [263]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_pv_table [279]
[283]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [283]
-----------------------------------------------
                                   1             __static_initialization_and_destruction_0(int, int) [284]
                0.00    0.00       1/1           __libc_csu_init [65]
[284]    0.0    0.00    0.00       1+1       __static_initialization_and_destruction_0(int, int) [284]
                                   1             __static_initialization_and_destruction_0(int, int) [284]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10copy_board5Board [100]
[285]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [285]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10print_movePK5Board4Move [72]
[286]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [286]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z11score_total18DisaggregatedScore [277]
[287]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [287]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z13get_best_moveP5BoardiiibbiPA10000_8PVRecord [278]
[288]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [288]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[289]    0.0    0.00    0.00       1         Board::Board() [289]
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::vector() [272]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [313]
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::vector() [311]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[290]    0.0    0.00    0.00       1         Board::~Board() [290]
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [273]
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector() [312]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [314]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<DisaggregatedScore>::allocator() [295]
[291]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<DisaggregatedScore>::new_allocator() [291]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<DisaggregatedScore>::~allocator() [296]
[292]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<DisaggregatedScore>::~new_allocator() [292]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::allocator() [297]
[293]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::new_allocator() [293]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::~allocator() [298]
[294]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::~new_allocator() [294]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl() [301]
[295]    0.0    0.00    0.00       1         std::allocator<DisaggregatedScore>::allocator() [295]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<DisaggregatedScore>::new_allocator() [291]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::~_Vector_impl() [302]
[296]    0.0    0.00    0.00       1         std::allocator<DisaggregatedScore>::~allocator() [296]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<DisaggregatedScore>::~new_allocator() [292]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [306]
[297]    0.0    0.00    0.00       1         std::allocator<int>::allocator() [297]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::new_allocator() [293]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [307]
[298]    0.0    0.00    0.00       1         std::allocator<int>::~allocator() [298]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::~new_allocator() [294]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [316]
[299]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [299]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<int*>(int*, int*) [318]
[300]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [300]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_base() [304]
[301]    0.0    0.00    0.00       1         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl() [301]
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl_data::_Vector_impl_data() [303]
                0.00    0.00       1/1           std::allocator<DisaggregatedScore>::allocator() [295]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base() [305]
[302]    0.0    0.00    0.00       1         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::~_Vector_impl() [302]
                0.00    0.00       1/1           std::allocator<DisaggregatedScore>::~allocator() [296]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl() [301]
[303]    0.0    0.00    0.00       1         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl_data::_Vector_impl_data() [303]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::vector() [311]
[304]    0.0    0.00    0.00       1         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_base() [304]
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl() [301]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector() [312]
[305]    0.0    0.00    0.00       1         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base() [305]
                0.00    0.00       1/6           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [236]
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::~_Vector_impl() [302]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [309]
[306]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [306]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [308]
                0.00    0.00       1/1           std::allocator<int>::allocator() [297]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [310]
[307]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [307]
                0.00    0.00       1/1           std::allocator<int>::~allocator() [298]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [306]
[308]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [308]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [313]
[309]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [309]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [306]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [314]
[310]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [310]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [307]
                0.00    0.00       1/6           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [237]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board() [289]
[311]    0.0    0.00    0.00       1         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::vector() [311]
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_base() [304]
-----------------------------------------------
                0.00    0.00       1/1           Board::~Board() [290]
[312]    0.0    0.00    0.00       1         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector() [312]
                0.00    0.00       1/11          std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() [206]
                0.00    0.00       1/1           void std::_Destroy<DisaggregatedScore*, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [317]
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base() [305]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board() [289]
[313]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::vector() [313]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [309]
-----------------------------------------------
                0.00    0.00       1/1           Board::~Board() [290]
[314]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::~vector() [314]
                0.00    0.00       1/11          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [207]
                0.00    0.00       1/1           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [319]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [310]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&) [113]
[315]    0.0    0.00    0.00       1         std::remove_reference<DisaggregatedScore&>::type&& std::move<DisaggregatedScore&>(DisaggregatedScore&) [315]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<DisaggregatedScore*, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [317]
[316]    0.0    0.00    0.00       1         void std::_Destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [316]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [299]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector() [312]
[317]    0.0    0.00    0.00       1         void std::_Destroy<DisaggregatedScore*, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [317]
                0.00    0.00       1/1           void std::_Destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [316]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [319]
[318]    0.0    0.00    0.00       1         void std::_Destroy<int*>(int*, int*) [318]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [300]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [314]
[319]    0.0    0.00    0.00       1         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [319]
                0.00    0.00       1/1           void std::_Destroy<int*>(int*, int*) [318]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [100] _GLOBAL__sub_I__Z10copy_board5Board [186] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const [24] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back()
  [72] _GLOBAL__sub_I__Z10print_movePK5Board4Move [62] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [120] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin()
 [277] _GLOBAL__sub_I__Z11score_total18DisaggregatedScore [52] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [59] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::pop_back()
 [278] _GLOBAL__sub_I__Z13get_best_moveP5BoardiiibbiPA10000_8PVRecord [256] __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [113] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&)
 [279] _GLOBAL__sub_I_pv_table [257] __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [47] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&)
   [7] apply_move(Board*, Move) [258] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator*() const [311] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::vector()
 [121] apply_null(Board*)    [259] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator-(long) const [312] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector()
  [50] flip_color(Color)     [187] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [226] std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)
  [41] init_board(Board*)     [64] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [227] std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&)
  [79] is_capture(Move)       [55] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const [39] void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
 [116] print_move(Board const*, Move) [188] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() const [228] std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>)
 [280] zero_table(PVRecord (*) [10000]) [211] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() const [229] std::vector<int, std::allocator<int> >::_S_use_relocate()
  [18] max_ray_len(int, int, int, int) [212] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [88] void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)
  [16] order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) [213] std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [230] std::vector<int, std::allocator<int> >::_S_nothrow_relocate(std::integral_constant<bool, true>)
 [281] print_board(Board const*) [136] std::vector<Coordinate, std::allocator<Coordinate> >::size() const [60] std::vector<int, std::allocator<int> >::end()
  [81] score_total(DisaggregatedScore) [189] std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const [29] std::vector<int, std::allocator<int> >::back()
   [5] stable_eval(Board*, int, int, int) [245] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [119] std::vector<int, std::allocator<int> >::begin()
   [4] change_piece(Board*, Coordinate, Piece, bool) [260] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() const [75] std::vector<int, std::allocator<int> >::pop_back()
  [37] piece_equals(Piece, Piece) [261] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [35] std::vector<int, std::allocator<int> >::push_back(int&&)
  [12] add_eval_diff(Board*, Coordinate, Piece, bool) [190] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::size() const [313] std::vector<int, std::allocator<int> >::vector()
   [3] get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) [214] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const [314] std::vector<int, std::allocator<int> >::~vector()
  [28] quintant_from(Coordinate) [246] std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [238] std::ios_base::setf(std::_Ios_Fmtflags)
  [14] generate_moves(Board const*, MoveList*) [262] std::vector<int, std::allocator<int> >::end() const [176] std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  [15] generate_moves(Board const*, MoveList*, Color) [263] std::vector<int, std::allocator<int> >::back() const [182] std::ios_base::unsetf(std::_Ios_Fmtflags)
  [87] is_irreversible(Move, Piece) [191] std::vector<int, std::allocator<int> >::size() const [107] __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > std::__miter_base<__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > >(__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >)
  [30] kronecker_piece(Board const*, Coordinate, Piece) [215] std::vector<int, std::allocator<int> >::max_size() const [108] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
 [282] print_board_fancy(Board const*) [264] std::allocator<Coordinate>::allocator() [151] int* std::__miter_base<int*>(int*)
  [61] generate_king_moves(Board const*, MoveList*, Coordinate) [265] std::allocator<Coordinate>::~allocator() [179] Coordinate* std::__niter_base<Coordinate*>(Coordinate*)
  [36] generate_pawn_moves(Board const*, MoveList*, Coordinate) [295] std::allocator<DisaggregatedScore>::allocator() [184] DisaggregatedScore* std::__niter_base<DisaggregatedScore*>(DisaggregatedScore*)
  [51] generate_rook_moves(Board const*, MoveList*, Coordinate) [296] std::allocator<DisaggregatedScore>::~allocator() [150] int* std::__niter_base<int*>(int*)
   [6] shallow_greedy_move(Board*) [297] std::allocator<int>::allocator() [153] int* std::__niter_wrap<int*>(int* const&, int*)
  [20] update_king_attacks(Board*, Coordinate, Color, bool) [298] std::allocator<int>::~allocator() [198] Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  [10] update_weak_squares(Board*, Color, int) [266] void std::_Destroy_aux<true>::__destroy<Coordinate*>(Coordinate*, Coordinate*) [231] DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  [25] add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [299] void std::_Destroy_aux<true>::__destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [232] int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
  [48] generate_queen_moves(Board const*, MoveList*, Coordinate) [300] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [154] int* std::move_backward<int*, int*>(int*, int*, int*)
   [9] update_xrays_by_pawn(Board*, Coordinate, Piece, bool) [216] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long) [199] std::enable_if<std::__is_bitwise_relocatable<Coordinate, void>::value, Coordinate*>::type std::__relocate_a_1<Coordinate, Coordinate>(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  [66] generate_bishop_moves(Board const*, MoveList*, Coordinate) [267] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl() [233] std::enable_if<std::__is_bitwise_relocatable<DisaggregatedScore, void>::value, DisaggregatedScore*>::type std::__relocate_a_1<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  [40] generate_knight_moves(Board const*, MoveList*, Coordinate) [268] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::~_Vector_impl() [234] std::enable_if<std::__is_bitwise_relocatable<int, void>::value, int*>::type std::__relocate_a_1<int, int>(int*, int*, int*, std::allocator<int>&)
  [19] update_least_advanced(Board*, Color, int) [205] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [94] void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  [11] update_xrays_by_piece(Board*, Coordinate, Piece, bool) [269] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl_data::_Vector_impl_data() [78] void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  [17] generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate) [185] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() [166] void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  [46] add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color) [270] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_base() [170] void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
 [283] __static_initialization_and_destruction_0(int, int) [271] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base() [158] int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [284] __static_initialization_and_destruction_0(int, int) [98] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long) [161] int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
 [285] __static_initialization_and_destruction_0(int, int) [301] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl() [155] int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
 [286] __static_initialization_and_destruction_0(int, int) [302] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::~_Vector_impl() [95] void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [287] __static_initialization_and_destruction_0(int, int) [236] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [69] void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
 [288] __static_initialization_and_destruction_0(int, int) [303] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl_data::_Vector_impl_data() [159] void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  [56] parity(Coordinate)    [206] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() [162] void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  [23] evaluate(Board*)      [304] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_base() [101] DisaggregatedScore* std::__uninitialized_copy_a<std::move_iterator<DisaggregatedScore*>, DisaggregatedScore*, DisaggregatedScore>(std::move_iterator<DisaggregatedScore*>, std::move_iterator<DisaggregatedScore*>, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  [33] is_valid(Coordinate)  [305] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base() [102] int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
 [115] print_pv(Board*, int, int, PVRecord (*) [10000]) [99] std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [156] int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*)
  [32] get_piece(Board const*, Coordinate) [306] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [145] void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
   [8] undo_move(Board*, Move) [307] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [93] void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
 [122] undo_null(Board*)     [237] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [167] void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [289] Board::Board()        [308] std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [106] void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
 [290] Board::~Board()       [207] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [160] int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [208] __gnu_cxx::new_allocator<Coordinate>::deallocate(Coordinate*, unsigned long) [309] std::_Vector_base<int, std::allocator<int> >::_Vector_base() [163] int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  [85] void __gnu_cxx::new_allocator<Coordinate>::destroy<Coordinate>(Coordinate*) [310] std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [73] Coordinate* std::__uninitialized_move_if_noexcept_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
 [209] __gnu_cxx::new_allocator<Coordinate>::allocate(unsigned long, void const*) [217] std::allocator_traits<std::allocator<Coordinate> >::deallocate(std::allocator<Coordinate>&, Coordinate*, unsigned long) [109] DisaggregatedScore* std::__uninitialized_move_if_noexcept_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  [54] void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&) [74] void std::allocator_traits<std::allocator<Coordinate> >::destroy<Coordinate>(std::allocator<Coordinate>&, Coordinate*) [200] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  [49] void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&) [218] std::allocator_traits<std::allocator<Coordinate> >::allocate(std::allocator<Coordinate>&, unsigned long) [181] unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
  [82] __gnu_cxx::new_allocator<Coordinate>::new_allocator(__gnu_cxx::new_allocator<Coordinate> const&) [192] std::allocator_traits<std::allocator<Coordinate> >::max_size(std::allocator<Coordinate> const&) [157] std::__lg(long)
 [254] __gnu_cxx::new_allocator<Coordinate>::new_allocator() [34] void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [103] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > std::copy<__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > >(__gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >)
 [255] __gnu_cxx::new_allocator<Coordinate>::~new_allocator() [45] void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&) [84] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [239] __gnu_cxx::new_allocator<DisaggregatedScore>::deallocate(DisaggregatedScore*, unsigned long) [247] std::allocator_traits<std::allocator<DisaggregatedScore> >::deallocate(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, unsigned long) [274] std::remove_reference<Coordinate&>::type&& std::move<Coordinate&>(Coordinate&)
 [133] void __gnu_cxx::new_allocator<DisaggregatedScore>::destroy<DisaggregatedScore>(DisaggregatedScore*) [68] void std::allocator_traits<std::allocator<DisaggregatedScore> >::destroy<DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*) [315] std::remove_reference<DisaggregatedScore&>::type&& std::move<DisaggregatedScore&>(DisaggregatedScore&)
 [240] __gnu_cxx::new_allocator<DisaggregatedScore>::allocate(unsigned long, void const*) [248] std::allocator_traits<std::allocator<DisaggregatedScore> >::allocate(std::allocator<DisaggregatedScore>&, unsigned long) [146] std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>(std::remove_reference&&)
 [110] void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&) [219] std::allocator_traits<std::allocator<DisaggregatedScore> >::max_size(std::allocator<DisaggregatedScore> const&) [147] std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>(std::remove_reference&&)
 [123] void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&) [111] void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [141] std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&)
 [291] __gnu_cxx::new_allocator<DisaggregatedScore>::new_allocator() [124] void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&) [142] std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&)
 [292] __gnu_cxx::new_allocator<DisaggregatedScore>::~new_allocator() [249] std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [132] std::remove_reference<int&>::type&& std::move<int&>(int&)
 [241] __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [105] void std::allocator_traits<std::allocator<int> >::destroy<int>(std::allocator<int>&, int*) [177] std::setw(int)
 [104] void __gnu_cxx::new_allocator<int>::destroy<int>(int*) [250] std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [96] void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2})
 [242] __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [220] std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [70] void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1})
  [86] void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [57] void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [148] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&)
 [293] __gnu_cxx::new_allocator<int>::new_allocator() [152] int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [97] void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [294] __gnu_cxx::new_allocator<int>::~new_allocator() [83] int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*) [71] void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  [27] __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&) [193] std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&) [235] Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&)
  [67] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&) [194] std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [253] DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&)
 [251] __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore const* const&) [42] void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [63] Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&)
 [252] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [195] std::vector<Coordinate, std::allocator<Coordinate> >::_S_do_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&, std::integral_constant<bool, true>) [131] DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&)
  [77] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [196] std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate() [80] int&& std::forward<int>(std::remove_reference<int>::type&)
 [143] __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#2}>&&) [117] void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [275] void std::_Destroy<Coordinate*>(Coordinate*, Coordinate*)
 [138] bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int, int*>(int&, int*) [44] void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [276] void std::_Destroy<Coordinate*, Coordinate>(Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  [91] __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#1}>&&) [197] std::vector<Coordinate, std::allocator<Coordinate> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [316] void std::_Destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*)
  [90] bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int, int*>(int&, int*) [26] std::vector<Coordinate, std::allocator<Coordinate> >::end() [317] void std::_Destroy<DisaggregatedScore*, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
 [164] __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Iter_comp_iter({lambda(int, int)#2}) [13] std::vector<Coordinate, std::allocator<Coordinate> >::back() [318] void std::_Destroy<int*>(int*, int*)
 [139] bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [118] std::vector<Coordinate, std::allocator<Coordinate> >::begin() [319] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [168] __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Iter_comp_iter({lambda(int, int)#1}) [31] std::vector<Coordinate, std::allocator<Coordinate> >::pop_back() [149] void std::iter_swap<int*, int*>(int*, int*)
 [140] bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [43] std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&) [172] std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
 [144] __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [22] std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [171] std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  [92] __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [272] std::vector<Coordinate, std::allocator<Coordinate> >::vector() [173] std::operator~(std::_Ios_Fmtflags)
 [165] __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter) [273] std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [174] std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
 [169] __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter) [137] std::vector<Coordinate, std::allocator<Coordinate> >::operator[](unsigned long) [175] std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
 [210] __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&) [221] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&) [134] order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}::operator()(int, int) const
 [243] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&) [222] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [135] order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}::operator()(int, int) const
 [244] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [112] void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [204] print_board(Board const*)::{lambda()#1}::operator()() const
 [183] __gnu_cxx::new_allocator<Coordinate>::max_size() const [223] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_do_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&, std::integral_constant<bool, true>) [58] add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const
 [202] __gnu_cxx::new_allocator<DisaggregatedScore>::max_size() const [224] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate() [201] print_board_fancy(Board const*)::{lambda(int const (*) [8][8], int)#3}::operator()(int const (*) [8][8], int) const
 [203] __gnu_cxx::new_allocator<int>::max_size() const [76] void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [178] print_board_fancy(Board const*)::{lambda(char const*, int)#1}::operator()(char const*, int) const
 [180] __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const [114] void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [89] operator new(unsigned long, void*)
  [53] __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator*() const [225] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [2] <cycle 1>
  [21] __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator-(long) const [38] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end()
