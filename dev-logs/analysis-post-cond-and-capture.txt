Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 18.61      0.67     0.67  8143330     0.00     0.00  update_xrays_by_piece(Board*, Coordinate, Piece, bool)
 18.34      1.33     0.66  5782584     0.00     0.00  update_xrays_by_pawn(Board*, Coordinate, Piece, bool)
 15.28      1.88     0.55 15841920     0.00     0.00  update_weak_squares(Board*, Color, int)
  3.89      2.02     0.14 14332506     0.00     0.00  change_piece(Board*, Coordinate, Piece, bool)
  2.92      2.13     0.11 88280303     0.00     0.00  get_piece(Board const*, Coordinate)
  2.78      2.23     0.10   385869     0.00     0.00  generate_moves(Board const*, MoveList*, bool)
  2.50      2.32     0.09  8549922     0.00     0.00  update_king_attacks(Board*, Coordinate, Color, bool)
  2.50      2.41     0.09  7166254     0.00     0.00  add_eval_diff(Board*, Coordinate, Piece, bool)
  1.94      2.48     0.07 82204128     0.00     0.00  is_valid(Coordinate)
  1.67      2.54     0.06 40469502     0.00     0.00  add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool)
  1.67      2.60     0.06 24836584     0.00     0.00  quintant_from(Coordinate)
  1.39      2.65     0.05   690676     0.00     0.00  generate_knight_moves(Board const*, MoveList*, Coordinate, bool)
  1.39      2.70     0.05   392539     0.00     0.01  get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000])
  1.25      2.74     0.05 29774101     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::end()
  1.25      2.79     0.05 29774091     0.00     0.00  __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator-(long) const
  1.25      2.83     0.05 29774091     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::back()
  1.11      2.87     0.04  3212982     0.00     0.00  apply_move(Board*, Move)
  0.97      2.91     0.04 13446162     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const
  0.97      2.94     0.04  3212982     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&)
  0.83      2.97     0.03        2    15.00    15.00  void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&)
  0.83      3.00     0.03 62082080     0.00     0.00  max_ray_len(int, int, int, int)
  0.83      3.03     0.03 59548202     0.00     0.00  __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&)
  0.83      3.06     0.03  6721419     0.00     0.00  piece_equals(Piece, Piece)
  0.83      3.09     0.03  3005478     0.00     0.00  generate_pawn_moves(Board const*, MoveList*, Coordinate, bool)
  0.56      3.11     0.02 68245664     0.00     0.00  flip_color(Color)
  0.56      3.13     0.02 13446167     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end()
  0.56      3.15     0.02 12851936     0.00     0.00  Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&)
  0.56      3.17     0.02  9016434     0.00     0.00  add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool)
  0.56      3.19     0.02  6425962     0.00     0.00  void __gnu_cxx::new_allocator<Coordinate>::destroy<Coordinate>(Coordinate*)
  0.56      3.21     0.02  6425962     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::pop_back()
  0.56      3.23     0.02  5962128     0.00     0.00  generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate, bool)
  0.56      3.25     0.02  3212983     0.00     0.00  void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
  0.56      3.27     0.02  3212982     0.00     0.00  void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&)
  0.56      3.29     0.02   771090     0.00     0.00  generate_rook_moves(Board const*, MoveList*, Coordinate, bool)
  0.56      3.31     0.02        1    20.00    20.00  _GLOBAL__sub_I__Z10print_movePK5Board4Move
  0.42      3.33     0.02 13446162     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const
  0.42      3.34     0.02   383561     0.00     0.00  generate_king_moves(Board const*, MoveList*, Coordinate, bool)
  0.42      3.36     0.02   373558     0.00     0.00  generate_queen_moves(Board const*, MoveList*, Coordinate, bool)
  0.28      3.37     0.01 26892334     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&)
  0.28      3.38     0.01 13033568     0.00     0.00  parity(Coordinate)
  0.28      3.39     0.01 12851932     0.00     0.00  operator new(unsigned long, void*)
  0.28      3.40     0.01  6425962     0.00     0.00  void std::allocator_traits<std::allocator<Coordinate> >::destroy<Coordinate>(std::allocator<Coordinate>&, Coordinate*)
  0.28      3.41     0.01  6279908     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const
  0.28      3.42     0.01  6279908     0.00     0.00  std::vector<int, std::allocator<int> >::back()
  0.28      3.43     0.01  5782584     0.00     0.00  update_least_advanced(Board*, Color, int)
  0.28      3.44     0.01  5501643     0.00     0.00  kronecker_piece(Board const*, Coordinate, Piece)
  0.28      3.45     0.01  5176252     0.00     0.00  std::remove_reference<int&>::type&& std::move<int&>(int&)
  0.28      3.46     0.01  3212983     0.00     0.00  void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&)
  0.28      3.47     0.01  3212981     0.00     0.00  undo_move(Board*, Move)
  0.28      3.48     0.01  3212981     0.00     0.00  std::vector<int, std::allocator<int> >::pop_back()
  0.28      3.49     0.01  3066926     0.00     0.00  score_total(DisaggregatedScore)
  0.28      3.50     0.01   891017     0.00     0.00  order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}::operator()(int, int) const
  0.28      3.51     0.01   586680     0.00     0.00  stable_eval(Board*, int, int, int)
  0.28      3.52     0.01    14983     0.00     0.00  int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.28      3.53     0.01    13746     0.00     0.03  order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])
  0.28      3.54     0.01     6032     0.00     0.00  void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.28      3.55     0.01     6032     0.00     0.01  void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1})
  0.28      3.56     0.01        8     1.25     1.25  void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&)
  0.28      3.57     0.01        5     2.00     2.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long)
  0.28      3.58     0.01                             int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
  0.14      3.58     0.01  9638954     0.00     0.00  int&& std::forward<int>(std::remove_reference<int>::type&)
  0.14      3.59     0.01  3212982     0.00     0.00  is_irreversible(Move, Piece)
  0.14      3.59     0.01        4     1.25     3.25  void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&)
  0.14      3.60     0.01        2     2.50    17.50  void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&)
  0.14      3.60     0.01                             __gnu_cxx::new_allocator<Coordinate>::new_allocator(__gnu_cxx::new_allocator<Coordinate> const&)
  0.00      3.60     0.00 29774091     0.00     0.00  __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator*() const
  0.00      3.60     0.00 13446162     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back()
  0.00      3.60     0.00 12559826     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
  0.00      3.60     0.00  9827754     0.00     0.00  is_capture(Move)
  0.00      3.60     0.00  6425968     0.00     0.00  DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&)
  0.00      3.60     0.00  6425964     0.00     0.00  void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&)
  0.00      3.60     0.00  6425964     0.00     0.00  void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&)
  0.00      3.60     0.00  6425964     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&)
  0.00      3.60     0.00  6279913     0.00     0.00  std::vector<int, std::allocator<int> >::end()
  0.00      3.60     0.00  6279908     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const
  0.00      3.60     0.00  3212983     0.00     0.00  void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&)
  0.00      3.60     0.00  3212983     0.00     0.00  std::vector<int, std::allocator<int> >::push_back(int&&)
  0.00      3.60     0.00  3212982     0.00     0.00  void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&)
  0.00      3.60     0.00  3212981     0.00     0.00  void __gnu_cxx::new_allocator<DisaggregatedScore>::destroy<DisaggregatedScore>(DisaggregatedScore*)
  0.00      3.60     0.00  3212981     0.00     0.00  void __gnu_cxx::new_allocator<int>::destroy<int>(int*)
  0.00      3.60     0.00  3212981     0.00     0.00  void std::allocator_traits<std::allocator<DisaggregatedScore> >::destroy<DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*)
  0.00      3.60     0.00  3212981     0.00     0.00  void std::allocator_traits<std::allocator<int> >::destroy<int>(std::allocator<int>&, int*)
  0.00      3.60     0.00  3212981     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::pop_back()
  0.00      3.60     0.00  3066926     0.00     0.00  evaluate(Board*)
  0.00      3.60     0.00  1219776     0.00     0.00  add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const
  0.00      3.60     0.00  1150433     0.00     0.00  order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}::operator()(int, int) const
  0.00      3.60     0.00   737765     0.00     0.00  generate_bishop_moves(Board const*, MoveList*, Coordinate, bool)
  0.00      3.60     0.00   615373     0.00     0.00  bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int, int*>(int&, int*)
  0.00      3.60     0.00   535060     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator())
  0.00      3.60     0.00   490956     0.00     0.00  bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int, int*>(int&, int*)
  0.00      3.60     0.00   400061     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator())
  0.00      3.60     0.00   259504     0.00     0.00  shallow_greedy_move(Board*, Move*)
  0.00      3.60     0.00   210784     0.00     0.00  std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&)
  0.00      3.60     0.00   203336     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::size() const
  0.00      3.60     0.00   203296     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::operator[](unsigned long)
  0.00      3.60     0.00   195356     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#2}>&&)
  0.00      3.60     0.00   195356     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>)
  0.00      3.60     0.00   195356     0.00     0.00  void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00      3.60     0.00   195356     0.00     0.00  std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>(std::remove_reference&&)
  0.00      3.60     0.00   167395     0.00     0.00  std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&)
  0.00      3.60     0.00   155331     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#1}>&&)
  0.00      3.60     0.00   155331     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>)
  0.00      3.60     0.00   155331     0.00     0.00  void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00      3.60     0.00   155331     0.00     0.00  std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>(std::remove_reference&&)
  0.00      3.60     0.00   150015     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&)
  0.00      3.60     0.00   150015     0.00     0.00  void std::iter_swap<int*, int*>(int*, int*)
  0.00      3.60     0.00    84342     0.00     0.00  int* std::__niter_base<int*>(int*)
  0.00      3.60     0.00    56208     0.00     0.00  int* std::__miter_base<int*>(int*)
  0.00      3.60     0.00    28104     0.00     0.00  int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*)
  0.00      3.60     0.00    28104     0.00     0.00  int* std::__niter_wrap<int*>(int* const&, int*)
  0.00      3.60     0.00    28104     0.00     0.00  int* std::move_backward<int*, int*>(int*, int*, int*)
  0.00      3.60     0.00    28104     0.00     0.00  int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
  0.00      3.60     0.00    28104     0.00     0.00  int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*)
  0.00      3.60     0.00    14983     0.00     0.00  int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00      3.60     0.00    14983     0.00     0.00  void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00      3.60     0.00    13746     0.00     0.00  std::__lg(long)
  0.00      3.60     0.00    10846     0.00     0.00  int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00      3.60     0.00    10846     0.00     0.00  void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00      3.60     0.00    10846     0.00     0.00  int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00      3.60     0.00     7714     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Iter_comp_iter({lambda(int, int)#2})
  0.00      3.60     0.00     7714     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter)
  0.00      3.60     0.00     7714     0.00     0.00  void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00      3.60     0.00     7714     0.00     0.00  void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00      3.60     0.00     7714     0.00     0.00  void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00      3.60     0.00     7714     0.00     0.00  void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00      3.60     0.00     7714     0.00     0.00  void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2})
  0.00      3.60     0.00     7714     0.00     0.00  void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  0.00      3.60     0.00     6032     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Iter_comp_iter({lambda(int, int)#1})
  0.00      3.60     0.00     6032     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter)
  0.00      3.60     0.00     6032     0.00     0.00  void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00      3.60     0.00     6032     0.00     0.00  void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00      3.60     0.00     6032     0.00     0.00  void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00      3.60     0.00     6032     0.00     0.00  void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  0.00      3.60     0.00     3375     0.00     0.00  std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  0.00      3.60     0.00     1704     0.00     0.00  std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
  0.00      3.60     0.00     1704     0.00     0.00  std::operator~(std::_Ios_Fmtflags)
  0.00      3.60     0.00     1677     0.00     0.00  std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
  0.00      3.60     0.00     1677     0.00     0.00  std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  0.00      3.60     0.00     1671     0.00     0.00  std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  0.00      3.60     0.00     1671     0.00     0.00  std::setw(int)
  0.00      3.60     0.00      850     0.00     0.00  print_move(Board const*, Move)
  0.00      3.60     0.00      256     0.00     0.00  print_board_fancy(Board const*)::{lambda(char const*, int)#1}::operator()(char const*, int) const
  0.00      3.60     0.00       60     0.00     0.00  Coordinate* std::__niter_base<Coordinate*>(Coordinate*)
  0.00      3.60     0.00       40     0.00     0.00  __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const
  0.00      3.60     0.00       40     0.00     0.00  unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      3.60     0.00       33     0.00     0.00  std::ios_base::unsetf(std::_Ios_Fmtflags)
  0.00      3.60     0.00       30     0.00     0.00  __gnu_cxx::new_allocator<Coordinate>::max_size() const
  0.00      3.60     0.00       30     0.00     0.00  DisaggregatedScore* std::__niter_base<DisaggregatedScore*>(DisaggregatedScore*)
  0.00      3.60     0.00       22     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator()
  0.00      3.60     0.00       20     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const
  0.00      3.60     0.00       20     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
  0.00      3.60     0.00       20     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() const
  0.00      3.60     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const
  0.00      3.60     0.00       20     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::size() const
  0.00      3.60     0.00       20     0.00     0.00  std::vector<int, std::allocator<int> >::size() const
  0.00      3.60     0.00       20     0.00     0.00  std::allocator_traits<std::allocator<Coordinate> >::max_size(std::allocator<Coordinate> const&)
  0.00      3.60     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&)
  0.00      3.60     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  0.00      3.60     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_S_do_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&, std::integral_constant<bool, true>)
  0.00      3.60     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate()
  0.00      3.60     0.00       20     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_S_nothrow_relocate(std::integral_constant<bool, true>)
  0.00      3.60     0.00       20     0.00     0.00  Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  0.00      3.60     0.00       20     0.00     0.00  std::enable_if<std::__is_bitwise_relocatable<Coordinate, void>::value, Coordinate*>::type std::__relocate_a_1<Coordinate, Coordinate>(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  0.00      3.60     0.00       20     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      3.60     0.00       16     0.00     0.00  print_board_fancy(Board const*)::{lambda(int const (*) [8][8], int)#3}::operator()(int const (*) [8][8], int) const
  0.00      3.60     0.00       15     0.00     0.00  __gnu_cxx::new_allocator<DisaggregatedScore>::max_size() const
  0.00      3.60     0.00       15     0.00     0.00  __gnu_cxx::new_allocator<int>::max_size() const
  0.00      3.60     0.00       14     0.00     0.00  print_board(Board const*)::{lambda()#1}::operator()() const
  0.00      3.60     0.00       12     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long)
  0.00      3.60     0.00       11     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator()
  0.00      3.60     0.00       11     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00      3.60     0.00       10     0.00     0.00  __gnu_cxx::new_allocator<Coordinate>::deallocate(Coordinate*, unsigned long)
  0.00      3.60     0.00       10     0.00     0.00  __gnu_cxx::new_allocator<Coordinate>::allocate(unsigned long, void const*)
  0.00      3.60     0.00       10     0.00     0.00  __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&)
  0.00      3.60     0.00       10     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() const
  0.00      3.60     0.00       10     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.00      3.60     0.00       10     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const
  0.00      3.60     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const
  0.00      3.60     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::max_size() const
  0.00      3.60     0.00       10     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long)
  0.00      3.60     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<Coordinate> >::deallocate(std::allocator<Coordinate>&, Coordinate*, unsigned long)
  0.00      3.60     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<Coordinate> >::allocate(std::allocator<Coordinate>&, unsigned long)
  0.00      3.60     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<DisaggregatedScore> >::max_size(std::allocator<DisaggregatedScore> const&)
  0.00      3.60     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
  0.00      3.60     0.00       10     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::begin()
  0.00      3.60     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&)
  0.00      3.60     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.00      3.60     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_do_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&, std::integral_constant<bool, true>)
  0.00      3.60     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate()
  0.00      3.60     0.00       10     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_nothrow_relocate(std::integral_constant<bool, true>)
  0.00      3.60     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)
  0.00      3.60     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&)
  0.00      3.60     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>)
  0.00      3.60     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::_S_use_relocate()
  0.00      3.60     0.00       10     0.00     0.00  std::vector<int, std::allocator<int> >::_S_nothrow_relocate(std::integral_constant<bool, true>)
  0.00      3.60     0.00       10     0.00     0.00  DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.00      3.60     0.00       10     0.00     0.00  int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
  0.00      3.60     0.00       10     0.00     0.00  std::enable_if<std::__is_bitwise_relocatable<DisaggregatedScore, void>::value, DisaggregatedScore*>::type std::__relocate_a_1<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.00      3.60     0.00       10     0.00     0.00  std::enable_if<std::__is_bitwise_relocatable<int, void>::value, int*>::type std::__relocate_a_1<int, int>(int*, int*, int*, std::allocator<int>&)
  0.00      3.60     0.00        8     0.00     0.00  Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&)
  0.00      3.60     0.00        6     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long)
  0.00      3.60     0.00        6     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00      3.60     0.00        6     0.00     0.00  std::ios_base::setf(std::_Ios_Fmtflags)
  0.00      3.60     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<DisaggregatedScore>::deallocate(DisaggregatedScore*, unsigned long)
  0.00      3.60     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<DisaggregatedScore>::allocate(unsigned long, void const*)
  0.00      3.60     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
  0.00      3.60     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
  0.00      3.60     0.00        5     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&)
  0.00      3.60     0.00        5     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00      3.60     0.00        5     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const
  0.00      3.60     0.00        5     0.00     0.00  std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
  0.00      3.60     0.00        5     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
  0.00      3.60     0.00        5     0.00     0.00  std::allocator_traits<std::allocator<DisaggregatedScore> >::deallocate(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, unsigned long)
  0.00      3.60     0.00        5     0.00     0.00  std::allocator_traits<std::allocator<DisaggregatedScore> >::allocate(std::allocator<DisaggregatedScore>&, unsigned long)
  0.00      3.60     0.00        5     0.00     0.00  std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)
  0.00      3.60     0.00        5     0.00     0.00  std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)
  0.00      3.60     0.00        5     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin()
  0.00      3.60     0.00        5     0.00     0.00  void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)
  0.00      3.60     0.00        5     0.00     0.00  std::vector<int, std::allocator<int> >::begin()
  0.00      3.60     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore const* const&)
  0.00      3.60     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
  0.00      3.60     0.00        4     0.00     0.00  DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&)
  0.00      3.60     0.00        2     0.00     0.00  apply_null(Board*)
  0.00      3.60     0.00        2     0.00     0.00  undo_null(Board*)
  0.00      3.60     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Coordinate>::new_allocator()
  0.00      3.60     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Coordinate>::~new_allocator()
  0.00      3.60     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const
  0.00      3.60     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const
  0.00      3.60     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator*() const
  0.00      3.60     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator-(long) const
  0.00      3.60     0.00        2     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() const
  0.00      3.60     0.00        2     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const
  0.00      3.60     0.00        2     0.00     0.00  std::vector<int, std::allocator<int> >::end() const
  0.00      3.60     0.00        2     0.00     0.00  std::vector<int, std::allocator<int> >::back() const
  0.00      3.60     0.00        2     0.00     0.00  std::allocator<Coordinate>::allocator()
  0.00      3.60     0.00        2     0.00     0.00  std::allocator<Coordinate>::~allocator()
  0.00      3.60     0.00        2     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Coordinate*>(Coordinate*, Coordinate*)
  0.00      3.60     0.00        2     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl()
  0.00      3.60     0.00        2     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::~_Vector_impl()
  0.00      3.60     0.00        2     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl_data::_Vector_impl_data()
  0.00      3.60     0.00        2     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_base()
  0.00      3.60     0.00        2     0.00     0.00  std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base()
  0.00      3.60     0.00        2     0.00    17.50  void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&)
  0.00      3.60     0.00        2     0.00    17.50  void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&)
  0.00      3.60     0.00        2     0.00    17.50  std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&)
  0.00      3.60     0.00        2     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::vector()
  0.00      3.60     0.00        2     0.00     0.00  std::vector<Coordinate, std::allocator<Coordinate> >::~vector()
  0.00      3.60     0.00        2     0.00     0.00  std::remove_reference<Coordinate&>::type&& std::move<Coordinate&>(Coordinate&)
  0.00      3.60     0.00        2     0.00     0.00  void std::_Destroy<Coordinate*>(Coordinate*, Coordinate*)
  0.00      3.60     0.00        2     0.00     0.00  void std::_Destroy<Coordinate*, Coordinate>(Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  0.00      3.60     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z10copy_board5Board
  0.00      3.60     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z11score_total18DisaggregatedScore
  0.00      3.60     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z13get_best_moveP5BoardiiibbiPA10000_8PVRecord
  0.00      3.60     0.00        1     0.00     0.00  _GLOBAL__sub_I_pv_table
  0.00      3.60     0.00        1     0.00    37.00  init_board(Board*)
  0.00      3.60     0.00        1     0.00     0.00  zero_table(PVRecord (*) [10000])
  0.00      3.60     0.00        1     0.00     0.00  print_board(Board const*)
  0.00      3.60     0.00        1     0.00     0.00  print_board_fancy(Board const*)
  0.00      3.60     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      3.60     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      3.60     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      3.60     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      3.60     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      3.60     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      3.60     0.00        1     0.00     0.00  print_pv(Board*, int, int, PVRecord (*) [10000])
  0.00      3.60     0.00        1     0.00     0.00  Board::Board()
  0.00      3.60     0.00        1     0.00     0.00  Board::~Board()
  0.00      3.60     0.00        1     0.00     0.00  void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&)
  0.00      3.60     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<DisaggregatedScore>::new_allocator()
  0.00      3.60     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<DisaggregatedScore>::~new_allocator()
  0.00      3.60     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00      3.60     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      3.60     0.00        1     0.00     0.00  std::allocator<DisaggregatedScore>::allocator()
  0.00      3.60     0.00        1     0.00     0.00  std::allocator<DisaggregatedScore>::~allocator()
  0.00      3.60     0.00        1     0.00     0.00  std::allocator<int>::allocator()
  0.00      3.60     0.00        1     0.00     0.00  std::allocator<int>::~allocator()
  0.00      3.60     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*)
  0.00      3.60     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00      3.60     0.00        1     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl()
  0.00      3.60     0.00        1     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::~_Vector_impl()
  0.00      3.60     0.00        1     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl_data::_Vector_impl_data()
  0.00      3.60     0.00        1     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_base()
  0.00      3.60     0.00        1     0.00     0.00  std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base()
  0.00      3.60     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00      3.60     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00      3.60     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data()
  0.00      3.60     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00      3.60     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00      3.60     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&)
  0.00      3.60     0.00        1     0.00     2.00  void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&)
  0.00      3.60     0.00        1     0.00     2.00  void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&)
  0.00      3.60     0.00        1     0.00     2.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&)
  0.00      3.60     0.00        1     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::vector()
  0.00      3.60     0.00        1     0.00     0.00  std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector()
  0.00      3.60     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00      3.60     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00      3.60     0.00        1     0.00     0.00  std::remove_reference<DisaggregatedScore&>::type&& std::move<DisaggregatedScore&>(DisaggregatedScore&)
  0.00      3.60     0.00        1     0.00     0.00  void std::_Destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*)
  0.00      3.60     0.00        1     0.00     0.00  void std::_Destroy<DisaggregatedScore*, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  0.00      3.60     0.00        1     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00      3.60     0.00        1     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.28% of 3.60 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.0    0.00    3.57                 main [1]
                0.06    3.47       2/2           get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.00    0.04       1/1           init_board(Board*) [39]
                0.00    0.00       1/1           print_pv(Board*, int, int, PVRecord (*) [10000]) [108]
                0.00    0.00       1/3212982     apply_move(Board*, Move) [5]
                0.00    0.00       2/1671        std::setw(int) [165]
                0.00    0.00       1/1           Board::Board() [280]
                0.00    0.00       1/1           zero_table(PVRecord (*) [10000]) [271]
                0.00    0.00       1/1           print_board_fancy(Board const*) [273]
                0.00    0.00       1/1           print_board(Board const*) [272]
                0.00    0.00       1/1           Board::~Board() [281]
-----------------------------------------------
[2]     98.0    0.06    3.47       2+406283  <cycle 1 as a whole> [2]
                0.05    3.07  392539+2205323     get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.01    0.40   13746             order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [13]
-----------------------------------------------
                             2205323             get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                              392537             order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [13]
                0.06    3.47       2/2           main [1]
[3]     86.6    0.05    3.07  392539+2205323 get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.03    1.11 2205321/3212982     apply_move(Board*, Move) [5]
                0.01    0.89  586680/586680      stable_eval(Board*, int, int, int) [7]
                0.01    0.86 2205321/3212981     undo_move(Board*, Move) [6]
                0.03    0.12  126365/385869      generate_moves(Board const*, MoveList*, bool) [12]
                0.00    0.02 1865127/3066926     evaluate(Board*) [36]
                0.00    0.00     846/850         print_move(Board const*, Move) [109]
                0.00    0.00       2/2           apply_null(Board*) [115]
                0.00    0.00       2/2           undo_null(Board*) [116]
                0.00    0.00    1664/1671        std::setw(int) [165]
                0.00    0.00      38/9827754     is_capture(Move) [125]
                               13746             order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [13]
                             2205323             get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
-----------------------------------------------
                0.07    1.11 7166252/14332506     undo_move(Board*, Move) [6]
                0.07    1.11 7166254/14332506     apply_move(Board*, Move) [5]
[4]     65.7    0.14    2.22 14332506         change_piece(Board*, Coordinate, Piece, bool) [4]
                0.67    0.04 8143330/8143330     update_xrays_by_piece(Board*, Coordinate, Piece, bool) [8]
                0.66    0.02 5782584/5782584     update_xrays_by_pawn(Board*, Coordinate, Piece, bool) [10]
                0.55    0.00 15841920/15841920     update_weak_squares(Board*, Color, int) [11]
                0.09    0.00 8549922/8549922     update_king_attacks(Board*, Coordinate, Color, bool) [19]
                0.02    0.07 16286660/29774091     std::vector<Coordinate, std::allocator<Coordinate> >::back() [16]
                0.01    0.04 5782584/5782584     update_least_advanced(Board*, Color, int) [28]
                0.04    0.00 16286660/24836584     quintant_from(Coordinate) [25]
                0.01    0.00 7962430/13033568     parity(Coordinate) [75]
                0.00    0.00 14332506/68245664     flip_color(Color) [62]
-----------------------------------------------
                0.00    0.00       1/3212982     main [1]
                0.00    0.00       4/3212982     print_pv(Board*, int, int, PVRecord (*) [10000]) [108]
                0.00    0.09  188771/3212982     stable_eval(Board*, int, int, int) [7]
                0.00    0.20  392537/3212982     order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [13]
                0.01    0.21  426348/3212982     shallow_greedy_move(Board*, Move*) [9]
                0.03    1.11 2205321/3212982     get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[5]     45.9    0.04    1.61 3212982         apply_move(Board*, Move) [5]
                0.07    1.11 7166254/14332506     change_piece(Board*, Coordinate, Piece, bool) [4]
                0.09    0.11 7166254/7166254     add_eval_diff(Board*, Coordinate, Piece, bool) [15]
                0.04    0.04 3212982/3212982     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&) [23]
                0.00    0.04 3212982/3212983     std::vector<int, std::allocator<int> >::push_back(int&&) [31]
                0.01    0.03 6524473/29774091     std::vector<Coordinate, std::allocator<Coordinate> >::back() [16]
                0.00    0.04 6425964/6425964     std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [40]
                0.00    0.02 3212982/13446162     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [21]
                0.01    0.01 3212982/6279908     std::vector<int, std::allocator<int> >::back() [59]
                0.01    0.00 3212982/3212982     is_irreversible(Move, Piece) [88]
                0.00    0.00 3212982/88280303     get_piece(Board const*, Coordinate) [18]
                0.00    0.00 3212982/68245664     flip_color(Color) [62]
                0.00    0.00 3212982/9827754     is_capture(Move) [125]
-----------------------------------------------
                0.00    0.00       4/3212981     print_pv(Board*, int, int, PVRecord (*) [10000]) [108]
                0.00    0.07  188771/3212981     stable_eval(Board*, int, int, int) [7]
                0.00    0.15  392537/3212981     order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [13]
                0.00    0.17  426348/3212981     shallow_greedy_move(Board*, Move*) [9]
                0.01    0.86 2205321/3212981     get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[6]     34.9    0.01    1.25 3212981         undo_move(Board*, Move) [6]
                0.07    1.11 7166252/14332506     change_piece(Board*, Coordinate, Piece, bool) [4]
                0.02    0.03 6425962/6425962     std::vector<Coordinate, std::allocator<Coordinate> >::pop_back() [29]
                0.01    0.00 3212981/3212981     std::vector<int, std::allocator<int> >::pop_back() [79]
                0.00    0.00 3212981/88280303     get_piece(Board const*, Coordinate) [18]
                0.00    0.00 3212981/68245664     flip_color(Color) [62]
                0.00    0.00 3212981/3212981     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::pop_back() [133]
                0.00    0.00 3212981/9827754     is_capture(Move) [125]
-----------------------------------------------
                              188771             stable_eval(Board*, int, int, int) [7]
                0.01    0.89  586680/586680      get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[7]     24.9    0.01    0.89  586680+188771  stable_eval(Board*, int, int, int) [7]
                0.00    0.71  259504/259504      shallow_greedy_move(Board*, Move*) [9]
                0.00    0.09  188771/3212982     apply_move(Board*, Move) [5]
                0.00    0.07  188771/3212981     undo_move(Board*, Move) [6]
                0.00    0.01  775451/3066926     evaluate(Board*) [36]
                0.00    0.00  188771/9827754     is_capture(Move) [125]
                              188771             stable_eval(Board*, int, int, int) [7]
-----------------------------------------------
                0.67    0.04 8143330/8143330     change_piece(Board*, Coordinate, Piece, bool) [4]
[8]     19.7    0.67    0.04 8143330         update_xrays_by_piece(Board*, Coordinate, Piece, bool) [8]
                0.03    0.00 32718192/82204128     is_valid(Coordinate) [24]
                0.01    0.00 21352912/62082080     max_ray_len(int, int, int, int) [47]
                0.00    0.00 8143330/68245664     flip_color(Color) [62]
-----------------------------------------------
                0.00    0.71  259504/259504      stable_eval(Board*, int, int, int) [7]
[9]     19.6    0.00    0.71  259504         shallow_greedy_move(Board*, Move*) [9]
                0.07    0.25  259504/385869      generate_moves(Board const*, MoveList*, bool) [12]
                0.01    0.21  426348/3212982     apply_move(Board*, Move) [5]
                0.00    0.17  426348/3212981     undo_move(Board*, Move) [6]
                0.00    0.01  426348/3066926     evaluate(Board*) [36]
-----------------------------------------------
                0.66    0.02 5782584/5782584     change_piece(Board*, Coordinate, Piece, bool) [4]
[10]    18.9    0.66    0.02 5782584         update_xrays_by_pawn(Board*, Coordinate, Piece, bool) [10]
                0.02    0.00 40729168/62082080     max_ray_len(int, int, int, int) [47]
-----------------------------------------------
                0.55    0.00 15841920/15841920     change_piece(Board*, Coordinate, Piece, bool) [4]
[11]    15.3    0.55    0.00 15841920         update_weak_squares(Board*, Color, int) [11]
-----------------------------------------------
                0.03    0.12  126365/385869      get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.07    0.25  259504/385869      shallow_greedy_move(Board*, Move*) [9]
[12]    13.0    0.10    0.37  385869         generate_moves(Board const*, MoveList*, bool) [12]
                0.02    0.32 5962128/5962128     generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate, bool) [14]
                0.03    0.00 24695616/88280303     get_piece(Board const*, Coordinate) [18]
-----------------------------------------------
                               13746             get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[13]    11.4    0.01    0.40   13746         order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [13]
                0.00    0.20  392537/3212982     apply_move(Board*, Move) [5]
                0.00    0.15  392537/3212981     undo_move(Board*, Move) [6]
                0.01    0.02    6032/6032        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}) [45]
                0.00    0.01    7714/7714        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}) [69]
                              392537             get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
-----------------------------------------------
                0.02    0.32 5962128/5962128     generate_moves(Board const*, MoveList*, bool) [12]
[14]     9.4    0.02    0.32 5962128         generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate, bool) [14]
                0.05    0.04  690676/690676      generate_knight_moves(Board const*, MoveList*, Coordinate, bool) [20]
                0.03    0.05 3005478/3005478     generate_pawn_moves(Board const*, MoveList*, Coordinate, bool) [22]
                0.02    0.02  771090/771090      generate_rook_moves(Board const*, MoveList*, Coordinate, bool) [30]
                0.02    0.03  373558/373558      generate_queen_moves(Board const*, MoveList*, Coordinate, bool) [33]
                0.02    0.02  383561/383561      generate_king_moves(Board const*, MoveList*, Coordinate, bool) [37]
                0.00    0.03  737765/737765      generate_bishop_moves(Board const*, MoveList*, Coordinate, bool) [51]
-----------------------------------------------
                0.09    0.11 7166254/7166254     apply_move(Board*, Move) [5]
[15]     5.7    0.09    0.11 7166254         add_eval_diff(Board*, Coordinate, Piece, bool) [15]
                0.00    0.04 7166254/13446162     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [21]
                0.01    0.03 6962958/29774091     std::vector<Coordinate, std::allocator<Coordinate> >::back() [16]
                0.02    0.00 8549924/24836584     quintant_from(Coordinate) [25]
                0.00    0.01 1219776/1219776     add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const [84]
                0.00    0.00 5071138/13033568     parity(Coordinate) [75]
                0.00    0.00 7166254/68245664     flip_color(Color) [62]
                0.00    0.00  203296/203336      std::vector<Coordinate, std::allocator<Coordinate> >::size() const [138]
                0.00    0.00  203296/203296      std::vector<Coordinate, std::allocator<Coordinate> >::operator[](unsigned long) [139]
-----------------------------------------------
                0.01    0.03 6524473/29774091     apply_move(Board*, Move) [5]
                0.01    0.03 6962958/29774091     add_eval_diff(Board*, Coordinate, Piece, bool) [15]
                0.02    0.07 16286660/29774091     change_piece(Board*, Coordinate, Piece, bool) [4]
[16]     4.6    0.05    0.12 29774091         std::vector<Coordinate, std::allocator<Coordinate> >::back() [16]
                0.05    0.02 29774091/29774091     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator-(long) const [27]
                0.05    0.02 29774091/29774101     std::vector<Coordinate, std::allocator<Coordinate> >::end() [26]
                0.00    0.00 29774091/29774091     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator*() const [123]
-----------------------------------------------
                0.00    0.00 2236818/40469502     generate_pawn_moves(Board const*, MoveList*, Coordinate, bool) [22]
                0.01    0.01 6136976/40469502     generate_king_moves(Board const*, MoveList*, Coordinate, bool) [37]
                0.01    0.01 6785035/40469502     generate_rook_moves(Board const*, MoveList*, Coordinate, bool) [30]
                0.01    0.01 6949985/40469502     generate_queen_moves(Board const*, MoveList*, Coordinate, bool) [33]
                0.01    0.01 7309872/40469502     generate_bishop_moves(Board const*, MoveList*, Coordinate, bool) [51]
                0.02    0.02 11050816/40469502     generate_knight_moves(Board const*, MoveList*, Coordinate, bool) [20]
[17]     4.0    0.06    0.08 40469502         add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool) [17]
                0.05    0.00 40469502/88280303     get_piece(Board const*, Coordinate) [18]
                0.03    0.00 40469502/82204128     is_valid(Coordinate) [24]
-----------------------------------------------
                0.00    0.00     850/88280303     print_move(Board const*, Move) [109]
                0.00    0.00 1219776/88280303     add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const [84]
                0.00    0.00 3212981/88280303     undo_move(Board*, Move) [6]
                0.00    0.00 3212982/88280303     apply_move(Board*, Move) [5]
                0.01    0.00 5501643/88280303     kronecker_piece(Board const*, Coordinate, Piece) [32]
                0.01    0.00 9966953/88280303     add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool) [35]
                0.03    0.00 24695616/88280303     generate_moves(Board const*, MoveList*, bool) [12]
                0.05    0.00 40469502/88280303     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool) [17]
[18]     2.9    0.11    0.00 88280303         get_piece(Board const*, Coordinate) [18]
-----------------------------------------------
                0.09    0.00 8549922/8549922     change_piece(Board*, Coordinate, Piece, bool) [4]
[19]     2.6    0.09    0.00 8549922         update_king_attacks(Board*, Coordinate, Color, bool) [19]
                0.00    0.00 8549922/68245664     flip_color(Color) [62]
-----------------------------------------------
                0.05    0.04  690676/690676      generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate, bool) [14]
[20]     2.5    0.05    0.04  690676         generate_knight_moves(Board const*, MoveList*, Coordinate, bool) [20]
                0.02    0.02 11050816/40469502     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool) [17]
                0.00    0.00 5525408/68245664     flip_color(Color) [62]
-----------------------------------------------
                0.00    0.02 3066926/13446162     evaluate(Board*) [36]
                0.00    0.02 3212982/13446162     apply_move(Board*, Move) [5]
                0.00    0.04 7166254/13446162     add_eval_diff(Board*, Coordinate, Piece, bool) [15]
[21]     2.2    0.00    0.08 13446162         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [21]
                0.04    0.01 13446162/13446162     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [34]
                0.02    0.01 13446162/13446167     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() [52]
                0.02    0.00 13446162/13446162     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [65]
-----------------------------------------------
                0.03    0.05 3005478/3005478     generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate, bool) [14]
[22]     2.2    0.03    0.05 3005478         generate_pawn_moves(Board const*, MoveList*, Coordinate, bool) [22]
                0.02    0.02 9016434/9016434     add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool) [35]
                0.00    0.00 2236818/40469502     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool) [17]
                0.00    0.00 6010956/68245664     flip_color(Color) [62]
-----------------------------------------------
                0.04    0.04 3212982/3212982     apply_move(Board*, Move) [5]
[23]     2.0    0.04    0.04 3212982         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&) [23]
                0.00    0.02 3212978/3212982     void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [55]
                0.01    0.01       4/4           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [68]
                0.00    0.00       4/13446167     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() [52]
-----------------------------------------------
                0.01    0.00 9016434/82204128     add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool) [35]
                0.03    0.00 32718192/82204128     update_xrays_by_piece(Board*, Coordinate, Piece, bool) [8]
                0.03    0.00 40469502/82204128     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool) [17]
[24]     1.9    0.07    0.00 82204128         is_valid(Coordinate) [24]
-----------------------------------------------
                0.02    0.00 8549924/24836584     add_eval_diff(Board*, Coordinate, Piece, bool) [15]
                0.04    0.00 16286660/24836584     change_piece(Board*, Coordinate, Piece, bool) [4]
[25]     1.7    0.06    0.00 24836584         quintant_from(Coordinate) [25]
-----------------------------------------------
                0.00    0.00       2/29774101     void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [41]
                0.00    0.00       8/29774101     std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [40]
                0.05    0.02 29774091/29774101     std::vector<Coordinate, std::allocator<Coordinate> >::back() [16]
[26]     1.7    0.05    0.02 29774101         std::vector<Coordinate, std::allocator<Coordinate> >::end() [26]
                0.02    0.00 29774101/59548202     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&) [50]
-----------------------------------------------
                0.05    0.02 29774091/29774091     std::vector<Coordinate, std::allocator<Coordinate> >::back() [16]
[27]     1.7    0.05    0.02 29774091         __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator-(long) const [27]
                0.02    0.00 29774091/59548202     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&) [50]
-----------------------------------------------
                0.01    0.04 5782584/5782584     change_piece(Board*, Coordinate, Piece, bool) [4]
[28]     1.4    0.01    0.04 5782584         update_least_advanced(Board*, Color, int) [28]
                0.01    0.03 5501643/5501643     kronecker_piece(Board const*, Coordinate, Piece) [32]
-----------------------------------------------
                0.02    0.03 6425962/6425962     undo_move(Board*, Move) [6]
[29]     1.4    0.02    0.03 6425962         std::vector<Coordinate, std::allocator<Coordinate> >::pop_back() [29]
                0.01    0.02 6425962/6425962     void std::allocator_traits<std::allocator<Coordinate> >::destroy<Coordinate>(std::allocator<Coordinate>&, Coordinate*) [49]
-----------------------------------------------
                0.02    0.02  771090/771090      generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate, bool) [14]
[30]     1.2    0.02    0.02  771090         generate_rook_moves(Board const*, MoveList*, Coordinate, bool) [30]
                0.01    0.01 6785035/40469502     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool) [17]
                0.00    0.00 3084319/68245664     flip_color(Color) [62]
-----------------------------------------------
                0.00    0.00       1/3212983     init_board(Board*) [39]
                0.00    0.04 3212982/3212983     apply_move(Board*, Move) [5]
[31]     1.2    0.00    0.04 3212983         std::vector<int, std::allocator<int> >::push_back(int&&) [31]
                0.02    0.02 3212983/3212983     void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [38]
                0.01    0.00 3212983/5176252     std::remove_reference<int&>::type&& std::move<int&>(int&) [78]
-----------------------------------------------
                0.01    0.03 5501643/5501643     update_least_advanced(Board*, Color, int) [28]
[32]     1.1    0.01    0.03 5501643         kronecker_piece(Board const*, Coordinate, Piece) [32]
                0.02    0.00 5501643/6721419     piece_equals(Piece, Piece) [48]
                0.01    0.00 5501643/88280303     get_piece(Board const*, Coordinate) [18]
-----------------------------------------------
                0.02    0.03  373558/373558      generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate, bool) [14]
[33]     1.1    0.02    0.03  373558         generate_queen_moves(Board const*, MoveList*, Coordinate, bool) [33]
                0.01    0.01 6949985/40469502     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool) [17]
                0.00    0.00 2987454/68245664     flip_color(Color) [62]
-----------------------------------------------
                0.04    0.01 13446162/13446162     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [21]
[34]     1.1    0.04    0.01 13446162         __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [34]
                0.01    0.00 13446162/26892334     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&) [74]
-----------------------------------------------
                0.02    0.02 9016434/9016434     generate_pawn_moves(Board const*, MoveList*, Coordinate, bool) [22]
[35]     1.1    0.02    0.02 9016434         add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool) [35]
                0.01    0.00 9966953/88280303     get_piece(Board const*, Coordinate) [18]
                0.01    0.00 9016434/82204128     is_valid(Coordinate) [24]
-----------------------------------------------
                0.00    0.01  426348/3066926     shallow_greedy_move(Board*, Move*) [9]
                0.00    0.01  775451/3066926     stable_eval(Board*, int, int, int) [7]
                0.00    0.02 1865127/3066926     get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[36]     1.1    0.00    0.04 3066926         evaluate(Board*) [36]
                0.00    0.02 3066926/13446162     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [21]
                0.01    0.00 3066926/3066926     score_total(DisaggregatedScore) [80]
                0.00    0.00 3066926/6279908     std::vector<int, std::allocator<int> >::back() [59]
-----------------------------------------------
                0.02    0.02  383561/383561      generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate, bool) [14]
[37]     1.0    0.02    0.02  383561         generate_king_moves(Board const*, MoveList*, Coordinate, bool) [37]
                0.01    0.01 6136976/40469502     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool) [17]
                0.00    0.00 3068488/68245664     flip_color(Color) [62]
-----------------------------------------------
                0.02    0.02 3212983/3212983     std::vector<int, std::allocator<int> >::push_back(int&&) [31]
[38]     1.0    0.02    0.02 3212983         void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [38]
                0.01    0.01 3212978/3212983     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [64]
                0.00    0.00 3212983/9638954     int&& std::forward<int>(std::remove_reference<int>::type&) [87]
                0.00    0.00       5/5           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [110]
                0.00    0.00       5/6279913     std::vector<int, std::allocator<int> >::end() [127]
-----------------------------------------------
                0.00    0.04       1/1           main [1]
[39]     1.0    0.00    0.04       1         init_board(Board*) [39]
                0.00    0.04       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&) [42]
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&) [97]
                0.00    0.00       1/3212983     std::vector<int, std::allocator<int> >::push_back(int&&) [31]
-----------------------------------------------
                0.00    0.04 6425964/6425964     apply_move(Board*, Move) [5]
[40]     1.0    0.00    0.04 6425964         std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [40]
                0.00    0.03 6425956/6425964     void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [53]
                0.01    0.00       8/8           void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [73]
                0.00    0.00       8/29774101     std::vector<Coordinate, std::allocator<Coordinate> >::end() [26]
-----------------------------------------------
                0.00    0.04       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&) [42]
[41]     1.0    0.00    0.04       2         void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [41]
                0.00    0.04       2/2           void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00       2/29774101     std::vector<Coordinate, std::allocator<Coordinate> >::end() [26]
                0.00    0.00       2/8           Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&) [223]
-----------------------------------------------
                0.00    0.04       2/2           init_board(Board*) [39]
[42]     1.0    0.00    0.04       2         std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&) [42]
                0.00    0.04       2/2           void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [41]
                0.00    0.00       2/2           std::remove_reference<Coordinate&>::type&& std::move<Coordinate&>(Coordinate&) [264]
-----------------------------------------------
                0.00    0.04       2/2           void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [41]
[43]     1.0    0.00    0.04       2         void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.01    0.03       2/2           void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&) [44]
                0.00    0.00       2/10          std::vector<Coordinate, std::allocator<Coordinate> >::begin() [111]
                0.00    0.00       4/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate() [184]
                0.00    0.00       4/22          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() [173]
                0.00    0.00       4/40          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const [168]
                0.00    0.00       4/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [182]
                0.00    0.00       2/10          std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [201]
                0.00    0.00       2/10          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&) [198]
                0.00    0.00       2/10          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long) [204]
                0.00    0.00       2/8           Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&) [223]
                0.00    0.00       2/12          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [193]
-----------------------------------------------
                0.01    0.03       2/2           void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
[44]     1.0    0.01    0.03       2         void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&) [44]
                0.03    0.00       2/2           void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&) [46]
                0.00    0.00       2/8           Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&) [223]
-----------------------------------------------
                0.01    0.02    6032/6032        order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [13]
[45]     0.9    0.01    0.02    6032         void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}) [45]
                0.00    0.02    6032/6032        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [56]
                0.00    0.00    6032/6032        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter) [158]
-----------------------------------------------
                0.03    0.00       2/2           void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&) [44]
[46]     0.8    0.03    0.00       2         void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&) [46]
                0.00    0.00       2/12851932     operator new(unsigned long, void*) [76]
                0.00    0.00       2/8           Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&) [223]
-----------------------------------------------
                0.01    0.00 21352912/62082080     update_xrays_by_piece(Board*, Coordinate, Piece, bool) [8]
                0.02    0.00 40729168/62082080     update_xrays_by_pawn(Board*, Coordinate, Piece, bool) [10]
[47]     0.8    0.03    0.00 62082080         max_ray_len(int, int, int, int) [47]
-----------------------------------------------
                0.01    0.00 1219776/6721419     add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const [84]
                0.02    0.00 5501643/6721419     kronecker_piece(Board const*, Coordinate, Piece) [32]
[48]     0.8    0.03    0.00 6721419         piece_equals(Piece, Piece) [48]
-----------------------------------------------
                0.01    0.02 6425962/6425962     std::vector<Coordinate, std::allocator<Coordinate> >::pop_back() [29]
[49]     0.8    0.01    0.02 6425962         void std::allocator_traits<std::allocator<Coordinate> >::destroy<Coordinate>(std::allocator<Coordinate>&, Coordinate*) [49]
                0.02    0.00 6425962/6425962     void __gnu_cxx::new_allocator<Coordinate>::destroy<Coordinate>(Coordinate*) [58]
-----------------------------------------------
                0.00    0.00      10/59548202     std::vector<Coordinate, std::allocator<Coordinate> >::begin() [111]
                0.02    0.00 29774091/59548202     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator-(long) const [27]
                0.02    0.00 29774101/59548202     std::vector<Coordinate, std::allocator<Coordinate> >::end() [26]
[50]     0.8    0.03    0.00 59548202         __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&) [50]
-----------------------------------------------
                0.00    0.03  737765/737765      generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate, bool) [14]
[51]     0.7    0.00    0.03  737765         generate_bishop_moves(Board const*, MoveList*, Coordinate, bool) [51]
                0.01    0.01 7309872/40469502     add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool) [17]
                0.00    0.00 2951060/68245664     flip_color(Color) [62]
-----------------------------------------------
                0.00    0.00       1/13446167     void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [96]
                0.00    0.00       4/13446167     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&) [23]
                0.02    0.01 13446162/13446167     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [21]
[52]     0.7    0.02    0.01 13446167         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() [52]
                0.01    0.00 13446167/26892334     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&) [74]
-----------------------------------------------
                0.00    0.00       8/6425964     void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [73]
                0.00    0.03 6425956/6425964     std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [40]
[53]     0.7    0.00    0.03 6425964         void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [53]
                0.00    0.02 6425964/6425964     void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&) [66]
                0.01    0.00 6425964/12851936     Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&) [57]
-----------------------------------------------
                0.02    0.00 3212982/3212982     void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [55]
[54]     0.6    0.02    0.00 3212982         void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&) [54]
                0.00    0.00 3212982/12851932     operator new(unsigned long, void*) [76]
                0.00    0.00 3212982/6425968     DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&) [126]
-----------------------------------------------
                0.00    0.00       4/3212982     void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [68]
                0.00    0.02 3212978/3212982     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&) [23]
[55]     0.6    0.00    0.02 3212982         void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [55]
                0.02    0.00 3212982/3212982     void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&) [54]
                0.00    0.00 3212982/6425968     DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&) [126]
-----------------------------------------------
                0.00    0.02    6032/6032        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}) [45]
[56]     0.6    0.00    0.02    6032         void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [56]
                0.00    0.02    6032/6032        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [63]
                0.00    0.00    6032/6032        void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [93]
                0.00    0.00    6032/13746       std::__lg(long) [154]
-----------------------------------------------
                0.00    0.00       8/12851936     void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [73]
                0.01    0.00 6425964/12851936     void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [53]
                0.01    0.00 6425964/12851936     void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&) [66]
[57]     0.6    0.02    0.00 12851936         Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&) [57]
-----------------------------------------------
                0.02    0.00 6425962/6425962     void std::allocator_traits<std::allocator<Coordinate> >::destroy<Coordinate>(std::allocator<Coordinate>&, Coordinate*) [49]
[58]     0.6    0.02    0.00 6425962         void __gnu_cxx::new_allocator<Coordinate>::destroy<Coordinate>(Coordinate*) [58]
-----------------------------------------------
                0.00    0.00 3066926/6279908     evaluate(Board*) [36]
                0.01    0.01 3212982/6279908     apply_move(Board*, Move) [5]
[59]     0.6    0.01    0.01 6279908         std::vector<int, std::allocator<int> >::back() [59]
                0.01    0.00 6279908/6279908     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const [77]
                0.00    0.00 6279908/6279913     std::vector<int, std::allocator<int> >::end() [127]
                0.00    0.00 6279908/6279908     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [128]
-----------------------------------------------
                0.02    0.00       1/1           __libc_csu_init [61]
[60]     0.6    0.02    0.00       1         _GLOBAL__sub_I__Z10print_movePK5Board4Move [60]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [277]
-----------------------------------------------
                                                 <spontaneous>
[61]     0.6    0.00    0.02                 __libc_csu_init [61]
                0.02    0.00       1/1           _GLOBAL__sub_I__Z10print_movePK5Board4Move [60]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z13get_best_moveP5BoardiiibbiPA10000_8PVRecord [269]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z11score_total18DisaggregatedScore [268]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10copy_board5Board [267]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [275]
                0.00    0.00       1/1           _GLOBAL__sub_I_pv_table [270]
-----------------------------------------------
                0.00    0.00       2/68245664     apply_null(Board*) [115]
                0.00    0.00       2/68245664     undo_null(Board*) [116]
                0.00    0.00 2951060/68245664     generate_bishop_moves(Board const*, MoveList*, Coordinate, bool) [51]
                0.00    0.00 2987454/68245664     generate_queen_moves(Board const*, MoveList*, Coordinate, bool) [33]
                0.00    0.00 3068488/68245664     generate_king_moves(Board const*, MoveList*, Coordinate, bool) [37]
                0.00    0.00 3084319/68245664     generate_rook_moves(Board const*, MoveList*, Coordinate, bool) [30]
                0.00    0.00 3212981/68245664     undo_move(Board*, Move) [6]
                0.00    0.00 3212982/68245664     apply_move(Board*, Move) [5]
                0.00    0.00 5525408/68245664     generate_knight_moves(Board const*, MoveList*, Coordinate, bool) [20]
                0.00    0.00 6010956/68245664     generate_pawn_moves(Board const*, MoveList*, Coordinate, bool) [22]
                0.00    0.00 7166254/68245664     add_eval_diff(Board*, Coordinate, Piece, bool) [15]
                0.00    0.00 8143330/68245664     update_xrays_by_piece(Board*, Coordinate, Piece, bool) [8]
                0.00    0.00 8549922/68245664     update_king_attacks(Board*, Coordinate, Color, bool) [19]
                0.00    0.00 14332506/68245664     change_piece(Board*, Coordinate, Piece, bool) [4]
[62]     0.6    0.02    0.00 68245664         flip_color(Color) [62]
-----------------------------------------------
                0.00    0.02    6032/6032        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [56]
[63]     0.5    0.00    0.02    6032         void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [63]
                0.01    0.00    6032/6032        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [67]
                0.00    0.00    6032/6032        void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [95]
-----------------------------------------------
                0.00    0.00       5/3212983     void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [110]
                0.01    0.01 3212978/3212983     void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [38]
[64]     0.4    0.01    0.01 3212983         void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [64]
                0.00    0.00 3212983/3212983     void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [91]
                0.00    0.00 3212983/9638954     int&& std::forward<int>(std::remove_reference<int>::type&) [87]
-----------------------------------------------
                0.02    0.00 13446162/13446162     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() [21]
[65]     0.4    0.02    0.00 13446162         __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [65]
-----------------------------------------------
                0.00    0.02 6425964/6425964     void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [53]
[66]     0.4    0.00    0.02 6425964         void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&) [66]
                0.01    0.00 6425964/12851936     Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&) [57]
                0.01    0.00 6425964/12851932     operator new(unsigned long, void*) [76]
-----------------------------------------------
                0.01    0.00    6032/6032        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [63]
[67]     0.4    0.01    0.00    6032         void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [67]
                0.00    0.00   79018/155331      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [85]
                0.00    0.00   90480/400061      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [90]
                0.00    0.00   22924/5176252     std::remove_reference<int&>::type&& std::move<int&>(int&) [78]
                0.00    0.00   79018/155331      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [145]
                0.00    0.00   11462/28104       int* std::move_backward<int*, int*>(int*, int*, int*) [151]
-----------------------------------------------
                0.01    0.01       4/4           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&) [23]
[68]     0.4    0.01    0.01       4         void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [68]
                0.01    0.00       4/5           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long) [82]
                0.00    0.00       4/3212982     void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [55]
                0.00    0.00       4/5           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin() [112]
                0.00    0.00       8/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate() [212]
                0.00    0.00       8/11          std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() [194]
                0.00    0.00       8/20          __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const [174]
                0.00    0.00       8/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [210]
                0.00    0.00       4/5           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [233]
                0.00    0.00       4/5           __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&) [231]
                0.00    0.00       4/6425968     DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&) [126]
                0.00    0.00       4/6           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [224]
-----------------------------------------------
                0.00    0.01    7714/7714        order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) <cycle 1> [13]
[69]     0.3    0.00    0.01    7714         void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}) [69]
                0.00    0.01    7714/7714        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [70]
                0.00    0.00    7714/7714        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter) [156]
-----------------------------------------------
                0.00    0.01    7714/7714        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}) [69]
[70]     0.3    0.00    0.01    7714         void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [70]
                0.00    0.01    7714/7714        void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [72]
                0.00    0.00    7714/7714        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [99]
                0.00    0.00    7714/13746       std::__lg(long) [154]
-----------------------------------------------
                0.01    0.00   14983/14983       void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [72]
[71]     0.3    0.01    0.00   14983         int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [71]
                0.00    0.00   14983/14983       int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [106]
                0.00    0.00   14983/14983       void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [107]
-----------------------------------------------
                               14983             void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [72]
                0.00    0.01    7714/7714        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [70]
[72]     0.3    0.00    0.01    7714+14983   void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [72]
                0.01    0.00   14983/14983       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [71]
                               14983             void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [72]
-----------------------------------------------
                0.01    0.00       8/8           std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [40]
[73]     0.3    0.01    0.00       8         void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [73]
                0.00    0.00       8/6425964     void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [53]
                0.00    0.00       8/12851936     Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&) [57]
                0.00    0.00       8/10          std::vector<Coordinate, std::allocator<Coordinate> >::begin() [111]
                0.00    0.00      16/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate() [184]
                0.00    0.00      16/22          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() [173]
                0.00    0.00      16/40          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const [168]
                0.00    0.00      16/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [182]
                0.00    0.00       8/10          std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [201]
                0.00    0.00       8/10          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&) [198]
                0.00    0.00       8/10          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long) [204]
                0.00    0.00       8/12          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [193]
-----------------------------------------------
                0.00    0.00       5/26892334     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin() [112]
                0.01    0.00 13446162/26892334     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [34]
                0.01    0.00 13446167/26892334     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() [52]
[74]     0.3    0.01    0.00 26892334         __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&) [74]
-----------------------------------------------
                0.00    0.00 5071138/13033568     add_eval_diff(Board*, Coordinate, Piece, bool) [15]
                0.01    0.00 7962430/13033568     change_piece(Board*, Coordinate, Piece, bool) [4]
[75]     0.3    0.01    0.00 13033568         parity(Coordinate) [75]
-----------------------------------------------
                0.00    0.00       1/12851932     void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&) [113]
                0.00    0.00       2/12851932     void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&) [46]
                0.00    0.00 3212982/12851932     void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&) [54]
                0.00    0.00 3212983/12851932     void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [91]
                0.01    0.00 6425964/12851932     void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&) [66]
[76]     0.3    0.01    0.00 12851932         operator new(unsigned long, void*) [76]
-----------------------------------------------
                0.01    0.00 6279908/6279908     std::vector<int, std::allocator<int> >::back() [59]
[77]     0.3    0.01    0.00 6279908         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const [77]
                0.00    0.00 6279908/12559826     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [124]
-----------------------------------------------
                0.00    0.00   22924/5176252     void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [67]
                0.00    0.00   33284/5176252     void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [103]
                0.00    0.00  450045/5176252     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&) [101]
                0.00    0.00  646287/5176252     void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [85]
                0.00    0.00  810729/5176252     void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [100]
                0.01    0.00 3212983/5176252     std::vector<int, std::allocator<int> >::push_back(int&&) [31]
[78]     0.3    0.01    0.00 5176252         std::remove_reference<int&>::type&& std::move<int&>(int&) [78]
-----------------------------------------------
                0.01    0.00 3212981/3212981     undo_move(Board*, Move) [6]
[79]     0.3    0.01    0.00 3212981         std::vector<int, std::allocator<int> >::pop_back() [79]
                0.00    0.00 3212981/3212981     void std::allocator_traits<std::allocator<int> >::destroy<int>(std::allocator<int>&, int*) [132]
-----------------------------------------------
                0.01    0.00 3066926/3066926     evaluate(Board*) [36]
[80]     0.3    0.01    0.00 3066926         score_total(DisaggregatedScore) [80]
-----------------------------------------------
                0.00    0.00  400061/891017      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [90]
                0.01    0.00  490956/891017      bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int, int*>(int&, int*) [86]
[81]     0.3    0.01    0.00  891017         order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}::operator()(int, int) const [81]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [98]
                0.01    0.00       4/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [68]
[82]     0.3    0.01    0.00       5         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long) [82]
                0.00    0.00       5/5           std::allocator_traits<std::allocator<DisaggregatedScore> >::allocate(std::allocator<DisaggregatedScore>&, unsigned long) [237]
-----------------------------------------------
                                                 <spontaneous>
[83]     0.3    0.01    0.00                 int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [83]
-----------------------------------------------
                0.00    0.01 1219776/1219776     add_eval_diff(Board*, Coordinate, Piece, bool) [15]
[84]     0.2    0.00    0.01 1219776         add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const [84]
                0.01    0.00 1219776/6721419     piece_equals(Piece, Piece) [48]
                0.00    0.00 1219776/88280303     get_piece(Board const*, Coordinate) [18]
-----------------------------------------------
                0.00    0.00   76313/155331      void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [95]
                0.00    0.00   79018/155331      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [67]
[85]     0.2    0.00    0.01  155331         void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [85]
                0.00    0.01  490956/490956      bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int, int*>(int&, int*) [86]
                0.00    0.00  646287/5176252     std::remove_reference<int&>::type&& std::move<int&>(int&) [78]
-----------------------------------------------
                0.00    0.01  490956/490956      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [85]
[86]     0.2    0.00    0.01  490956         bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int, int*>(int&, int*) [86]
                0.01    0.00  490956/891017      order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}::operator()(int, int) const [81]
-----------------------------------------------
                0.00    0.00       5/9638954     void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [110]
                0.00    0.00 3212983/9638954     void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [38]
                0.00    0.00 3212983/9638954     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [64]
                0.00    0.00 3212983/9638954     void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [91]
[87]     0.1    0.01    0.00 9638954         int&& std::forward<int>(std::remove_reference<int>::type&) [87]
-----------------------------------------------
                0.01    0.00 3212982/3212982     apply_move(Board*, Move) [5]
[88]     0.1    0.01    0.00 3212982         is_irreversible(Move, Piece) [88]
                0.00    0.00 3212982/9827754     is_capture(Move) [125]
-----------------------------------------------
                                                 <spontaneous>
[89]     0.1    0.01    0.00                 __gnu_cxx::new_allocator<Coordinate>::new_allocator(__gnu_cxx::new_allocator<Coordinate> const&) [89]
-----------------------------------------------
                0.00    0.00   26555/400061      void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [105]
                0.00    0.00   90480/400061      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [67]
                0.00    0.00  283026/400061      int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [94]
[90]     0.1    0.00    0.00  400061         bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [90]
                0.00    0.00  400061/891017      order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}::operator()(int, int) const [81]
-----------------------------------------------
                0.00    0.00 3212983/3212983     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [64]
[91]     0.1    0.00    0.00 3212983         void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [91]
                0.00    0.00 3212983/12851932     operator new(unsigned long, void*) [76]
                0.00    0.00 3212983/9638954     int&& std::forward<int>(std::remove_reference<int>::type&) [87]
-----------------------------------------------
                0.00    0.00   10846/10846       void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [93]
[92]     0.1    0.00    0.00   10846         int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [92]
                0.00    0.00   10846/10846       int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [94]
                0.00    0.00   10846/10846       void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [105]
-----------------------------------------------
                               10846             void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [93]
                0.00    0.00    6032/6032        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [56]
[93]     0.1    0.00    0.00    6032+10846   void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [93]
                0.00    0.00   10846/10846       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [92]
                               10846             void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [93]
-----------------------------------------------
                0.00    0.00   10846/10846       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [92]
[94]     0.1    0.00    0.00   10846         int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [94]
                0.00    0.00  283026/400061      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [90]
                0.00    0.00   63267/150015      void std::iter_swap<int*, int*>(int*, int*) [102]
-----------------------------------------------
                0.00    0.00    6032/6032        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [63]
[95]     0.1    0.00    0.00    6032         void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [95]
                0.00    0.00   76313/155331      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [85]
                0.00    0.00   76313/155331      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [145]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&) [97]
[96]     0.1    0.00    0.00       1         void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [96]
                0.00    0.00       1/1           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [98]
                0.00    0.00       1/13446167     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() [52]
                0.00    0.00       1/4           DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&) [243]
-----------------------------------------------
                0.00    0.00       1/1           init_board(Board*) [39]
[97]     0.1    0.00    0.00       1         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&) [97]
                0.00    0.00       1/1           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [96]
                0.00    0.00       1/1           std::remove_reference<DisaggregatedScore&>::type&& std::move<DisaggregatedScore&>(DisaggregatedScore&) [306]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [96]
[98]     0.1    0.00    0.00       1         void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [98]
                0.00    0.00       1/5           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long) [82]
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&) [114]
                0.00    0.00       1/5           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin() [112]
                0.00    0.00       2/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate() [212]
                0.00    0.00       2/11          std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() [194]
                0.00    0.00       2/20          __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const [174]
                0.00    0.00       2/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [210]
                0.00    0.00       1/5           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [233]
                0.00    0.00       1/5           __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&) [231]
                0.00    0.00       1/4           DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&) [243]
                0.00    0.00       1/6           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [224]
-----------------------------------------------
                0.00    0.00    7714/7714        void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [70]
[99]     0.0    0.00    0.00    7714         void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [99]
                0.00    0.00    7714/7714        void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [103]
                0.00    0.00    7714/7714        void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [104]
-----------------------------------------------
                0.00    0.00   96288/195356      void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [104]
                0.00    0.00   99068/195356      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [103]
[100]    0.0    0.00    0.00  195356         void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [100]
                0.00    0.00  810729/5176252     std::remove_reference<int&>::type&& std::move<int&>(int&) [78]
                0.00    0.00  615373/615373      bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int, int*>(int&, int*) [135]
-----------------------------------------------
                0.00    0.00  150015/150015      void std::iter_swap<int*, int*>(int*, int*) [102]
[101]    0.0    0.00    0.00  150015         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&) [101]
                0.00    0.00  450045/5176252     std::remove_reference<int&>::type&& std::move<int&>(int&) [78]
-----------------------------------------------
                0.00    0.00   10846/150015      void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [105]
                0.00    0.00   14983/150015      void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [107]
                0.00    0.00   60919/150015      int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [106]
                0.00    0.00   63267/150015      int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [94]
[102]    0.0    0.00    0.00  150015         void std::iter_swap<int*, int*>(int*, int*) [102]
                0.00    0.00  150015/150015      std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&) [101]
-----------------------------------------------
                0.00    0.00    7714/7714        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [99]
[103]    0.0    0.00    0.00    7714         void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [103]
                0.00    0.00   99068/195356      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [100]
                0.00    0.00   33284/5176252     std::remove_reference<int&>::type&& std::move<int&>(int&) [78]
                0.00    0.00  115710/535060      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [136]
                0.00    0.00   99068/195356      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [141]
                0.00    0.00   16642/28104       int* std::move_backward<int*, int*>(int*, int*, int*) [151]
-----------------------------------------------
                0.00    0.00    7714/7714        void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [99]
[104]    0.0    0.00    0.00    7714         void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [104]
                0.00    0.00   96288/195356      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [100]
                0.00    0.00   96288/195356      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [141]
-----------------------------------------------
                0.00    0.00   10846/10846       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [92]
[105]    0.0    0.00    0.00   10846         void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [105]
                0.00    0.00   26555/400061      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [90]
                0.00    0.00   10846/150015      void std::iter_swap<int*, int*>(int*, int*) [102]
-----------------------------------------------
                0.00    0.00   14983/14983       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [71]
[106]    0.0    0.00    0.00   14983         int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [106]
                0.00    0.00   60919/150015      void std::iter_swap<int*, int*>(int*, int*) [102]
                0.00    0.00  380133/535060      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [136]
-----------------------------------------------
                0.00    0.00   14983/14983       int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [71]
[107]    0.0    0.00    0.00   14983         void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [107]
                0.00    0.00   14983/150015      void std::iter_swap<int*, int*>(int*, int*) [102]
                0.00    0.00   39217/535060      bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [136]
-----------------------------------------------
                                   4             print_pv(Board*, int, int, PVRecord (*) [10000]) [108]
                0.00    0.00       1/1           main [1]
[108]    0.0    0.00    0.00       1+4       print_pv(Board*, int, int, PVRecord (*) [10000]) [108]
                0.00    0.00       4/3212982     apply_move(Board*, Move) [5]
                0.00    0.00       4/3212981     undo_move(Board*, Move) [6]
                0.00    0.00       4/850         print_move(Board const*, Move) [109]
                                   4             print_pv(Board*, int, int, PVRecord (*) [10000]) [108]
-----------------------------------------------
                0.00    0.00       4/850         print_pv(Board*, int, int, PVRecord (*) [10000]) [108]
                0.00    0.00     846/850         get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[109]    0.0    0.00    0.00     850         print_move(Board const*, Move) [109]
                0.00    0.00     850/88280303     get_piece(Board const*, Coordinate) [18]
-----------------------------------------------
                0.00    0.00       5/5           void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [38]
[110]    0.0    0.00    0.00       5         void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [110]
                0.00    0.00       5/3212983     void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [64]
                0.00    0.00       5/9638954     int&& std::forward<int>(std::remove_reference<int>::type&) [87]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_use_relocate() [217]
                0.00    0.00      10/11          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [195]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [175]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&) [215]
                0.00    0.00       5/5           std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [234]
                0.00    0.00       5/5           std::vector<int, std::allocator<int> >::begin() [240]
                0.00    0.00       5/5           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [232]
                0.00    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [235]
                0.00    0.00       5/6           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [225]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00       8/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [73]
[111]    0.0    0.00    0.00      10         std::vector<Coordinate, std::allocator<Coordinate> >::begin() [111]
                0.00    0.00      10/59548202     __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&) [50]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [98]
                0.00    0.00       4/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [68]
[112]    0.0    0.00    0.00       5         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin() [112]
                0.00    0.00       5/26892334     __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&) [74]
-----------------------------------------------
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&) [114]
[113]    0.0    0.00    0.00       1         void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&) [113]
                0.00    0.00       1/12851932     operator new(unsigned long, void*) [76]
                0.00    0.00       1/4           DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&) [243]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [98]
[114]    0.0    0.00    0.00       1         void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&) [114]
                0.00    0.00       1/1           void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&) [113]
                0.00    0.00       1/4           DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&) [243]
-----------------------------------------------
                0.00    0.00       2/2           get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[115]    0.0    0.00    0.00       2         apply_null(Board*) [115]
                0.00    0.00       2/68245664     flip_color(Color) [62]
-----------------------------------------------
                0.00    0.00       2/2           get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[116]    0.0    0.00    0.00       2         undo_null(Board*) [116]
                0.00    0.00       2/68245664     flip_color(Color) [62]
-----------------------------------------------
                0.00    0.00 29774091/29774091     std::vector<Coordinate, std::allocator<Coordinate> >::back() [16]
[123]    0.0    0.00    0.00 29774091         __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator*() const [123]
-----------------------------------------------
                0.00    0.00       5/12559826     std::vector<int, std::allocator<int> >::begin() [240]
                0.00    0.00 6279908/12559826     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const [77]
                0.00    0.00 6279913/12559826     std::vector<int, std::allocator<int> >::end() [127]
[124]    0.0    0.00    0.00 12559826         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [124]
-----------------------------------------------
                0.00    0.00      38/9827754     get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
                0.00    0.00  188771/9827754     stable_eval(Board*, int, int, int) [7]
                0.00    0.00 3212981/9827754     undo_move(Board*, Move) [6]
                0.00    0.00 3212982/9827754     apply_move(Board*, Move) [5]
                0.00    0.00 3212982/9827754     is_irreversible(Move, Piece) [88]
[125]    0.0    0.00    0.00 9827754         is_capture(Move) [125]
-----------------------------------------------
                0.00    0.00       4/6425968     void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [68]
                0.00    0.00 3212982/6425968     void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [55]
                0.00    0.00 3212982/6425968     void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&) [54]
[126]    0.0    0.00    0.00 6425968         DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&) [126]
-----------------------------------------------
                0.00    0.00       5/6279913     void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [38]
                0.00    0.00 6279908/6279913     std::vector<int, std::allocator<int> >::back() [59]
[127]    0.0    0.00    0.00 6279913         std::vector<int, std::allocator<int> >::end() [127]
                0.00    0.00 6279913/12559826     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [124]
-----------------------------------------------
                0.00    0.00 6279908/6279908     std::vector<int, std::allocator<int> >::back() [59]
[128]    0.0    0.00    0.00 6279908         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [128]
-----------------------------------------------
                0.00    0.00 3212981/3212981     void std::allocator_traits<std::allocator<DisaggregatedScore> >::destroy<DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*) [131]
[129]    0.0    0.00    0.00 3212981         void __gnu_cxx::new_allocator<DisaggregatedScore>::destroy<DisaggregatedScore>(DisaggregatedScore*) [129]
-----------------------------------------------
                0.00    0.00 3212981/3212981     void std::allocator_traits<std::allocator<int> >::destroy<int>(std::allocator<int>&, int*) [132]
[130]    0.0    0.00    0.00 3212981         void __gnu_cxx::new_allocator<int>::destroy<int>(int*) [130]
-----------------------------------------------
                0.00    0.00 3212981/3212981     std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::pop_back() [133]
[131]    0.0    0.00    0.00 3212981         void std::allocator_traits<std::allocator<DisaggregatedScore> >::destroy<DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*) [131]
                0.00    0.00 3212981/3212981     void __gnu_cxx::new_allocator<DisaggregatedScore>::destroy<DisaggregatedScore>(DisaggregatedScore*) [129]
-----------------------------------------------
                0.00    0.00 3212981/3212981     std::vector<int, std::allocator<int> >::pop_back() [79]
[132]    0.0    0.00    0.00 3212981         void std::allocator_traits<std::allocator<int> >::destroy<int>(std::allocator<int>&, int*) [132]
                0.00    0.00 3212981/3212981     void __gnu_cxx::new_allocator<int>::destroy<int>(int*) [130]
-----------------------------------------------
                0.00    0.00 3212981/3212981     undo_move(Board*, Move) [6]
[133]    0.0    0.00    0.00 3212981         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::pop_back() [133]
                0.00    0.00 3212981/3212981     void std::allocator_traits<std::allocator<DisaggregatedScore> >::destroy<DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*) [131]
-----------------------------------------------
                0.00    0.00  535060/1150433     bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [136]
                0.00    0.00  615373/1150433     bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int, int*>(int&, int*) [135]
[134]    0.0    0.00    0.00 1150433         order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}::operator()(int, int) const [134]
-----------------------------------------------
                0.00    0.00  615373/615373      void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [100]
[135]    0.0    0.00    0.00  615373         bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int, int*>(int&, int*) [135]
                0.00    0.00  615373/1150433     order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}::operator()(int, int) const [134]
-----------------------------------------------
                0.00    0.00   39217/535060      void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [107]
                0.00    0.00  115710/535060      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [103]
                0.00    0.00  380133/535060      int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [106]
[136]    0.0    0.00    0.00  535060         bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [136]
                0.00    0.00  535060/1150433     order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}::operator()(int, int) const [134]
-----------------------------------------------
                0.00    0.00    7714/210784      __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter) [156]
                0.00    0.00    7714/210784      __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Iter_comp_iter({lambda(int, int)#2}) [155]
                0.00    0.00  195356/210784      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#2}>&&) [140]
[137]    0.0    0.00    0.00  210784         std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&) [137]
-----------------------------------------------
                0.00    0.00      40/203336      std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [201]
                0.00    0.00  203296/203336      add_eval_diff(Board*, Coordinate, Piece, bool) [15]
[138]    0.0    0.00    0.00  203336         std::vector<Coordinate, std::allocator<Coordinate> >::size() const [138]
-----------------------------------------------
                0.00    0.00  203296/203296      add_eval_diff(Board*, Coordinate, Piece, bool) [15]
[139]    0.0    0.00    0.00  203296         std::vector<Coordinate, std::allocator<Coordinate> >::operator[](unsigned long) [139]
-----------------------------------------------
                0.00    0.00  195356/195356      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [141]
[140]    0.0    0.00    0.00  195356         __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#2}>&&) [140]
                0.00    0.00  195356/210784      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&) [137]
-----------------------------------------------
                0.00    0.00   96288/195356      void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [104]
                0.00    0.00   99068/195356      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [103]
[141]    0.0    0.00    0.00  195356         __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [141]
                0.00    0.00  195356/195356      std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>(std::remove_reference&&) [142]
                0.00    0.00  195356/195356      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#2}>&&) [140]
-----------------------------------------------
                0.00    0.00  195356/195356      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [141]
[142]    0.0    0.00    0.00  195356         std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>(std::remove_reference&&) [142]
-----------------------------------------------
                0.00    0.00    6032/167395      __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter) [158]
                0.00    0.00    6032/167395      __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Iter_comp_iter({lambda(int, int)#1}) [157]
                0.00    0.00  155331/167395      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#1}>&&) [144]
[143]    0.0    0.00    0.00  167395         std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&) [143]
-----------------------------------------------
                0.00    0.00  155331/155331      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [145]
[144]    0.0    0.00    0.00  155331         __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#1}>&&) [144]
                0.00    0.00  155331/167395      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&) [143]
-----------------------------------------------
                0.00    0.00   76313/155331      void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [95]
                0.00    0.00   79018/155331      void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [67]
[145]    0.0    0.00    0.00  155331         __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [145]
                0.00    0.00  155331/155331      std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>(std::remove_reference&&) [146]
                0.00    0.00  155331/155331      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#1}>&&) [144]
-----------------------------------------------
                0.00    0.00  155331/155331      __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [145]
[146]    0.0    0.00    0.00  155331         std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>(std::remove_reference&&) [146]
-----------------------------------------------
                0.00    0.00      30/84342       int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [220]
                0.00    0.00   84312/84342       int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [153]
[147]    0.0    0.00    0.00   84342         int* std::__niter_base<int*>(int*) [147]
-----------------------------------------------
                0.00    0.00   56208/56208       int* std::move_backward<int*, int*>(int*, int*, int*) [151]
[148]    0.0    0.00    0.00   56208         int* std::__miter_base<int*>(int*) [148]
-----------------------------------------------
                0.00    0.00   28104/28104       int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [152]
[149]    0.0    0.00    0.00   28104         int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [149]
-----------------------------------------------
                0.00    0.00   28104/28104       int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [153]
[150]    0.0    0.00    0.00   28104         int* std::__niter_wrap<int*>(int* const&, int*) [150]
-----------------------------------------------
                0.00    0.00   11462/28104       void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [67]
                0.00    0.00   16642/28104       void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [103]
[151]    0.0    0.00    0.00   28104         int* std::move_backward<int*, int*>(int*, int*, int*) [151]
                0.00    0.00   56208/56208       int* std::__miter_base<int*>(int*) [148]
                0.00    0.00   28104/28104       int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [153]
-----------------------------------------------
                0.00    0.00   28104/28104       int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [153]
[152]    0.0    0.00    0.00   28104         int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [152]
                0.00    0.00   28104/28104       int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [149]
-----------------------------------------------
                0.00    0.00   28104/28104       int* std::move_backward<int*, int*>(int*, int*, int*) [151]
[153]    0.0    0.00    0.00   28104         int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*) [153]
                0.00    0.00   84312/84342       int* std::__niter_base<int*>(int*) [147]
                0.00    0.00   28104/28104       int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*) [152]
                0.00    0.00   28104/28104       int* std::__niter_wrap<int*>(int* const&, int*) [150]
-----------------------------------------------
                0.00    0.00    6032/13746       void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>) [56]
                0.00    0.00    7714/13746       void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>) [70]
[154]    0.0    0.00    0.00   13746         std::__lg(long) [154]
-----------------------------------------------
                0.00    0.00    7714/7714        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter) [156]
[155]    0.0    0.00    0.00    7714         __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Iter_comp_iter({lambda(int, int)#2}) [155]
                0.00    0.00    7714/210784      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&) [137]
-----------------------------------------------
                0.00    0.00    7714/7714        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}) [69]
[156]    0.0    0.00    0.00    7714         __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter) [156]
                0.00    0.00    7714/210784      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&) [137]
                0.00    0.00    7714/7714        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Iter_comp_iter({lambda(int, int)#2}) [155]
-----------------------------------------------
                0.00    0.00    6032/6032        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter) [158]
[157]    0.0    0.00    0.00    6032         __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Iter_comp_iter({lambda(int, int)#1}) [157]
                0.00    0.00    6032/167395      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&) [143]
-----------------------------------------------
                0.00    0.00    6032/6032        void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}) [45]
[158]    0.0    0.00    0.00    6032         __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter) [158]
                0.00    0.00    6032/167395      std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&) [143]
                0.00    0.00    6032/6032        __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Iter_comp_iter({lambda(int, int)#1}) [157]
-----------------------------------------------
                0.00    0.00    1671/3375        std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [164]
                0.00    0.00    1704/3375        std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [160]
[159]    0.0    0.00    0.00    3375         std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [159]
-----------------------------------------------
                0.00    0.00      33/1704        std::ios_base::unsetf(std::_Ios_Fmtflags) [170]
                0.00    0.00    1671/1704        std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [164]
[160]    0.0    0.00    0.00    1704         std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [160]
                0.00    0.00    1704/3375        std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [159]
-----------------------------------------------
                0.00    0.00      33/1704        std::ios_base::unsetf(std::_Ios_Fmtflags) [170]
                0.00    0.00    1671/1704        std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [164]
[161]    0.0    0.00    0.00    1704         std::operator~(std::_Ios_Fmtflags) [161]
-----------------------------------------------
                0.00    0.00       6/1677        std::ios_base::setf(std::_Ios_Fmtflags) [226]
                0.00    0.00    1671/1677        std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [164]
[162]    0.0    0.00    0.00    1677         std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [162]
                0.00    0.00    1677/1677        std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [163]
-----------------------------------------------
                0.00    0.00    1677/1677        std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [162]
[163]    0.0    0.00    0.00    1677         std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [163]
-----------------------------------------------
                0.00    0.00    1671/1671        std::right(std::ios_base&) [617]
[164]    0.0    0.00    0.00    1671         std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [164]
                0.00    0.00    1671/1704        std::operator~(std::_Ios_Fmtflags) [161]
                0.00    0.00    1671/1704        std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [160]
                0.00    0.00    1671/3375        std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [159]
                0.00    0.00    1671/1677        std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [162]
-----------------------------------------------
                0.00    0.00       2/1671        main [1]
                0.00    0.00       5/1671        print_board_fancy(Board const*) [273]
                0.00    0.00    1664/1671        get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) <cycle 1> [3]
[165]    0.0    0.00    0.00    1671         std::setw(int) [165]
-----------------------------------------------
                0.00    0.00     256/256         print_board_fancy(Board const*)::{lambda(int const (*) [8][8], int)#3}::operator()(int const (*) [8][8], int) const [189]
[166]    0.0    0.00    0.00     256         print_board_fancy(Board const*)::{lambda(char const*, int)#1}::operator()(char const*, int) const [166]
-----------------------------------------------
                0.00    0.00      60/60          Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [186]
[167]    0.0    0.00    0.00      60         Coordinate* std::__niter_base<Coordinate*>(Coordinate*) [167]
-----------------------------------------------
                0.00    0.00       4/40          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00      16/40          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [73]
                0.00    0.00      20/40          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&) [198]
[168]    0.0    0.00    0.00      40         __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const [168]
-----------------------------------------------
                0.00    0.00      10/40          std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [214]
                0.00    0.00      10/40          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&) [209]
                0.00    0.00      20/40          std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&) [181]
[169]    0.0    0.00    0.00      40         unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [169]
-----------------------------------------------
                0.00    0.00      33/33          std::noshowpos(std::ios_base&) [633]
[170]    0.0    0.00    0.00      33         std::ios_base::unsetf(std::_Ios_Fmtflags) [170]
                0.00    0.00      33/1704        std::operator~(std::_Ios_Fmtflags) [161]
                0.00    0.00      33/1704        std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [160]
-----------------------------------------------
                0.00    0.00      10/30          __gnu_cxx::new_allocator<Coordinate>::allocate(unsigned long, void const*) [197]
                0.00    0.00      20/30          std::allocator_traits<std::allocator<Coordinate> >::max_size(std::allocator<Coordinate> const&) [180]
[171]    0.0    0.00    0.00      30         __gnu_cxx::new_allocator<Coordinate>::max_size() const [171]
-----------------------------------------------
                0.00    0.00      30/30          DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [219]
[172]    0.0    0.00    0.00      30         DisaggregatedScore* std::__niter_base<DisaggregatedScore*>(DisaggregatedScore*) [172]
-----------------------------------------------
                0.00    0.00       2/22          std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [263]
                0.00    0.00       4/22          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00      16/22          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [73]
[173]    0.0    0.00    0.00      22         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() [173]
-----------------------------------------------
                0.00    0.00       2/20          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [98]
                0.00    0.00       8/20          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [68]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&) [231]
[174]    0.0    0.00    0.00      20         __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const [174]
-----------------------------------------------
                0.00    0.00      10/20          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [110]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [232]
[175]    0.0    0.00    0.00      20         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [175]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const [177]
[176]    0.0    0.00    0.00      20         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() const [176]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [201]
[177]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const [177]
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&) [181]
                0.00    0.00      20/20          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() const [176]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [233]
[178]    0.0    0.00    0.00      20         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::size() const [178]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [234]
[179]    0.0    0.00    0.00      20         std::vector<int, std::allocator<int> >::size() const [179]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&) [181]
[180]    0.0    0.00    0.00      20         std::allocator_traits<std::allocator<Coordinate> >::max_size(std::allocator<Coordinate> const&) [180]
                0.00    0.00      20/30          __gnu_cxx::new_allocator<Coordinate>::max_size() const [171]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const [177]
[181]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&) [181]
                0.00    0.00      20/20          std::allocator_traits<std::allocator<Coordinate> >::max_size(std::allocator<Coordinate> const&) [180]
                0.00    0.00      20/40          unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [169]
-----------------------------------------------
                0.00    0.00       4/20          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00      16/20          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [73]
[182]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [182]
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_do_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&, std::integral_constant<bool, true>) [183]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [182]
[183]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::_S_do_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&, std::integral_constant<bool, true>) [183]
                0.00    0.00      20/20          Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [186]
-----------------------------------------------
                0.00    0.00       4/20          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00      16/20          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [73]
[184]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate() [184]
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [185]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate() [184]
[185]    0.0    0.00    0.00      20         std::vector<Coordinate, std::allocator<Coordinate> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [185]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::_S_do_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&, std::integral_constant<bool, true>) [183]
[186]    0.0    0.00    0.00      20         Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [186]
                0.00    0.00      60/60          Coordinate* std::__niter_base<Coordinate*>(Coordinate*) [167]
                0.00    0.00      20/20          std::enable_if<std::__is_bitwise_relocatable<Coordinate, void>::value, Coordinate*>::type std::__relocate_a_1<Coordinate, Coordinate>(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [187]
-----------------------------------------------
                0.00    0.00      20/20          Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [186]
[187]    0.0    0.00    0.00      20         std::enable_if<std::__is_bitwise_relocatable<Coordinate, void>::value, Coordinate*>::type std::__relocate_a_1<Coordinate, Coordinate>(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [187]
-----------------------------------------------
                0.00    0.00       5/20          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [234]
                0.00    0.00       5/20          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [233]
                0.00    0.00      10/20          std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [201]
[188]    0.0    0.00    0.00      20         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [188]
-----------------------------------------------
                0.00    0.00      16/16          print_board_fancy(Board const*) [273]
[189]    0.0    0.00    0.00      16         print_board_fancy(Board const*)::{lambda(int const (*) [8][8], int)#3}::operator()(int const (*) [8][8], int) const [189]
                0.00    0.00     256/256         print_board_fancy(Board const*)::{lambda(char const*, int)#1}::operator()(char const*, int) const [166]
-----------------------------------------------
                0.00    0.00       5/15          __gnu_cxx::new_allocator<DisaggregatedScore>::allocate(unsigned long, void const*) [228]
                0.00    0.00      10/15          std::allocator_traits<std::allocator<DisaggregatedScore> >::max_size(std::allocator<DisaggregatedScore> const&) [207]
[190]    0.0    0.00    0.00      15         __gnu_cxx::new_allocator<DisaggregatedScore>::max_size() const [190]
-----------------------------------------------
                0.00    0.00       5/15          __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [230]
                0.00    0.00      10/15          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [208]
[191]    0.0    0.00    0.00      15         __gnu_cxx::new_allocator<int>::max_size() const [191]
-----------------------------------------------
                0.00    0.00      14/14          print_board(Board const*) [272]
[192]    0.0    0.00    0.00      14         print_board(Board const*)::{lambda()#1}::operator()() const [192]
-----------------------------------------------
                0.00    0.00       2/12          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base() [261]
                0.00    0.00       2/12          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00       8/12          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [73]
[193]    0.0    0.00    0.00      12         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [193]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<Coordinate> >::deallocate(std::allocator<Coordinate>&, Coordinate*, unsigned long) [205]
-----------------------------------------------
                0.00    0.00       1/11          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector() [303]
                0.00    0.00       2/11          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [98]
                0.00    0.00       8/11          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [68]
[194]    0.0    0.00    0.00      11         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() [194]
-----------------------------------------------
                0.00    0.00       1/11          std::vector<int, std::allocator<int> >::~vector() [305]
                0.00    0.00      10/11          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [110]
[195]    0.0    0.00    0.00      11         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [195]
-----------------------------------------------
                0.00    0.00      10/10          std::allocator_traits<std::allocator<Coordinate> >::deallocate(std::allocator<Coordinate>&, Coordinate*, unsigned long) [205]
[196]    0.0    0.00    0.00      10         __gnu_cxx::new_allocator<Coordinate>::deallocate(Coordinate*, unsigned long) [196]
-----------------------------------------------
                0.00    0.00      10/10          std::allocator_traits<std::allocator<Coordinate> >::allocate(std::allocator<Coordinate>&, unsigned long) [206]
[197]    0.0    0.00    0.00      10         __gnu_cxx::new_allocator<Coordinate>::allocate(unsigned long, void const*) [197]
                0.00    0.00      10/30          __gnu_cxx::new_allocator<Coordinate>::max_size() const [171]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00       8/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [73]
[198]    0.0    0.00    0.00      10         __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&) [198]
                0.00    0.00      20/40          __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const [168]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const [202]
[199]    0.0    0.00    0.00      10         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() const [199]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::max_size() const [203]
[200]    0.0    0.00    0.00      10         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [200]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00       8/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [73]
[201]    0.0    0.00    0.00      10         std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [201]
                0.00    0.00      40/203336      std::vector<Coordinate, std::allocator<Coordinate> >::size() const [138]
                0.00    0.00      20/20          std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const [177]
                0.00    0.00      10/20          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [188]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [233]
[202]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const [202]
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&) [209]
                0.00    0.00      10/10          std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() const [199]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [234]
[203]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::max_size() const [203]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [214]
                0.00    0.00      10/10          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [200]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00       8/10          void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [73]
[204]    0.0    0.00    0.00      10         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long) [204]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<Coordinate> >::allocate(std::allocator<Coordinate>&, unsigned long) [206]
-----------------------------------------------
                0.00    0.00      10/10          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [193]
[205]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<Coordinate> >::deallocate(std::allocator<Coordinate>&, Coordinate*, unsigned long) [205]
                0.00    0.00      10/10          __gnu_cxx::new_allocator<Coordinate>::deallocate(Coordinate*, unsigned long) [196]
-----------------------------------------------
                0.00    0.00      10/10          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long) [204]
[206]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<Coordinate> >::allocate(std::allocator<Coordinate>&, unsigned long) [206]
                0.00    0.00      10/10          __gnu_cxx::new_allocator<Coordinate>::allocate(unsigned long, void const*) [197]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&) [209]
[207]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<DisaggregatedScore> >::max_size(std::allocator<DisaggregatedScore> const&) [207]
                0.00    0.00      10/15          __gnu_cxx::new_allocator<DisaggregatedScore>::max_size() const [190]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [214]
[208]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [208]
                0.00    0.00      10/15          __gnu_cxx::new_allocator<int>::max_size() const [191]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const [202]
[209]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&) [209]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<DisaggregatedScore> >::max_size(std::allocator<DisaggregatedScore> const&) [207]
                0.00    0.00      10/40          unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [169]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [98]
                0.00    0.00       8/10          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [68]
[210]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [210]
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_do_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&, std::integral_constant<bool, true>) [211]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [210]
[211]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_do_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&, std::integral_constant<bool, true>) [211]
                0.00    0.00      10/10          DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [219]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [98]
                0.00    0.00       8/10          void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [68]
[212]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate() [212]
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [213]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate() [212]
[213]    0.0    0.00    0.00      10         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [213]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::max_size() const [203]
[214]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [214]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [208]
                0.00    0.00      10/40          unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [169]
-----------------------------------------------
                0.00    0.00      10/10          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [110]
[215]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&) [215]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>) [216]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&) [215]
[216]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>) [216]
                0.00    0.00      10/10          int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [220]
-----------------------------------------------
                0.00    0.00      10/10          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [110]
[217]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::_S_use_relocate() [217]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [218]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_use_relocate() [217]
[218]    0.0    0.00    0.00      10         std::vector<int, std::allocator<int> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [218]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_do_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&, std::integral_constant<bool, true>) [211]
[219]    0.0    0.00    0.00      10         DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [219]
                0.00    0.00      30/30          DisaggregatedScore* std::__niter_base<DisaggregatedScore*>(DisaggregatedScore*) [172]
                0.00    0.00      10/10          std::enable_if<std::__is_bitwise_relocatable<DisaggregatedScore, void>::value, DisaggregatedScore*>::type std::__relocate_a_1<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [221]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>) [216]
[220]    0.0    0.00    0.00      10         int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [220]
                0.00    0.00      30/84342       int* std::__niter_base<int*>(int*) [147]
                0.00    0.00      10/10          std::enable_if<std::__is_bitwise_relocatable<int, void>::value, int*>::type std::__relocate_a_1<int, int>(int*, int*, int*, std::allocator<int>&) [222]
-----------------------------------------------
                0.00    0.00      10/10          DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [219]
[221]    0.0    0.00    0.00      10         std::enable_if<std::__is_bitwise_relocatable<DisaggregatedScore, void>::value, DisaggregatedScore*>::type std::__relocate_a_1<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [221]
-----------------------------------------------
                0.00    0.00      10/10          int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [220]
[222]    0.0    0.00    0.00      10         std::enable_if<std::__is_bitwise_relocatable<int, void>::value, int*>::type std::__relocate_a_1<int, int>(int*, int*, int*, std::allocator<int>&) [222]
-----------------------------------------------
                0.00    0.00       2/8           void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [41]
                0.00    0.00       2/8           void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&) [44]
                0.00    0.00       2/8           void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [43]
                0.00    0.00       2/8           void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&) [46]
[223]    0.0    0.00    0.00       8         Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&) [223]
-----------------------------------------------
                0.00    0.00       1/6           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base() [296]
                0.00    0.00       1/6           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [98]
                0.00    0.00       4/6           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [68]
[224]    0.0    0.00    0.00       6         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [224]
                0.00    0.00       5/5           std::allocator_traits<std::allocator<DisaggregatedScore> >::deallocate(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, unsigned long) [236]
-----------------------------------------------
                0.00    0.00       1/6           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [301]
                0.00    0.00       5/6           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [110]
[225]    0.0    0.00    0.00       6         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [225]
                0.00    0.00       5/5           std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [238]
-----------------------------------------------
                0.00    0.00       6/6           std::showpos(std::ios_base&) [624]
[226]    0.0    0.00    0.00       6         std::ios_base::setf(std::_Ios_Fmtflags) [226]
                0.00    0.00       6/1677        std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [162]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator_traits<std::allocator<DisaggregatedScore> >::deallocate(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, unsigned long) [236]
[227]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<DisaggregatedScore>::deallocate(DisaggregatedScore*, unsigned long) [227]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator_traits<std::allocator<DisaggregatedScore> >::allocate(std::allocator<DisaggregatedScore>&, unsigned long) [237]
[228]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<DisaggregatedScore>::allocate(unsigned long, void const*) [228]
                0.00    0.00       5/15          __gnu_cxx::new_allocator<DisaggregatedScore>::max_size() const [190]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [238]
[229]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [229]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [239]
[230]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [230]
                0.00    0.00       5/15          __gnu_cxx::new_allocator<int>::max_size() const [191]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [98]
                0.00    0.00       4/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [68]
[231]    0.0    0.00    0.00       5         __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&) [231]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const [174]
-----------------------------------------------
                0.00    0.00       5/5           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [110]
[232]    0.0    0.00    0.00       5         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [232]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [175]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [98]
                0.00    0.00       4/5           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&) [68]
[233]    0.0    0.00    0.00       5         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [233]
                0.00    0.00      20/20          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::size() const [178]
                0.00    0.00      10/10          std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const [202]
                0.00    0.00       5/20          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [188]
-----------------------------------------------
                0.00    0.00       5/5           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [110]
[234]    0.0    0.00    0.00       5         std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [234]
                0.00    0.00      20/20          std::vector<int, std::allocator<int> >::size() const [179]
                0.00    0.00      10/10          std::vector<int, std::allocator<int> >::max_size() const [203]
                0.00    0.00       5/20          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [188]
-----------------------------------------------
                0.00    0.00       5/5           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [110]
[235]    0.0    0.00    0.00       5         std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [235]
                0.00    0.00       5/5           std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [239]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [224]
[236]    0.0    0.00    0.00       5         std::allocator_traits<std::allocator<DisaggregatedScore> >::deallocate(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, unsigned long) [236]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<DisaggregatedScore>::deallocate(DisaggregatedScore*, unsigned long) [227]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long) [82]
[237]    0.0    0.00    0.00       5         std::allocator_traits<std::allocator<DisaggregatedScore> >::allocate(std::allocator<DisaggregatedScore>&, unsigned long) [237]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<DisaggregatedScore>::allocate(unsigned long, void const*) [228]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [225]
[238]    0.0    0.00    0.00       5         std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [238]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [229]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [235]
[239]    0.0    0.00    0.00       5         std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [239]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [230]
-----------------------------------------------
                0.00    0.00       5/5           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&) [110]
[240]    0.0    0.00    0.00       5         std::vector<int, std::allocator<int> >::begin() [240]
                0.00    0.00       5/12559826     __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [124]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() const [250]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [247]
[241]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore const* const&) [241]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<int, std::allocator<int> >::end() const [252]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator-(long) const [249]
[242]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [242]
-----------------------------------------------
                0.00    0.00       1/4           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [96]
                0.00    0.00       1/4           void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&) [114]
                0.00    0.00       1/4           void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&) [98]
                0.00    0.00       1/4           void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&) [113]
[243]    0.0    0.00    0.00       4         DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&) [243]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<Coordinate>::allocator() [254]
[244]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Coordinate>::new_allocator() [244]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<Coordinate>::~allocator() [255]
[245]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Coordinate>::~new_allocator() [245]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [251]
[246]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [246]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [251]
[247]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [247]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore const* const&) [241]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::back() const [253]
[248]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator*() const [248]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::back() const [253]
[249]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator-(long) const [249]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [242]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [251]
[250]    0.0    0.00    0.00       2         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() const [250]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore const* const&) [241]
-----------------------------------------------
                0.00    0.00       1/2           print_board_fancy(Board const*) [273]
                0.00    0.00       1/2           print_board(Board const*) [272]
[251]    0.0    0.00    0.00       2         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [251]
                0.00    0.00       2/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() const [250]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [247]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [246]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::back() const [253]
[252]    0.0    0.00    0.00       2         std::vector<int, std::allocator<int> >::end() const [252]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [242]
-----------------------------------------------
                0.00    0.00       1/2           print_board_fancy(Board const*) [273]
                0.00    0.00       1/2           print_board(Board const*) [272]
[253]    0.0    0.00    0.00       2         std::vector<int, std::allocator<int> >::back() const [253]
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::end() const [252]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator-(long) const [249]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator*() const [248]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl() [257]
[254]    0.0    0.00    0.00       2         std::allocator<Coordinate>::allocator() [254]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Coordinate>::new_allocator() [244]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::~_Vector_impl() [258]
[255]    0.0    0.00    0.00       2         std::allocator<Coordinate>::~allocator() [255]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Coordinate>::~new_allocator() [245]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Coordinate*>(Coordinate*, Coordinate*) [265]
[256]    0.0    0.00    0.00       2         void std::_Destroy_aux<true>::__destroy<Coordinate*>(Coordinate*, Coordinate*) [256]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_base() [260]
[257]    0.0    0.00    0.00       2         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl() [257]
                0.00    0.00       2/2           std::allocator<Coordinate>::allocator() [254]
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl_data::_Vector_impl_data() [259]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base() [261]
[258]    0.0    0.00    0.00       2         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::~_Vector_impl() [258]
                0.00    0.00       2/2           std::allocator<Coordinate>::~allocator() [255]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl() [257]
[259]    0.0    0.00    0.00       2         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl_data::_Vector_impl_data() [259]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::vector() [262]
[260]    0.0    0.00    0.00       2         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_base() [260]
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl() [257]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [263]
[261]    0.0    0.00    0.00       2         std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base() [261]
                0.00    0.00       2/12          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [193]
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::~_Vector_impl() [258]
-----------------------------------------------
                0.00    0.00       2/2           Board::Board() [280]
[262]    0.0    0.00    0.00       2         std::vector<Coordinate, std::allocator<Coordinate> >::vector() [262]
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_base() [260]
-----------------------------------------------
                0.00    0.00       2/2           Board::~Board() [281]
[263]    0.0    0.00    0.00       2         std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [263]
                0.00    0.00       2/22          std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() [173]
                0.00    0.00       2/2           void std::_Destroy<Coordinate*, Coordinate>(Coordinate*, Coordinate*, std::allocator<Coordinate>&) [266]
                0.00    0.00       2/2           std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base() [261]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&) [42]
[264]    0.0    0.00    0.00       2         std::remove_reference<Coordinate&>::type&& std::move<Coordinate&>(Coordinate&) [264]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Coordinate*, Coordinate>(Coordinate*, Coordinate*, std::allocator<Coordinate>&) [266]
[265]    0.0    0.00    0.00       2         void std::_Destroy<Coordinate*>(Coordinate*, Coordinate*) [265]
                0.00    0.00       2/2           void std::_Destroy_aux<true>::__destroy<Coordinate*>(Coordinate*, Coordinate*) [256]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [263]
[266]    0.0    0.00    0.00       2         void std::_Destroy<Coordinate*, Coordinate>(Coordinate*, Coordinate*, std::allocator<Coordinate>&) [266]
                0.00    0.00       2/2           void std::_Destroy<Coordinate*>(Coordinate*, Coordinate*) [265]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [61]
[267]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z10copy_board5Board [267]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [276]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [61]
[268]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z11score_total18DisaggregatedScore [268]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [278]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [61]
[269]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z13get_best_moveP5BoardiiibbiPA10000_8PVRecord [269]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [279]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [61]
[270]    0.0    0.00    0.00       1         _GLOBAL__sub_I_pv_table [270]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [274]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[271]    0.0    0.00    0.00       1         zero_table(PVRecord (*) [10000]) [271]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[272]    0.0    0.00    0.00       1         print_board(Board const*) [272]
                0.00    0.00      14/14          print_board(Board const*)::{lambda()#1}::operator()() const [192]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::back() const [253]
                0.00    0.00       1/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [251]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[273]    0.0    0.00    0.00       1         print_board_fancy(Board const*) [273]
                0.00    0.00      16/16          print_board_fancy(Board const*)::{lambda(int const (*) [8][8], int)#3}::operator()(int const (*) [8][8], int) const [189]
                0.00    0.00       5/1671        std::setw(int) [165]
                0.00    0.00       1/2           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [251]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::back() const [253]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_pv_table [270]
[274]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [274]
-----------------------------------------------
                                   1             __static_initialization_and_destruction_0(int, int) [275]
                0.00    0.00       1/1           __libc_csu_init [61]
[275]    0.0    0.00    0.00       1+1       __static_initialization_and_destruction_0(int, int) [275]
                                   1             __static_initialization_and_destruction_0(int, int) [275]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10copy_board5Board [267]
[276]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [276]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10print_movePK5Board4Move [60]
[277]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [277]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z11score_total18DisaggregatedScore [268]
[278]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [278]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z13get_best_moveP5BoardiiibbiPA10000_8PVRecord [269]
[279]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [279]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[280]    0.0    0.00    0.00       1         Board::Board() [280]
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::vector() [262]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [304]
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::vector() [302]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[281]    0.0    0.00    0.00       1         Board::~Board() [281]
                0.00    0.00       2/2           std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [263]
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector() [303]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [305]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<DisaggregatedScore>::allocator() [286]
[282]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<DisaggregatedScore>::new_allocator() [282]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<DisaggregatedScore>::~allocator() [287]
[283]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<DisaggregatedScore>::~new_allocator() [283]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::allocator() [288]
[284]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::new_allocator() [284]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::~allocator() [289]
[285]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::~new_allocator() [285]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl() [292]
[286]    0.0    0.00    0.00       1         std::allocator<DisaggregatedScore>::allocator() [286]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<DisaggregatedScore>::new_allocator() [282]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::~_Vector_impl() [293]
[287]    0.0    0.00    0.00       1         std::allocator<DisaggregatedScore>::~allocator() [287]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<DisaggregatedScore>::~new_allocator() [283]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [297]
[288]    0.0    0.00    0.00       1         std::allocator<int>::allocator() [288]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::new_allocator() [284]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [298]
[289]    0.0    0.00    0.00       1         std::allocator<int>::~allocator() [289]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::~new_allocator() [285]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [307]
[290]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [290]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<int*>(int*, int*) [309]
[291]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [291]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_base() [295]
[292]    0.0    0.00    0.00       1         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl() [292]
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl_data::_Vector_impl_data() [294]
                0.00    0.00       1/1           std::allocator<DisaggregatedScore>::allocator() [286]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base() [296]
[293]    0.0    0.00    0.00       1         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::~_Vector_impl() [293]
                0.00    0.00       1/1           std::allocator<DisaggregatedScore>::~allocator() [287]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl() [292]
[294]    0.0    0.00    0.00       1         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl_data::_Vector_impl_data() [294]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::vector() [302]
[295]    0.0    0.00    0.00       1         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_base() [295]
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl() [292]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector() [303]
[296]    0.0    0.00    0.00       1         std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base() [296]
                0.00    0.00       1/6           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [224]
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::~_Vector_impl() [293]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [300]
[297]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [297]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [299]
                0.00    0.00       1/1           std::allocator<int>::allocator() [288]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [301]
[298]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [298]
                0.00    0.00       1/1           std::allocator<int>::~allocator() [289]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [297]
[299]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [299]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [304]
[300]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [300]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [297]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [305]
[301]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [301]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [298]
                0.00    0.00       1/6           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [225]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board() [280]
[302]    0.0    0.00    0.00       1         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::vector() [302]
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_base() [295]
-----------------------------------------------
                0.00    0.00       1/1           Board::~Board() [281]
[303]    0.0    0.00    0.00       1         std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector() [303]
                0.00    0.00       1/11          std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() [194]
                0.00    0.00       1/1           void std::_Destroy<DisaggregatedScore*, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [308]
                0.00    0.00       1/1           std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base() [296]
-----------------------------------------------
                0.00    0.00       1/1           Board::Board() [280]
[304]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::vector() [304]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [300]
-----------------------------------------------
                0.00    0.00       1/1           Board::~Board() [281]
[305]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::~vector() [305]
                0.00    0.00       1/11          std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [195]
                0.00    0.00       1/1           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [310]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [301]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&) [97]
[306]    0.0    0.00    0.00       1         std::remove_reference<DisaggregatedScore&>::type&& std::move<DisaggregatedScore&>(DisaggregatedScore&) [306]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<DisaggregatedScore*, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [308]
[307]    0.0    0.00    0.00       1         void std::_Destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [307]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [290]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector() [303]
[308]    0.0    0.00    0.00       1         void std::_Destroy<DisaggregatedScore*, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [308]
                0.00    0.00       1/1           void std::_Destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [307]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [310]
[309]    0.0    0.00    0.00       1         void std::_Destroy<int*>(int*, int*) [309]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [291]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [305]
[310]    0.0    0.00    0.00       1         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [310]
                0.00    0.00       1/1           void std::_Destroy<int*>(int*, int*) [309]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [267] _GLOBAL__sub_I__Z10copy_board5Board [123] __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator*() const [68] void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore const&>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore const&)
  [60] _GLOBAL__sub_I__Z10print_movePK5Board4Move [27] __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::operator-(long) const [98] void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_realloc_insert<DisaggregatedScore>(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >, DisaggregatedScore&&)
 [268] _GLOBAL__sub_I__Z11score_total18DisaggregatedScore [174] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::base() const [213] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_nothrow_relocate(std::integral_constant<bool, true>)
 [269] _GLOBAL__sub_I__Z13get_best_moveP5BoardiiibbiPA10000_8PVRecord [65] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [52] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end()
 [270] _GLOBAL__sub_I_pv_table [34] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [21] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back()
   [5] apply_move(Board*, Move) [246] __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator*() const [112] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::begin()
 [115] apply_null(Board*)    [247] __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::operator-(long) const [133] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::pop_back()
  [62] flip_color(Color)     [248] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator*() const [97] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore&&)
  [39] init_board(Board*)    [249] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator-(long) const [23] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::push_back(DisaggregatedScore const&)
 [125] is_capture(Move)      [175] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [302] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::vector()
 [109] print_move(Board const*, Move) [128] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [303] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~vector()
 [271] zero_table(PVRecord (*) [10000]) [77] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const [214] std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)
  [47] max_ray_len(int, int, int, int) [176] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() const [215] std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&)
  [13] order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000]) [199] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() const [38] void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
 [272] print_board(Board const*) [200] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [216] std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>)
  [80] score_total(DisaggregatedScore) [201] std::vector<Coordinate, std::allocator<Coordinate> >::_M_check_len(unsigned long, char const*) const [217] std::vector<int, std::allocator<int> >::_S_use_relocate()
   [7] stable_eval(Board*, int, int, int) [138] std::vector<Coordinate, std::allocator<Coordinate> >::size() const [110] void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)
   [4] change_piece(Board*, Coordinate, Piece, bool) [177] std::vector<Coordinate, std::allocator<Coordinate> >::max_size() const [218] std::vector<int, std::allocator<int> >::_S_nothrow_relocate(std::integral_constant<bool, true>)
  [48] piece_equals(Piece, Piece) [233] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_check_len(unsigned long, char const*) const [127] std::vector<int, std::allocator<int> >::end()
  [15] add_eval_diff(Board*, Coordinate, Piece, bool) [250] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::end() const [59] std::vector<int, std::allocator<int> >::back()
   [3] get_best_move(Board*, int, int, int, bool, bool, int, PVRecord (*) [10000]) [251] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::back() const [240] std::vector<int, std::allocator<int> >::begin()
  [25] quintant_from(Coordinate) [178] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::size() const [79] std::vector<int, std::allocator<int> >::pop_back()
  [12] generate_moves(Board const*, MoveList*, bool) [202] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::max_size() const [31] std::vector<int, std::allocator<int> >::push_back(int&&)
  [88] is_irreversible(Move, Piece) [234] std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [304] std::vector<int, std::allocator<int> >::vector()
  [32] kronecker_piece(Board const*, Coordinate, Piece) [252] std::vector<int, std::allocator<int> >::end() const [305] std::vector<int, std::allocator<int> >::~vector()
 [273] print_board_fancy(Board const*) [253] std::vector<int, std::allocator<int> >::back() const [226] std::ios_base::setf(std::_Ios_Fmtflags)
  [37] generate_king_moves(Board const*, MoveList*, Coordinate, bool) [179] std::vector<int, std::allocator<int> >::size() const [164] std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  [22] generate_pawn_moves(Board const*, MoveList*, Coordinate, bool) [203] std::vector<int, std::allocator<int> >::max_size() const [170] std::ios_base::unsetf(std::_Ios_Fmtflags)
  [30] generate_rook_moves(Board const*, MoveList*, Coordinate, bool) [254] std::allocator<Coordinate>::allocator() [148] int* std::__miter_base<int*>(int*)
   [9] shallow_greedy_move(Board*, Move*) [255] std::allocator<Coordinate>::~allocator() [167] Coordinate* std::__niter_base<Coordinate*>(Coordinate*)
  [19] update_king_attacks(Board*, Coordinate, Color, bool) [286] std::allocator<DisaggregatedScore>::allocator() [172] DisaggregatedScore* std::__niter_base<DisaggregatedScore*>(DisaggregatedScore*)
  [11] update_weak_squares(Board*, Color, int) [287] std::allocator<DisaggregatedScore>::~allocator() [147] int* std::__niter_base<int*>(int*)
  [17] add_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool) [288] std::allocator<int>::allocator() [150] int* std::__niter_wrap<int*>(int* const&, int*)
  [33] generate_queen_moves(Board const*, MoveList*, Coordinate, bool) [289] std::allocator<int>::~allocator() [186] Coordinate* std::__relocate_a<Coordinate*, Coordinate*, std::allocator<Coordinate> >(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
  [10] update_xrays_by_pawn(Board*, Coordinate, Piece, bool) [256] void std::_Destroy_aux<true>::__destroy<Coordinate*>(Coordinate*, Coordinate*) [219] DisaggregatedScore* std::__relocate_a<DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore> >(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  [51] generate_bishop_moves(Board const*, MoveList*, Coordinate, bool) [290] void std::_Destroy_aux<true>::__destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*) [220] int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
  [20] generate_knight_moves(Board const*, MoveList*, Coordinate, bool) [291] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [151] int* std::move_backward<int*, int*>(int*, int*, int*)
  [28] update_least_advanced(Board*, Color, int) [204] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_allocate(unsigned long) [187] std::enable_if<std::__is_bitwise_relocatable<Coordinate, void>::value, Coordinate*>::type std::__relocate_a_1<Coordinate, Coordinate>(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&)
   [8] update_xrays_by_piece(Board*, Coordinate, Piece, bool) [257] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::_Vector_impl() [221] std::enable_if<std::__is_bitwise_relocatable<DisaggregatedScore, void>::value, DisaggregatedScore*>::type std::__relocate_a_1<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
  [14] generate_moves_for_piece(Board const*, MoveList*, Piece, Coordinate, bool) [258] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl::~_Vector_impl() [222] std::enable_if<std::__is_bitwise_relocatable<int, void>::value, int*>::type std::__relocate_a_1<int, int>(int*, int*, int*, std::allocator<int>&)
  [35] add_pawn_move_color_guard(Board const*, MoveList*, Coordinate, Coordinate, Color, bool) [193] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_deallocate(Coordinate*, unsigned long) [103] void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [274] __static_initialization_and_destruction_0(int, int) [259] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_impl_data::_Vector_impl_data() [67] void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
 [275] __static_initialization_and_destruction_0(int, int) [173] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_M_get_Tp_allocator() [72] void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [276] __static_initialization_and_destruction_0(int, int) [260] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::_Vector_base() [93] void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
 [277] __static_initialization_and_destruction_0(int, int) [261] std::_Vector_base<Coordinate, std::allocator<Coordinate> >::~_Vector_base() [106] int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [278] __static_initialization_and_destruction_0(int, int) [82] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_allocate(unsigned long) [94] int* std::__unguarded_partition<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
 [279] __static_initialization_and_destruction_0(int, int) [292] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::_Vector_impl() [152] int* std::__copy_move_backward_a<true, int*, int*>(int*, int*, int*)
  [75] parity(Coordinate)    [293] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl::~_Vector_impl() [99] void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  [36] evaluate(Board*)      [224] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_deallocate(DisaggregatedScore*, unsigned long) [63] void std::__final_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  [24] is_valid(Coordinate)  [294] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_impl_data::_Vector_impl_data() [107] void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [108] print_pv(Board*, int, int, PVRecord (*) [10000]) [194] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_M_get_Tp_allocator() [105] void std::__move_median_to_first<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  [18] get_piece(Board const*, Coordinate) [295] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_Vector_base() [83] int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
   [6] undo_move(Board*, Move) [296] std::_Vector_base<DisaggregatedScore, std::allocator<DisaggregatedScore> >::~_Vector_base() [153] int* std::__copy_move_backward_a2<true, int*, int*>(int*, int*, int*)
 [116] undo_null(Board*)     [235] std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [100] void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [280] Board::Board()        [297] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [85] void std::__unguarded_linear_insert<int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
 [281] Board::~Board()       [298] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [104] void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [196] __gnu_cxx::new_allocator<Coordinate>::deallocate(Coordinate*, unsigned long) [225] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [95] void std::__unguarded_insertion_sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  [58] void __gnu_cxx::new_allocator<Coordinate>::destroy<Coordinate>(Coordinate*) [299] std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [71] int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
 [197] __gnu_cxx::new_allocator<Coordinate>::allocate(unsigned long, void const*) [195] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [92] int* std::__unguarded_partition_pivot<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
  [66] void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate const&>(Coordinate*, Coordinate const&) [300] std::_Vector_base<int, std::allocator<int> >::_Vector_base() [188] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  [46] void __gnu_cxx::new_allocator<Coordinate>::construct<Coordinate, Coordinate>(Coordinate*, Coordinate&&) [301] std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [169] unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
  [89] __gnu_cxx::new_allocator<Coordinate>::new_allocator(__gnu_cxx::new_allocator<Coordinate> const&) [205] std::allocator_traits<std::allocator<Coordinate> >::deallocate(std::allocator<Coordinate>&, Coordinate*, unsigned long) [154] std::__lg(long)
 [244] __gnu_cxx::new_allocator<Coordinate>::new_allocator() [49] void std::allocator_traits<std::allocator<Coordinate> >::destroy<Coordinate>(std::allocator<Coordinate>&, Coordinate*) [264] std::remove_reference<Coordinate&>::type&& std::move<Coordinate&>(Coordinate&)
 [245] __gnu_cxx::new_allocator<Coordinate>::~new_allocator() [206] std::allocator_traits<std::allocator<Coordinate> >::allocate(std::allocator<Coordinate>&, unsigned long) [306] std::remove_reference<DisaggregatedScore&>::type&& std::move<DisaggregatedScore&>(DisaggregatedScore&)
 [227] __gnu_cxx::new_allocator<DisaggregatedScore>::deallocate(DisaggregatedScore*, unsigned long) [180] std::allocator_traits<std::allocator<Coordinate> >::max_size(std::allocator<Coordinate> const&) [142] std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>&>(std::remove_reference&&)
 [129] void __gnu_cxx::new_allocator<DisaggregatedScore>::destroy<DisaggregatedScore>(DisaggregatedScore*) [53] void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate const&>(std::allocator<Coordinate>&, Coordinate*, Coordinate const&) [146] std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>&>(std::remove_reference&&)
 [228] __gnu_cxx::new_allocator<DisaggregatedScore>::allocate(unsigned long, void const*) [44] void std::allocator_traits<std::allocator<Coordinate> >::construct<Coordinate, Coordinate>(std::allocator<Coordinate>&, Coordinate*, Coordinate&&) [137] std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}&>(std::remove_reference&&)
  [54] void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore const&>(DisaggregatedScore*, DisaggregatedScore const&) [236] std::allocator_traits<std::allocator<DisaggregatedScore> >::deallocate(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, unsigned long) [143] std::remove_reference<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>::type&& std::move<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}&>(std::remove_reference&&)
 [113] void __gnu_cxx::new_allocator<DisaggregatedScore>::construct<DisaggregatedScore, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore&&) [131] void std::allocator_traits<std::allocator<DisaggregatedScore> >::destroy<DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*) [78] std::remove_reference<int&>::type&& std::move<int&>(int&)
 [282] __gnu_cxx::new_allocator<DisaggregatedScore>::new_allocator() [237] std::allocator_traits<std::allocator<DisaggregatedScore> >::allocate(std::allocator<DisaggregatedScore>&, unsigned long) [165] std::setw(int)
 [283] __gnu_cxx::new_allocator<DisaggregatedScore>::~new_allocator() [207] std::allocator_traits<std::allocator<DisaggregatedScore> >::max_size(std::allocator<DisaggregatedScore> const&) [69] void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2})
 [229] __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [55] void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore const&>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore const&) [45] void std::sort<int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(int*, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}, order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1})
 [130] void __gnu_cxx::new_allocator<int>::destroy<int>(int*) [114] void std::allocator_traits<std::allocator<DisaggregatedScore> >::construct<DisaggregatedScore, DisaggregatedScore>(std::allocator<DisaggregatedScore>&, DisaggregatedScore*, DisaggregatedScore&&) [101] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&)
 [230] __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [238] std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [70] void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>)
  [91] void __gnu_cxx::new_allocator<int>::construct<int, int>(int*, int&&) [132] void std::allocator_traits<std::allocator<int> >::destroy<int>(std::allocator<int>&, int*) [56] void std::__sort<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> >(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>)
 [284] __gnu_cxx::new_allocator<int>::new_allocator() [239] std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [223] Coordinate&& std::forward<Coordinate>(std::remove_reference<Coordinate>::type&)
 [285] __gnu_cxx::new_allocator<int>::~new_allocator() [208] std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [243] DisaggregatedScore&& std::forward<DisaggregatedScore>(std::remove_reference<DisaggregatedScore>::type&)
  [50] __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::__normal_iterator(Coordinate* const&) [64] void std::allocator_traits<std::allocator<int> >::construct<int, int>(std::allocator<int>&, int*, int&&) [57] Coordinate const& std::forward<Coordinate const&>(std::remove_reference<Coordinate const&>::type&)
  [74] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore* const&) [149] int* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*) [126] DisaggregatedScore const& std::forward<DisaggregatedScore const&>(std::remove_reference<DisaggregatedScore const&>::type&)
 [241] __gnu_cxx::__normal_iterator<DisaggregatedScore const*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::__normal_iterator(DisaggregatedScore const* const&) [181] std::vector<Coordinate, std::allocator<Coordinate> >::_S_max_size(std::allocator<Coordinate> const&) [87] int&& std::forward<int>(std::remove_reference<int>::type&)
 [242] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [182] std::vector<Coordinate, std::allocator<Coordinate> >::_S_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&) [265] void std::_Destroy<Coordinate*>(Coordinate*, Coordinate*)
 [124] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [41] void std::vector<Coordinate, std::allocator<Coordinate> >::emplace_back<Coordinate>(Coordinate&&) [266] void std::_Destroy<Coordinate*, Coordinate>(Coordinate*, Coordinate*, std::allocator<Coordinate>&)
 [140] __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#2}>&&) [183] std::vector<Coordinate, std::allocator<Coordinate> >::_S_do_relocate(Coordinate*, Coordinate*, Coordinate*, std::allocator<Coordinate>&, std::integral_constant<bool, true>) [307] void std::_Destroy<DisaggregatedScore*>(DisaggregatedScore*, DisaggregatedScore*)
 [135] bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int, int*>(int&, int*) [184] std::vector<Coordinate, std::allocator<Coordinate> >::_S_use_relocate() [308] void std::_Destroy<DisaggregatedScore*, DisaggregatedScore>(DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&)
 [144] __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<{lambda(int, int)#1}>&&) [73] void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate const&>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate const&) [309] void std::_Destroy<int*>(int*, int*)
  [86] bool __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int, int*>(int&, int*) [43] void std::vector<Coordinate, std::allocator<Coordinate> >::_M_realloc_insert<Coordinate>(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >, Coordinate&&) [310] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [155] __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::_Iter_comp_iter({lambda(int, int)#2}) [185] std::vector<Coordinate, std::allocator<Coordinate> >::_S_nothrow_relocate(std::integral_constant<bool, true>) [102] void std::iter_swap<int*, int*>(int*, int*)
 [136] bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>::operator()) [26] std::vector<Coordinate, std::allocator<Coordinate> >::end() [160] std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
 [157] __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::_Iter_comp_iter({lambda(int, int)#1}) [16] std::vector<Coordinate, std::allocator<Coordinate> >::back() [159] std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  [90] bool __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()<int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()>(int*, __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>::operator()) [111] std::vector<Coordinate, std::allocator<Coordinate> >::begin() [161] std::operator~(std::_Ios_Fmtflags)
 [141] __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [29] std::vector<Coordinate, std::allocator<Coordinate> >::pop_back() [162] std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
 [145] __gnu_cxx::__ops::_Val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__val_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<__gnu_cxx::__ops::_Val_comp_iter>) [42] std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate&&) [163] std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
 [156] __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}>(__gnu_cxx::__ops::_Iter_comp_iter) [40] std::vector<Coordinate, std::allocator<Coordinate> >::push_back(Coordinate const&) [134] order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#2}::operator()(int, int) const
 [158] __gnu_cxx::__ops::_Iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}> __gnu_cxx::__ops::__iter_comp_iter<order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}>(__gnu_cxx::__ops::_Iter_comp_iter) [262] std::vector<Coordinate, std::allocator<Coordinate> >::vector() [81] order_moves(Board*, MoveList*, int, int, PVRecord (*) [10000])::{lambda(int, int)#1}::operator()(int, int) const
 [198] __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::difference_type __gnu_cxx::operator-<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >(__gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&, __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > > const&) [263] std::vector<Coordinate, std::allocator<Coordinate> >::~vector() [192] print_board(Board const*)::{lambda()#1}::operator()() const
 [231] __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >::difference_type __gnu_cxx::operator-<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > >(__gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&, __gnu_cxx::__normal_iterator<DisaggregatedScore*, std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> > > const&) [139] std::vector<Coordinate, std::allocator<Coordinate> >::operator[](unsigned long) [84] add_eval_diff(Board*, Coordinate, Piece, bool)::{lambda(int, int)#1}::operator()(int, int) const
 [232] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [209] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_max_size(std::allocator<DisaggregatedScore> const&) [189] print_board_fancy(Board const*)::{lambda(int const (*) [8][8], int)#3}::operator()(int const (*) [8][8], int) const
 [171] __gnu_cxx::new_allocator<Coordinate>::max_size() const [210] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&) [166] print_board_fancy(Board const*)::{lambda(char const*, int)#1}::operator()(char const*, int) const
 [190] __gnu_cxx::new_allocator<DisaggregatedScore>::max_size() const [96] void std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::emplace_back<DisaggregatedScore>(DisaggregatedScore&&) [76] operator new(unsigned long, void*)
 [191] __gnu_cxx::new_allocator<int>::max_size() const [211] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_do_relocate(DisaggregatedScore*, DisaggregatedScore*, DisaggregatedScore*, std::allocator<DisaggregatedScore>&, std::integral_constant<bool, true>) [2] <cycle 1>
 [168] __gnu_cxx::__normal_iterator<Coordinate*, std::vector<Coordinate, std::allocator<Coordinate> > >::base() const [212] std::vector<DisaggregatedScore, std::allocator<DisaggregatedScore> >::_S_use_relocate()
